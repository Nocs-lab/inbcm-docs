{"config":{"lang":["pt"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Documenta\u00e7\u00e3o do projeto","text":""},{"location":"#visao-geral","title":"Vis\u00e3o geral","text":"<p>O Instituto Brasileiro de Museus (IBRAM), estabelecido pela Lei 11.906/2009, lidera a Pol\u00edtica Nacional de Museus (PNM) e tem o objetivo de n\u00e3o apenas gerenciar, mas tamb\u00e9m aprimorar os servi\u00e7os museol\u00f3gicos no Brasil. Isso inclui pol\u00edticas para a aquisi\u00e7\u00e3o e preserva\u00e7\u00e3o de acervos, al\u00e9m de promover a integra\u00e7\u00e3o entre os museus. Uma fun\u00e7\u00e3o crucial do IBRAM \u00e9 administrar o Invent\u00e1rio Nacional de Bens Culturais Musealizados (INBCM), fundamental para catalogar e preservar itens museol\u00f3gicos, bibliogr\u00e1ficos e arquiv\u00edsticos, conforme estipulado pelo Decreto no 8.124 de 2013. Diante da necessidade de manter registros detalhados de todos os museus, surge a demanda por um sistema eficaz que suporte a atualiza\u00e7\u00e3o constante dos dados musealizados. Para atender a essa necessidade, o Laborat\u00f3rio de Redes e Sistemas Computacionais (NOCS Lab), vinculado ao N\u00facleo de Inova\u00e7\u00e3o em Tecnologias Computacionais (NITEC) do IFRN Campus Parnamirim, est\u00e1 desenvolvendo um sistema de automa\u00e7\u00e3o informacional. Essa colabora\u00e7\u00e3o entre o IBRAM e o IFRN, por meio do NOCS Lab, visa aprimorar a gest\u00e3o cultural atrav\u00e9s de tecnologia avan\u00e7ada e processos otimizados, contribuindo significativamente para a preserva\u00e7\u00e3o do patrim\u00f4nio cultural brasileiro.</p>"},{"location":"#conceitos-envolvidos","title":"Conceitos envolvidos","text":""},{"location":"#itens-museologicos","title":"Itens museol\u00f3gicos","text":"<p>Referem-se aos objetos que s\u00e3o coletados e preservados pelos museus devido ao seu valor hist\u00f3rico, art\u00edstico, cient\u00edfico ou cultural. Estes podem incluir artefatos, obras de arte, documentos hist\u00f3ricos, e mais.</p>"},{"location":"#bens-bibliograficos","title":"Bens bibliogr\u00e1ficos","text":"<p>S\u00e3o itens que pertencem \u00e0s cole\u00e7\u00f5es de bibliotecas, incluindo livros, peri\u00f3dicos, manuscritos, e outros materiais impressos ou digitais que s\u00e3o conservados por seu conte\u00fado informativo e cultural.</p>"},{"location":"#bens-arquivisticos","title":"Bens arquiv\u00edsticos","text":"<p>Refere-se a documentos ou informa\u00e7\u00f5es acumulados, resultantes de atividades governamentais, institucionais, corporativas ou pessoais, que s\u00e3o preservados devido ao seu valor permanente, como evid\u00eancia ou informa\u00e7\u00e3o.</p>"},{"location":"#lei-119062009","title":"Lei 11.906/2009","text":"<p>\u00c9 a lei que estabeleceu o Instituto Brasileiro de Museus (IBRAM) e delineou suas responsabilidades na gest\u00e3o e implementa\u00e7\u00e3o da Pol\u00edtica Nacional de Museus (PNM). Esta legisla\u00e7\u00e3o serve como base legal para a organiza\u00e7\u00e3o e opera\u00e7\u00e3o dos museus no Brasil.</p>"},{"location":"#decreto-no-8124-de-2013","title":"Decreto no 8.124 de 2013","text":"<p>Este decreto regulamenta a Lei 11.906/2009, estabelecendo diretrizes espec\u00edficas para a preserva\u00e7\u00e3o, a cataloga\u00e7\u00e3o e a gest\u00e3o dos bens culturais musealizados. Define tamb\u00e9m os procedimentos e responsabilidades para a manuten\u00e7\u00e3o do Invent\u00e1rio Nacional de Bens Culturais Musealizados (INBCM).</p>"},{"location":"#inventario-nacional-de-bens-culturais-musealizados-inbcm","title":"Invent\u00e1rio Nacional de Bens Culturais Musealizados (INBCM)","text":"<p>\u00c9 um registro centralizado que visa documentar, catalogar e garantir a preserva\u00e7\u00e3o dos bens culturais que fazem parte dos museus brasileiros. Este instrumento \u00e9 essencial para a gest\u00e3o efetiva dos acervos museol\u00f3gicos, bibliogr\u00e1ficos e arquiv\u00edsticos em todo o pa\u00eds.</p>"},{"location":"#registro-de-museus","title":"Registro de museus","text":"<p>\u00c9 o processo pelo qual os museus se qualificam e s\u00e3o reconhecidos oficialmente pelo governo. Isso implica em uma s\u00e9rie de responsabilidades, incluindo a obriga\u00e7\u00e3o de fornecer informa\u00e7\u00f5es detalhadas sobre seus acervos ao IBRAM.</p>"},{"location":"#preservacao-digital-e-fisica","title":"Preserva\u00e7\u00e3o digital e f\u00edsica","text":"<p>Envolve estrat\u00e9gias e tecnologias aplicadas para garantir a integridade e acessibilidade de longo prazo dos bens culturais, tanto em formatos f\u00edsicos quanto digitais.</p>"},{"location":"#automacao-informacional","title":"Automa\u00e7\u00e3o informacional","text":"<p>Refere-se ao uso de tecnologias da informa\u00e7\u00e3o e comunica\u00e7\u00e3o para automatizar a gest\u00e3o de dados e informa\u00e7\u00f5es, especialmente \u00fatil em contextos onde grandes volumes de dados, como em museus, precisam ser gerenciados de forma eficiente e precisa.</p>"},{"location":"#interoperabilidade-de-dados","title":"Interoperabilidade de dados","text":"<p>A capacidade de diferentes sistemas e organiza\u00e7\u00f5es trabalharem juntos, compartilhando dados e informa\u00e7\u00f5es de maneira eficaz, o que \u00e9 crucial para a integra\u00e7\u00e3o dos dados dos museus em uma plataforma comum.</p>"},{"location":"#diagrama-de-caso-de-uso-funcionalidades","title":"Diagrama de Caso de Uso (Funcionalidades)","text":"<pre><code>flowchart LR\n    Usu\u00e1rio --&gt;|Download de arquivo| DownloadArquivos[(\"Realizar download de arquivos enviados\")]\n    Usu\u00e1rio --&gt;|Download de recibo| DownloadRecibo[(\"Realizar download de recibo\")]\n    Usu\u00e1rio --&gt;|Visualizar detalhes| VisualizarDetalhes[(\"Visualizar detalhes de uma declara\u00e7\u00e3o\")]\n    Usu\u00e1rio --&gt;|Visualizar declara\u00e7\u00f5es| VisualizarDeclaracoes[(\"Visualizar declara\u00e7\u00f5es enviadas\")]  \n    Usu\u00e1rio --&gt;|Realizar download| RealizarDownloadTemplate[(\"Realizar download de template\")]\n    Usu\u00e1rio --&gt;|Preencher declara\u00e7\u00e3o| PreencherD[(\"Preencher declara\u00e7\u00e3o\")]\n    Usu\u00e1rio --&gt;|Enviar declara\u00e7\u00e3o| EnviarD[(\"Enviar declara\u00e7\u00e3o\")]\n\n    PreencherD --&gt;|Include| SubmeterArquivo[(\"Submeter arquivos\")]\n    VisualizarPendencias[(Visualizar pend\u00eancias)] --&gt;|Extend| EnviarD\n\n    Funcion\u00e1rioIBRAM --&gt; |Visualizar dashboard| VisualizarDashboard[(\"Visualizar dashboard com indicadores do INBCM\")] \n    Funcion\u00e1rioIBRAM --&gt; |Visualizar declara\u00e7\u00f5es| VisualizarDeclaracoesRecebidas[(\"Visualizar declara\u00e7\u00f5es recebidas\")] \n    Funcion\u00e1rioIBRAM --&gt; |Modificar status| ModificarStatus[(\"Modificar status de declara\u00e7\u00e3o\")]</code></pre> <p>O diagrama de caso de uso apresentado detalha as fun\u00e7\u00f5es acess\u00edveis para dois atores principais, \"Usu\u00e1rio\" e \"Funcion\u00e1rio IBRAM\". Para o \"Usu\u00e1rio\", as funcionalidades incluem gerenciamento completo de declara\u00e7\u00f5es, desde o preenchimento e envio at\u00e9 a visualiza\u00e7\u00e3o de detalhes e o download de recibos. Para o \"Funcion\u00e1rio IBRAM\", as funcionalidades focam na administra\u00e7\u00e3o das declara\u00e7\u00f5es recebidas, visualiza\u00e7\u00e3o de indicadores de desempenho no dashboard e a habilidade de alterar o status das declara\u00e7\u00f5es. Este diagrama serve como uma ferramenta essencial para entender as intera\u00e7\u00f5es entre usu\u00e1rios e sistema, facilitando o desenvolvimento e a operacionaliza\u00e7\u00e3o da plataforma.</p>"},{"location":"#arquitetura-do-projeto-inbcm","title":"Arquitetura do projeto INBCM","text":""},{"location":"#objetivos-da-arquitetura","title":"Objetivos da arquitetura","text":"<p>A arquitetura do projeto INBCM foi concebida para ser modular, robusta e escal\u00e1vel, visando atender a uma ampla gama de requisitos e cen\u00e1rios de uso. Buscamos criar uma plataforma que possa evoluir e se adaptar \u00e0s necessidades futuras, mantendo a integridade, seguran\u00e7a e acessibilidade dos dados.</p> <pre><code>graph LR\n    A(Frontend User - ReactJS) &lt;--&gt; L{Balanceador de carga}\n    C(Frontend Admin - ReactJS) &lt;--&gt; L{Balanceador de carga}\n    D(Tainacan - Wordpress) &lt;--&gt; L{Balanceador de carga}\n    L{Balanceador de carga} &lt;--&gt; E{Backend - NodeJs}\n    E{Backend - NodeJs} &lt;--&gt; F[(Mongo)]\n    E{Backend - NodeJs} &lt;--&gt; G(MuseusBR)\n    %%G(MuseusBR) &lt;--&gt; H(API do MuseusBR)\n    %%E{Backend - NodeJs} &lt;--&gt; I(RabbitMQ)\n    %%I(RabbitMQ) --&gt; J(Processador arquivos)</code></pre>"},{"location":"#componentes-da-arquitetura-frontend","title":"Componentes da arquitetura (Frontend)","text":""},{"location":"#um-plugin-de-extensao-do-tainacan","title":"Um plugin de extens\u00e3o do Tainacan","text":"<p>O plugin para extens\u00e3o do Tainacan permitir\u00e1 aos museus e institui\u00e7\u00f5es culturais integrarem suas cole\u00e7\u00f5es ao INBCM diretamente do painel de administra\u00e7\u00e3o do Tainacan. Este plugin oferece uma interface intuitiva para o envio de invent\u00e1rios e consulta de dados, garantindo uma experi\u00eancia de usu\u00e1rio uniforme e integrada.</p>"},{"location":"#aplicacao-web-inbcm","title":"Aplica\u00e7\u00e3o Web INBCM","text":"<p>A aplica\u00e7\u00e3o web do INBCM serve como o ponto central para usu\u00e1rios que n\u00e3o utilizam o Tainacan. Aqui, os usu\u00e1rios podem baixar templates de invent\u00e1rio, preencher e submeter seus arquivos para an\u00e1lise e inclus\u00e3o no sistema. Al\u00e9m disso, esta plataforma permite a consulta de itens museol\u00f3gicos j\u00e1 catalogados, oferecendo filtros e ferramentas de pesquisa avan\u00e7adas.</p>"},{"location":"#aplicacao-web-de-administracao-para-funcionarios-do-ibram","title":"Aplica\u00e7\u00e3o Web de administra\u00e7\u00e3o para funcion\u00e1rios do IBRAM","text":"<p>A aplica\u00e7\u00e3o web de administra\u00e7\u00e3o serve como uma plataforma para que funcion\u00e1rios do IBRAM possam gerenciar e monitorar os processos e dados do sistema, incluindo a revis\u00e3o e valida\u00e7\u00e3o de informa\u00e7\u00f5es enviadas pelos museus.</p>"},{"location":"#backend-nodejs","title":"Backend Node.js","text":"<p>A escolha do Node.js foi devido \u00e0 sua efici\u00eancia com opera\u00e7\u00f5es I/O ass\u00edncronas, sendo ideal para o backend que lidar\u00e1 com um volume significativo de requisi\u00e7\u00f5es e processamento de dados em tempo real. O Node.js atua como a espinha dorsal da plataforma, gerenciando a l\u00f3gica de aplica\u00e7\u00e3o, autentica\u00e7\u00e3o de usu\u00e1rios e intera\u00e7\u00e3o com o banco de dados.</p>"},{"location":"#balanceador-de-carga","title":"Balanceador de carga","text":"<p>Este componente distribui as requisi\u00e7\u00f5es de acesso entre os servidores dispon\u00edveis para otimizar recursos e melhorar a velocidade de resposta, atuando em frente \u00e0s interfaces de usu\u00e1rio e administra\u00e7\u00e3o, bem como ao sistema Tainacan.</p>"},{"location":"#mongo-mongodb","title":"Mongo (MongoDB)","text":"<p>Banco de dados NoSQL usado para armazenar dados de forma flex\u00edvel, provavelmente contendo informa\u00e7\u00f5es sobre os usu\u00e1rios, configura\u00e7\u00f5es do sistema e dados dos museus. MuseusBR: Sistema ou componente que parece ser uma interface ou servi\u00e7o para integrar com uma base de dados ou API externa, provavelmente relacionada a museus brasileiros.</p>"},{"location":"#consideracoes-finais","title":"Considera\u00e7\u00f5es finais","text":"<p>Este documento serve como um guia essencial para o entendimento e a implementa\u00e7\u00e3o do projeto INBCM, que envolve uma colabora\u00e7\u00e3o significativa entre o IBRAM e o NOCS Lab do IFRN. O objetivo principal \u00e9 melhorar a gest\u00e3o dos bens culturais musealizados atrav\u00e9s de uma plataforma de automa\u00e7\u00e3o informacional, promovendo uma gest\u00e3o mais eficaz e a preserva\u00e7\u00e3o do patrim\u00f4nio cultural brasileiro.</p> <p>Atrav\u00e9s deste projeto, busca-se n\u00e3o apenas preservar, mas tamb\u00e9m facilitar o acesso e a interoperabilidade dos dados culturais, beneficiando museus e institui\u00e7\u00f5es culturais com uma integra\u00e7\u00e3o mais eficiente. A moderniza\u00e7\u00e3o do Invent\u00e1rio Nacional de Bens Culturais Musealizados atrav\u00e9s deste sistema digital \u00e9 um passo crucial para a sustentabilidade e a acessibilidade do patrim\u00f4nio cultural nacional.</p> <p>\u00c9 recomend\u00e1vel que o documento seja revisado e atualizado periodicamente para refletir o progresso e as adapta\u00e7\u00f5es do projeto, garantindo que ele continue alinhado com as necessidades culturais e tecnol\u00f3gicas atuais. Este esfor\u00e7o cont\u00ednuo assegurar\u00e1 a prote\u00e7\u00e3o e valoriza\u00e7\u00e3o do patrim\u00f4nio cultural brasileiro para as futuras gera\u00e7\u00f5es.</p>"},{"location":"boas-praticas-api-rest/","title":"Boas pr\u00e1ticas para API REST no Projeto INBCM","text":""},{"location":"boas-praticas-api-rest/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>Este documento destina-se a orientar desenvolvedores e arquitetos de software envolvidos no projeto INBCM na cria\u00e7\u00e3o e manuten\u00e7\u00e3o de APIs REST. As APIs REST s\u00e3o fundamentais para a integra\u00e7\u00e3o de diferentes sistemas e servi\u00e7os, oferecendo uma interface clara e eficiente para o acesso a recursos via HTTP. A ades\u00e3o \u00e0s boas pr\u00e1ticas descritas aqui visa garantir que as APIs sejam seguras, escal\u00e1veis, e f\u00e1ceis de usar.</p>"},{"location":"boas-praticas-api-rest/#conceitos-basicos","title":"Conceitos b\u00e1sicos","text":""},{"location":"boas-praticas-api-rest/#path","title":"Path","text":"<p>O \"path\" \u00e9 a parte da URL que identifica o recurso na API. Ele \u00e9 fundamental para o roteamento das requisi\u00e7\u00f5es at\u00e9 os controladores apropriados. Por exemplo, na URL <code>https://api.inbcm.com.br/users</code>, o path \u00e9 <code>/users</code>.</p>"},{"location":"boas-praticas-api-rest/#resources","title":"Resources","text":"<p>\"Resources\" ou recursos representam entidades ou objetos dentro do dom\u00ednio da aplica\u00e7\u00e3o. Uma API REST deve ser projetada em torno de recursos, que s\u00e3o manipulados atrav\u00e9s de m\u00e9todos HTTP. Por exemplo, um recurso pode ser um usu\u00e1rio, acessado via <code>GET /users/{id}</code> para obter informa\u00e7\u00f5es desse usu\u00e1rio.</p>"},{"location":"boas-praticas-api-rest/#query-string","title":"Query string","text":"<p>A \"query string\" \u00e9 utilizada para passar par\u00e2metros adicionais para a API, como filtros, ordena\u00e7\u00e3o ou pagina\u00e7\u00e3o. Esses par\u00e2metros s\u00e3o adicionados \u00e0 URL ap\u00f3s um <code>?</code>. Por exemplo, <code>GET /users?active=true&amp;sort=asc</code> filtra por usu\u00e1rios ativos e os ordena em ordem ascendente.</p>"},{"location":"boas-praticas-api-rest/#boas-praticas-em-apis-rest","title":"Boas pr\u00e1ticas em APIs REST","text":""},{"location":"boas-praticas-api-rest/#urls-claras-e-intuitivas","title":"URLs claras e intuitivas","text":"<p>Utilize URLs que sejam intuitivas e f\u00e1ceis de entender, o que facilita a compreens\u00e3o e o uso da API. Prefira o uso de substantivos e mantenha um padr\u00e3o consistente em toda a API.</p>"},{"location":"boas-praticas-api-rest/#padronizacao-de-metodos-http","title":"Padroniza\u00e7\u00e3o de m\u00e9todos HTTP","text":"<p>Use os m\u00e9todos HTTP de maneira padronizada: - <code>GET</code> para buscar dados. - <code>POST</code> para criar novos recursos. - <code>PUT</code> para atualizar recursos inteiramente. - <code>PATCH</code> para atualiza\u00e7\u00f5es parciais. - <code>DELETE</code> para excluir recursos.</p>"},{"location":"boas-praticas-api-rest/#codigos-de-status-http-apropriados","title":"C\u00f3digos de status HTTP apropriados","text":"<p>Empregue c\u00f3digos de status HTTP para comunicar o resultado das opera\u00e7\u00f5es claramente:</p>"},{"location":"boas-praticas-api-rest/#codigos-de-sucesso-2xx","title":"C\u00f3digos de sucesso (2xx)","text":"<p><code>200 OK</code>: Indica que a requisi\u00e7\u00e3o foi bem-sucedida. \u00c9 o c\u00f3digo mais comum para uma resposta HTTP bem-sucedida, especialmente ap\u00f3s um GET.</p> <p><code>201 Created</code>: Usado quando um novo recurso \u00e9 criado com sucesso, t\u00edpico ap\u00f3s um POST.</p> <p><code>202 Accepted</code>: Indica que a requisi\u00e7\u00e3o foi aceita para processamento, mas o processamento ainda n\u00e3o foi conclu\u00eddo. Comum em opera\u00e7\u00f5es que s\u00e3o processadas de forma ass\u00edncrona.</p> <p><code>204 No Content</code>: Resposta para uma opera\u00e7\u00e3o bem-sucedida que n\u00e3o retorna dados, como ap\u00f3s um DELETE.</p>"},{"location":"boas-praticas-api-rest/#codigos-de-redirecionamento-3xx","title":"C\u00f3digos de redirecionamento (3xx)","text":"<p><code>301 Moved Permanently</code>: Este e outros c\u00f3digos de redirecionamento s\u00e3o menos comuns em APIs mas \u00fateis para indicar que um recurso foi movido permanentemente para uma nova URL.</p> <p><code>303 See Other</code>: Indica que o recurso pode ser encontrado em outra URI usando o m\u00e9todo GET.</p>"},{"location":"boas-praticas-api-rest/#codigos-de-erro-do-cliente-4xx","title":"C\u00f3digos de erro do cliente (4xx)","text":"<p><code>400 Bad Request</code>: Indica que o servidor n\u00e3o pode ou n\u00e3o vai processar a requisi\u00e7\u00e3o devido a algo que foi percebido como um erro do cliente (e.g., formato de requisi\u00e7\u00e3o inv\u00e1lido).</p> <p><code>401 Unauthorized</code>: Usado quando a autentica\u00e7\u00e3o \u00e9 necess\u00e1ria e falhou ou ainda n\u00e3o foi fornecida.</p> <p><code>403 Forbidden</code>: O servidor entendeu a requisi\u00e7\u00e3o, mas se recusa a autoriz\u00e1-la. Diferente do 401, nesse caso a autentica\u00e7\u00e3o n\u00e3o faria diferen\u00e7a.</p> <p><code>404 Not Found</code>: O servidor n\u00e3o encontrou nada que corresponda ao URI da requisi\u00e7\u00e3o.</p> <p><code>405 Method Not Allowed</code>: Um m\u00e9todo solicitado \u00e9 conhecido pelo servidor, mas foi desativado e n\u00e3o pode ser usado.</p> <p><code>409 Conflict</code>: Indica que a requisi\u00e7\u00e3o n\u00e3o p\u00f4de ser completada devido a um conflito com o estado atual do recurso.</p>"},{"location":"boas-praticas-api-rest/#codigos-de-erro-do-servidor-5xx","title":"C\u00f3digos de erro do servidor (5xx)","text":"<p><code>500 Internal Server Error</code>: Um erro gen\u00e9rico que indica que o servidor encontrou uma condi\u00e7\u00e3o inesperada.</p> <p><code>501 Not Implemented</code>: O servidor n\u00e3o suporta a funcionalidade necess\u00e1ria para atender a requisi\u00e7\u00e3o.</p> <p><code>503 Service Unavailable</code>: O servidor est\u00e1 incapaz de lidar com a requisi\u00e7\u00e3o devido a uma manuten\u00e7\u00e3o tempor\u00e1ria ou sobrecarga.</p>"},{"location":"boas-praticas-api-rest/#suporte-para-filtragem-paginacao-e-ordenacao","title":"Suporte para filtragem, pagina\u00e7\u00e3o e ordena\u00e7\u00e3o","text":"<p>Forne\u00e7a mecanismos para filtragem, pagina\u00e7\u00e3o e ordena\u00e7\u00e3o dos dados, o que melhora a usabilidade e efici\u00eancia da API especialmente em conjuntos de dados grandes.</p>"},{"location":"boas-praticas-api-rest/#seguranca-e-autenticacao","title":"Seguran\u00e7a e autentica\u00e7\u00e3o","text":"<p>Garanta a seguran\u00e7a da API implementando autentica\u00e7\u00e3o e autoriza\u00e7\u00e3o adequadas. Utilize protocolos como OAuth, tokens JWT, e sempre use HTTPS.</p>"},{"location":"boas-praticas-api-rest/#documentacao-clara-e-abrangente","title":"Documenta\u00e7\u00e3o clara e abrangente","text":"<p>Forne\u00e7a uma documenta\u00e7\u00e3o detalhada e acess\u00edvel para a API, incluindo informa\u00e7\u00f5es sobre endpoints, par\u00e2metros, formatos de resposta e exemplos de uso.</p>"},{"location":"boas-praticas-api-rest/#versionamento-da-api","title":"Versionamento da API","text":"<p>Implemente o versionamento da API para permitir a evolu\u00e7\u00e3o da interface sem impactar negativamente os clientes existentes. Utilize URLs versionadas, como <code>/api/v1</code>.</p>"},{"location":"boas-praticas-api-rest/#negociacao-de-conteudo","title":"Negocia\u00e7\u00e3o de conte\u00fado","text":"<p>Suporte diferentes formatos de resposta, como JSON e XML, utilizando cabe\u00e7alhos HTTP para negocia\u00e7\u00e3o de conte\u00fado (<code>Accept</code> e <code>Content-Type</code>).</p>"},{"location":"boas-praticas-api-rest/#conclusao","title":"Conclus\u00e3o","text":"<p>Seguindo estas pr\u00e1ticas recomendadas, a API REST do projeto INBCM ser\u00e1 robusta, segura e f\u00e1cil de integrar, promovendo uma arquitetura escal\u00e1vel e flex\u00edvel. A ades\u00e3o a esses princ\u00edpios assegura que nossa API atenda \u00e0s necessidades dos desenvolvedores e contribua positivamente para o sucesso do projeto.</p>"},{"location":"declaracoes/","title":"P\u00e1gina de declara\u00e7\u00f5es","text":""},{"location":"declaracoes/#descricao-geral","title":"Descri\u00e7\u00e3o geral","text":"<p>A p\u00e1gina de declara\u00e7\u00f5es \u00e9 acessada ap\u00f3s um usu\u00e1rio escolher uma declara\u00e7\u00e3o espec\u00edfica para visualizar ou editar. Esta p\u00e1gina permite visualizar detalhes completos da declara\u00e7\u00e3o, incluindo status, pend\u00eancias e a\u00e7\u00f5es como download e retifica\u00e7\u00e3o.</p>"},{"location":"declaracoes/#tecnologias-e-bibliotecas-utilizadas","title":"Tecnologias e bibliotecas utilizadas","text":"<ul> <li>React: Framework usado para construir a interface.</li> <li>React Router: Gerencia a navega\u00e7\u00e3o entre as p\u00e1ginas.</li> <li>React Query: Usado para buscar dados assincronamente.</li> <li>Date-Fns: Utilizado para formatar datas exibidas na p\u00e1gina.</li> <li>Tailwind CSS (clsx): Usado para condicionalmente juntar classes CSS.</li> </ul>"},{"location":"declaracoes/#componentes-da-pagina","title":"Componentes da p\u00e1gina","text":""},{"location":"declaracoes/#estrutura-basica","title":"Estrutura b\u00e1sica","text":"<ul> <li>DefaultLayout: O layout geral que inclui cabe\u00e7alho e outros elementos UI compartilhados.</li> <li>MismatchsModal: Um modal que \u00e9 exibido para mostrar pend\u00eancias espec\u00edficas das declara\u00e7\u00f5es.</li> </ul>"},{"location":"declaracoes/#fluxo-da-pagina","title":"Fluxo da p\u00e1gina","text":"<pre><code>sequenceDiagram\n    participant U as Usu\u00e1rio\n    participant S as Servidor\n    participant P as P\u00e1gina de Declara\u00e7\u00e3o\n\n    U-&gt;&gt;+P: Seleciona uma declara\u00e7\u00e3o\n    P-&gt;&gt;+S: Solicita detalhes da declara\u00e7\u00e3o\n    S--&gt;&gt;-P: Retorna informa\u00e7\u00f5es da declara\u00e7\u00e3o\n    P-&gt;&gt;U: Mostra informa\u00e7\u00f5es e a\u00e7\u00f5es dispon\u00edveis</code></pre>"},{"location":"declaracoes/#acoes-disponiveis","title":"A\u00e7\u00f5es dispon\u00edveis","text":"<ul> <li>Download de recibos e planilhas.</li> <li>Visualiza\u00e7\u00e3o e retifica\u00e7\u00e3o de pend\u00eancias.</li> <li>Navega\u00e7\u00e3o entre diferentes se\u00e7\u00f5es de acervos: museol\u00f3gico, bibliogr\u00e1fico e arquiv\u00edstico.</li> </ul>"},{"location":"declaracoes/#exemplos-de-codigo","title":"Exemplos de c\u00f3digo","text":""},{"location":"declaracoes/#suspense-query-para-carregar-dados","title":"Suspense query para carregar dados","text":"<pre><code>const { data } = useSuspenseQuery({\n  queryKey: [\"declaracao\", id],\n  queryFn: async () =&gt; {\n    const response = await request(`/api/declaracoes/${id}`);\n    return response.json();\n  }\n});\n</code></pre>"},{"location":"declaracoes/#interacao-com-tabs-de-acervos","title":"Intera\u00e7\u00e3o com tabs de acervos","text":"<pre><code>const tabs = [\"museologico\", \"bibliografico\", \"arquivistico\"];\nconst currentTab = useState(\"museologico\");\n\n&lt;div className=\"br-tab mt-10\" data-counter=\"true\"&gt;\n  &lt;nav className=\"tab-nav\"&gt;\n    &lt;ul&gt;\n      {tabs.map(tab =&gt; (\n        &lt;li className={clsx(\"tab-item\", currentTab === tab &amp;&amp; \"is-active\")}\n            onClick={() =&gt; setCurrentTab(tab)}&gt;\n          &lt;button&gt;{`Acervo ${tab}`}&lt;/button&gt;\n        &lt;/li&gt;\n      ))}\n    &lt;/ul&gt;\n  &lt;/nav&gt;\n  &lt;div className=\"tab-content\"&gt;\n    {tabs.map(tab =&gt; (\n      &lt;div className={clsx(\"tab-panel\", currentTab === tab &amp;&amp; \"active\")}&gt;\n        &lt;TableItens acervo={tab} ano={data.anoDeclaracao} museuId={data.museu_id._id} /&gt;\n      &lt;/div&gt;\n    ))}\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"declaracoes/#consideracoes-finais","title":"Considera\u00e7\u00f5es finais","text":"<p>Esta p\u00e1gina \u00e9 fundamental para a gest\u00e3o das declara\u00e7\u00f5es dentro do sistema INBCM, permitindo aos usu\u00e1rios um controle detalhado sobre cada declara\u00e7\u00e3o e suas depend\u00eancias. A documenta\u00e7\u00e3o deve ser mantida atualizada para refletir quaisquer mudan\u00e7as no fluxo de usu\u00e1rio ou nos componentes usados.</p>"},{"location":"endpoints/","title":"API Documentation","text":""},{"location":"endpoints/#endpoints","title":"Endpoints","text":""},{"location":"endpoints/#listar-itens-por-tipo-de-bem","title":"Listar Itens por Tipo de Bem","text":"<ul> <li>Rota: <code>GET /listar-itens/:museuId/:ano/:tipo</code></li> <li>Middleware: <code>userMiddleware</code></li> <li>Descri\u00e7\u00e3o: Lista os itens de invent\u00e1rio por tipo de bem para um museu espec\u00edfico.</li> <li>Par\u00e2metros:</li> <li><code>museuId</code>: ID do museu (string)</li> <li><code>ano</code>: Ano de refer\u00eancia (string)</li> <li><code>tipo</code>: Tipo do bem a ser listado (string)</li> <li>Respostas:</li> <li><code>200</code>: Itens listados com sucesso.</li> <li><code>401</code>: N\u00e3o autorizado.</li> <li><code>500</code>: Erro interno.</li> </ul>"},{"location":"endpoints/#criar-museu","title":"Criar Museu","text":"<ul> <li>Rota: <code>POST /criarMuseu</code></li> <li>Middleware: <code>adminMiddleware</code></li> <li>Descri\u00e7\u00e3o: Cria um novo museu.</li> <li>Par\u00e2metros:</li> <li>Body:<ul> <li><code>nome</code> (string): Nome do museu.</li> <li><code>endereco</code> (object):</li> <li><code>cidade</code> (string): Nome da cidade.</li> <li><code>UF</code> (string): Sigla do estado.</li> <li><code>logradouro</code> (string): Nome da rua.</li> <li><code>numero</code> (string): N\u00famero do endere\u00e7o.</li> <li><code>complemento</code> (string): Complemento do endere\u00e7o (opcional).</li> <li><code>bairro</code> (string): Bairro.</li> <li><code>cep</code> (string): CEP.</li> <li><code>municipio</code> (string): Nome do munic\u00edpio.</li> </ul> </li> <li>Respostas:</li> <li><code>200</code>: Museu criado com sucesso.</li> <li><code>400</code>: Erro na cria\u00e7\u00e3o do museu.</li> </ul>"},{"location":"endpoints/#listar-museus","title":"Listar Museus","text":"<ul> <li>Rota: <code>GET /listarMuseus</code></li> <li>Middleware: <code>adminMiddleware</code></li> <li>Descri\u00e7\u00e3o: Lista todos os museus cadastrados no sistema.</li> <li>Respostas:</li> <li><code>200</code>: Lista de museus retornada com sucesso.</li> <li><code>500</code>: Erro ao listar museus.</li> </ul>"},{"location":"endpoints/#listar-museus-do-usuario","title":"Listar Museus do Usu\u00e1rio","text":"<ul> <li>Rota: <code>GET /museus</code></li> <li>Middleware: <code>userMiddleware</code></li> <li>Descri\u00e7\u00e3o: Lista os museus associados ao usu\u00e1rio autenticado.</li> <li>Respostas:</li> <li><code>200</code>: Lista de museus do usu\u00e1rio retornada com sucesso.</li> <li><code>500</code>: Erro ao listar museus do usu\u00e1rio.</li> </ul>"},{"location":"endpoints/#enviar-declaracao","title":"Enviar Declara\u00e7\u00e3o","text":"<ul> <li>Rota: <code>POST /uploads/:museu/:anoDeclaracao</code></li> <li>Middlewares: <code>uploadMiddleware</code>, <code>userMiddleware</code></li> <li>Descri\u00e7\u00e3o: Envia uma declara\u00e7\u00e3o para o museu especificado.</li> <li>Par\u00e2metros:</li> <li><code>museu</code> (string): ID do museu.</li> <li><code>anoDeclaracao</code> (string): Ano da declara\u00e7\u00e3o.</li> <li>Body (multipart/form-data):<ul> <li><code>arquivisticoArquivo</code> (binary): Arquivo arquiv\u00edstico.</li> <li><code>bibliograficoArquivo</code> (binary): Arquivo bibliogr\u00e1fico.</li> <li><code>museologicoArquivo</code> (binary): Arquivo museol\u00f3gico.</li> <li><code>arquivistico</code> (string): Dados arquiv\u00edsticos.</li> <li><code>bibliografico</code> (string): Dados bibliogr\u00e1ficos.</li> <li><code>museologico</code> (string): Dados museol\u00f3gicos.</li> </ul> </li> <li>Respostas:</li> <li><code>200</code>: Declara\u00e7\u00e3o enviada com sucesso.</li> <li><code>400</code>: Museu inv\u00e1lido.</li> <li><code>500</code>: Erro ao enviar arquivos para a declara\u00e7\u00e3o.</li> </ul>"},{"location":"endpoints/#retificar-declaracao","title":"Retificar Declara\u00e7\u00e3o","text":"<ul> <li>Rota: <code>PUT /retificar/:museu/:anoDeclaracao/:idDeclaracao</code></li> <li>Middlewares: <code>uploadMiddleware</code>, <code>userMiddleware</code></li> <li>Descri\u00e7\u00e3o: Retifica uma declara\u00e7\u00e3o existente.</li> <li>Par\u00e2metros:</li> <li><code>museu</code> (string): ID do museu.</li> <li><code>anoDeclaracao</code> (string): Ano da declara\u00e7\u00e3o.</li> <li><code>idDeclaracao</code> (string): ID da declara\u00e7\u00e3o a ser retificada.</li> <li>Body (multipart/form-data):<ul> <li><code>arquivisticoArquivo</code> (binary): Novo arquivo arquiv\u00edstico.</li> <li><code>bibliograficoArquivo</code> (binary): Novo arquivo bibliogr\u00e1fico.</li> <li><code>museologicoArquivo</code> (binary): Novo arquivo museol\u00f3gico.</li> </ul> </li> <li>Respostas:</li> <li><code>200</code>: Declara\u00e7\u00e3o retificada com sucesso.</li> <li><code>404</code>: Declara\u00e7\u00e3o n\u00e3o encontrada.</li> <li><code>500</code>: Erro ao retificar declara\u00e7\u00e3o.</li> </ul>"},{"location":"endpoints/#baixar-arquivo-de-declaracao","title":"Baixar Arquivo de Declara\u00e7\u00e3o","text":"<ul> <li>Rota: <code>GET /download/:museu/:anoDeclaracao/:tipoArquivo</code></li> <li>Middleware: <code>userMiddleware</code></li> <li>Descri\u00e7\u00e3o: Baixa um arquivo de declara\u00e7\u00e3o para o museu e ano especificados.</li> <li>Par\u00e2metros:</li> <li><code>museu</code> (string): ID do museu.</li> <li><code>anoDeclaracao</code> (string): Ano da declara\u00e7\u00e3o.</li> <li><code>tipoArquivo</code> (string): Tipo de arquivo (arquivistico, bibliografico, museologico).</li> <li>Respostas:</li> <li><code>200</code>: Arquivo de declara\u00e7\u00e3o baixado com sucesso.</li> <li><code>404</code>: Declara\u00e7\u00e3o ou arquivo n\u00e3o encontrado.</li> <li><code>500</code>: Erro ao baixar arquivo da declara\u00e7\u00e3o.</li> </ul>"},{"location":"endpoints/#obter-declaracoes-do-usuario","title":"Obter Declara\u00e7\u00f5es do Usu\u00e1rio","text":"<ul> <li>Rota: <code>GET /declaracoes</code></li> <li>Middleware: <code>userMiddleware</code></li> <li>Descri\u00e7\u00e3o: Obt\u00e9m todas as declara\u00e7\u00f5es pertencentes ao usu\u00e1rio autenticado.</li> <li>Respostas:</li> <li><code>200</code>: Lista de todas as declara\u00e7\u00f5es do usu\u00e1rio obtida com sucesso.</li> <li><code>500</code>: Erro ao buscar declara\u00e7\u00f5es.</li> </ul>"},{"location":"endpoints/#obter-declaracao-por-id","title":"Obter Declara\u00e7\u00e3o por ID","text":"<ul> <li>Rota: <code>GET /declaracoes/:id</code></li> <li>Middleware: <code>userMiddleware</code></li> <li>Descri\u00e7\u00e3o: Obt\u00e9m uma declara\u00e7\u00e3o espec\u00edfica pelo seu ID.</li> <li>Par\u00e2metros:</li> <li><code>id</code> (string): ID da declara\u00e7\u00e3o.</li> <li>Respostas:</li> <li><code>200</code>: Declara\u00e7\u00e3o obtida com sucesso.</li> <li><code>404</code>: Declara\u00e7\u00e3o n\u00e3o encontrada.</li> <li><code>500</code>: Erro ao buscar declara\u00e7\u00e3o.</li> </ul>"},{"location":"endpoints/#obter-declaracoes-por-museu-e-ano","title":"Obter Declara\u00e7\u00f5es por Museu e Ano","text":"<ul> <li>Rota: <code>GET /declaracoes/:museu/:anoDeclaracao</code></li> <li>Middleware: <code>userMiddleware</code></li> <li>Descri\u00e7\u00e3o: Obt\u00e9m declara\u00e7\u00f5es de um museu espec\u00edfico para um ano espec\u00edfico.</li> <li>Par\u00e2metros:</li> <li><code>museu</code> (string): ID do museu.</li> <li><code>anoDeclaracao</code> (string): Ano da declara\u00e7\u00e3o.</li> <li>Respostas:</li> <li><code>200</code>: Declara\u00e7\u00f5es obtidas com sucesso.</li> <li><code>404</code>: Declara\u00e7\u00f5es n\u00e3o encontradas.</li> <li><code>500</code>: Erro ao buscar declara\u00e7\u00f5es.</li> </ul>"},{"location":"endpoints/#obter-declaracoes-filtradas","title":"Obter Declara\u00e7\u00f5es Filtradas","text":"<ul> <li>Rota: <code>POST /declaracoesFiltradas</code></li> <li>Middleware: <code>adminMiddleware</code></li> <li>Descri\u00e7\u00e3o: Obt\u00e9m declara\u00e7\u00f5es com base em filtros especificados.</li> <li>Respostas:</li> <li><code>200</code>: Declara\u00e7\u00f5es filtradas obtidas com sucesso.</li> <li><code>500</code>: Erro ao buscar declara\u00e7\u00f5es com filtros.</li> </ul>"},{"location":"endpoints/#atualizar-status-de-declaracao","title":"Atualizar Status de Declara\u00e7\u00e3o","text":"<ul> <li>Rota: <code>PUT /atualizarStatus/:id</code></li> <li>Middleware: <code>adminMiddleware</code></li> <li>Descri\u00e7\u00e3o: Atualiza o status de uma declara\u00e7\u00e3o.</li> <li>Par\u00e2metros:</li> <li><code>id</code> (string): ID da declara\u00e7\u00e3o.</li> <li>Body:<ul> <li><code>status</code> (string): Novo status da declara\u00e7\u00e3o.</li> </ul> </li> <li>Respostas:</li> <li><code>200</code>: Status atualizado com sucesso.</li> <li><code>404</code>: Declara\u00e7\u00e3o n\u00e3o encontrada.</li> <li><code>500</code>: Erro ao atualizar status.</li> </ul>"},{"location":"endpoints/#obter-declaracoes-pendentes","title":"Obter Declara\u00e7\u00f5es Pendentes","text":"<ul> <li>Rota: <code>GET /declaracoes/pendentes</code></li> <li>Middleware: <code>adminMiddleware</code></li> <li>Descri\u00e7\u00e3o: Obt\u00e9m declara\u00e7\u00f5es pendentes para processamento.</li> <li>Respostas:</li> <li><code>200</code>: Declara\u00e7\u00f5es pendentes obtidas com sucesso.</li> <li><code>500</code>: Erro ao buscar declara\u00e7\u00f5es pendentes.</li> </ul>"},{"location":"endpoints/#obter-declaracoes-por-ano-para-o-dashboard","title":"Obter Declara\u00e7\u00f5es por Ano para o Dashboard","text":"<ul> <li>Rota: <code>GET /dashboard/anoDeclaracao</code></li> <li>Middleware: <code>adminMiddleware</code></li> <li>Descri\u00e7\u00e3o: Obt\u00e9m declara\u00e7\u00f5es organizadas por ano para exibi\u00e7\u00e3o no dashboard.</li> <li>Respostas:</li> <li><code>200</code>: Declara\u00e7\u00f5es organizadas por ano obtidas com sucesso.</li> <li><code>500</code>: Erro ao organizar declara\u00e7\u00f5es por ano para o dashboard.</li> </ul>"},{"location":"endpoints/#obter-declaracoes-por-regiao-para-o-dashboard","title":"Obter Declara\u00e7\u00f5es por Regi\u00e3o para o Dashboard","text":"<ul> <li>Rota: <code>GET /dashboard/regiao</code></li> <li>Middleware: <code>adminMiddleware</code></li> <li>Descri\u00e7\u00e3o: Obt\u00e9m declara\u00e7\u00f5es organizadas por regi\u00e3o para exibi\u00e7\u00e3o no dashboard.</li> <li>Respostas:</li> <li><code>200</code>: Declara\u00e7\u00f5es organizadas por regi\u00e3o obtidas com sucesso.</li> <li><code>500</code>: Erro ao organizar declara\u00e7\u00f5es por regi\u00e3o para o dashboard.</li> </ul>"},{"location":"endpoints/#obter-declaracoes-por-uf-para-o-dashboard","title":"Obter Declara\u00e7\u00f5es por UF para o Dashboard","text":"<ul> <li>Rota: <code>GET /dashboard/UF</code></li> <li>Middleware: <code>adminMiddleware</code></li> <li>Descri\u00e7\u00e3o: Obt\u00e9m declara\u00e7\u00f5es organizadas por UF para exibi\u00e7\u00e3o no dashboard.</li> <li>Respostas:</li> <li><code>200</code>: Declara\u00e7\u00f5es organizadas por UF obtidas com sucesso.</li> <li><code>500</code>: Erro ao organizar declara\u00e7\u00f5es por UF para o dashboard.</li> </ul>"},{"location":"endpoints/#obter-declaracoes-por-status-para-o-dashboard","title":"Obter Declara\u00e7\u00f5es por Status para o Dashboard","text":"<ul> <li>Rota: <code>GET /dashboard/status</code></li> <li>Middleware: <code>adminMiddleware</code></li> <li>Descri\u00e7\u00e3o: Obt\u00e9m declara\u00e7\u00f5es organizadas por status para exibi\u00e7\u00e3o no dashboard.</li> <li>Respostas:</li> <li><code>200</code>: Declara\u00e7\u00f5es organizadas por status obtidas com sucesso.</li> <li><code>500</code>: Erro ao organizar declara\u00e7\u00f5es por status para o dashboard.</li> </ul>"},{"location":"endpoints/#gerar-recibo","title":"Gerar Recibo","text":"<ul> <li>Rota: <code>GET /recibo/:idDeclaracao</code></li> <li>Middleware: <code>userMiddleware</code></li> <li>Descri\u00e7\u00e3o: Gera um recibo para a declara\u00e7\u00e3o especificada.</li> <li>Par\u00e2metros:</li> <li><code>idDeclaracao</code> (string): ID da declara\u00e7\u00e3o.</li> <li>Respostas:</li> <li><code>200</code>: Recibo gerado com sucesso.</li> <li><code>400</code>: ID inv\u00e1lido.</li> <li><code>500</code>: Erro ao gerar o recibo.</li> </ul>"},{"location":"endpoints/#login-de-usuario","title":"Login de Usu\u00e1rio","text":"<ul> <li>Rota: <code>POST /auth/login</code></li> <li>Middleware: <code>limiter</code></li> <li>Descri\u00e7\u00e3o: Realiza login de usu\u00e1rio.</li> <li>Par\u00e2metros:</li> <li><code>email</code> (string): Email do usu\u00e1rio.</li> <li><code>password</code> (string): Senha do usu\u00e1rio.</li> <li>Query:<ul> <li><code>admin</code> (boolean): Flag para login como administrador (opcional).</li> </ul> </li> <li>Respostas:</li> <li><code>200</code>: Login bem-sucedido.</li> <li><code>401</code>: Credenciais inv\u00e1lidas.</li> </ul>"},{"location":"endpoints/#atualizar-token-de-acesso","title":"Atualizar Token de Acesso","text":"<ul> <li>Rota: <code>POST /auth/refresh</code></li> <li>Descri\u00e7\u00e3o: Atualiza o token de acesso.</li> <li>Respostas:</li> <li><code>200</code>: Token atualizado com sucesso.</li> <li><code>401</code>: Falha ao atualizar o token.</li> </ul>"},{"location":"envio-declaracoes/","title":"Envio de declara\u00e7\u00f5es, envio de retifica\u00e7\u00f5es e download de recibos","text":""},{"location":"envio-declaracoes/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>Esta p\u00e1gina detalha as funcionalidades de envio de declara\u00e7\u00f5es, envio de retifica\u00e7\u00f5es e download de recibos na aplica\u00e7\u00e3o. Inclui as descri\u00e7\u00f5es das classes e m\u00e9todos utilizados, bem como diagramas de sequ\u00eancia para melhor entendimento dos processos.</p>"},{"location":"envio-declaracoes/#envio-e-retificacao-de-declaracoes","title":"Envio e retifica\u00e7\u00e3o de declara\u00e7\u00f5es","text":"<p>Este m\u00e9todo recebe uma solicita\u00e7\u00e3o de envio de nova declara\u00e7\u00e3o, cria a declara\u00e7\u00e3o e um recibo associado, e retorna uma resposta de sucesso ao usu\u00e1rio.</p> <pre><code> /**\n * Cria uma nova declara\u00e7\u00e3o ou retifica uma declara\u00e7\u00e3o existente, associando-a a um museu e ao respons\u00e1vel.\n * \n * @param {string} req.params.anoDeclaracao - O ano da declara\u00e7\u00e3o, fornecido na URL.\n * @param {string} req.params.museu - O ID do museu associado \u00e0 declara\u00e7\u00e3o, fornecido na URL.\n * @param {string} req.params.idDeclaracao - O ID da declara\u00e7\u00e3o existente que est\u00e1 sendo retificada, se aplic\u00e1vel.\n * \n * @returns {Promise&lt;Response&gt;} - Retorna uma resposta HTTP que cont\u00e9m o status da opera\u00e7\u00e3o e a declara\u00e7\u00e3o criada ou um erro.\n * \n * @throws {400} - Se dados obrigat\u00f3rios est\u00e3o ausentes ou o museu n\u00e3o \u00e9 v\u00e1lido.\n * @throws {404} - Se a declara\u00e7\u00e3o a ser retificada n\u00e3o for encontrada.\n * @throws {500} - Se ocorrer um erro interno ao processar a declara\u00e7\u00e3o.\n */\n  async criarDeclaracao(req: Request, res: Response) {\n    try {\n        const { anoDeclaracao, museu: museu_id, idDeclaracao } = req.params;\n        const user_id = req.user.id;\n\n        if (!museu_id || !user_id) {\n            return res.status(400).json({ success: false, message: \"Dados obrigat\u00f3rios ausentes\" });\n        }\n\n        const museu = await Museu.findOne({ _id: museu_id, usuario: user_id });\n        if (!museu) {\n            return res.status(400).json({ success: false, message: \"Museu inv\u00e1lido\" });\n        }\n\n        const files = req.files as { [fieldname: string]: Express.Multer.File[] };\n        const salt = generateSalt();\n\n        // Busca declara\u00e7\u00e3o existente, se idDeclaracao for fornecido\n        const declaracaoExistente = idDeclaracao\n            ? await Declaracoes.findOne({\n                _id: idDeclaracao,\n                responsavelEnvio: user_id,\n                anoDeclaracao,\n                museu_id: museu_id,\n            }).exec()\n            : await this.declaracaoService.verificarDeclaracaoExistente(museu_id, anoDeclaracao);\n\n        if (idDeclaracao &amp;&amp; !declaracaoExistente) {\n            return res.status(404).json({ message: \"N\u00e3o foi encontrada uma declara\u00e7\u00e3o anterior para retificar.\" });\n        }\n\n        const ultimaDeclaracao = await Declaracoes.findOne({ museu_id, anoDeclaracao }).sort({ versao: -1 }).exec();\n        const novaVersao = (ultimaDeclaracao?.versao || 0) + 1;\n\n        // Cria os dados da nova declara\u00e7\u00e3o\n        const novaDeclaracaoData = await this.declaracaoService.criarDadosDeclaracao(\n            museu,\n            user_id as unknown as mongoose.Types.ObjectId, \n            anoDeclaracao,\n            declaracaoExistente,\n            novaVersao,\n            salt\n        );\n\n        const novaDeclaracao = new Declaracoes(novaDeclaracaoData);\n\n        // Atualiza os arquivos associados \u00e0 nova declara\u00e7\u00e3o\n        await this.declaracaoService.updateDeclaracao(files[\"arquivistico\"], novaDeclaracao, \"arquivistico\", declaracaoExistente?.arquivistico || null, novaVersao);\n        await this.declaracaoService.updateDeclaracao(files[\"bibliografico\"], novaDeclaracao, \"bibliografico\", declaracaoExistente?.bibliografico || null, novaVersao);\n        await this.declaracaoService.updateDeclaracao(files[\"museologico\"], novaDeclaracao, \"museologico\", declaracaoExistente?.museologico || null, novaVersao);\n\n        // Marca a nova declara\u00e7\u00e3o como a \u00faltima\n        novaDeclaracao.ultimaDeclaracao = true;\n        await novaDeclaracao.save();\n\n        // Atualiza declara\u00e7\u00f5es anteriores para n\u00e3o serem mais a \u00faltima\n        await Declaracoes.updateMany(\n          {\n            museu_id,\n            anoDeclaracao,\n            _id: { $ne: novaDeclaracao._id },\n          },\n          { ultimaDeclaracao: false }\n        );\n\n        return res.status(200).json(novaDeclaracao);\n    } catch (error) {\n        console.error(\"Erro ao enviar uma declara\u00e7\u00e3o:\", error);\n        return res.status(500).json({ message: \"Erro ao enviar uma declara\u00e7\u00e3o: \", error });\n    }\n}\n</code></pre>"},{"location":"envio-declaracoes/#descricao","title":"Descri\u00e7\u00e3o","text":"<p>O m\u00e9todo <code>criarDeclaracao</code> \u00e9 respons\u00e1vel por criar ou retificar uma declara\u00e7\u00e3o para um museu espec\u00edfico, associado ao usu\u00e1rio autenticado. Ele verifica a exist\u00eancia de declara\u00e7\u00f5es anteriores, lida com o upload de arquivos e mant\u00e9m o controle de vers\u00f5es das declara\u00e7\u00f5es.</p>"},{"location":"envio-declaracoes/#parametros","title":"Par\u00e2metros","text":"<ul> <li><code>req: Request</code>: O objeto de requisi\u00e7\u00e3o do Express, que cont\u00e9m:</li> <li><code>req.params</code>: Deve incluir <code>anoDeclaracao</code>, <code>museu</code> (como <code>museu_id</code>) e opcionalmente <code>idDeclaracao</code> se for uma retifica\u00e7\u00e3o.</li> <li><code>req.user.id</code>: ID do usu\u00e1rio autenticado, utilizado para mapear o museu correspondente.</li> <li><code>req.files</code>: Arquivos enviados na requisi\u00e7\u00e3o, categorizados por tipo (arquiv\u00edstico, bibliogr\u00e1fico, museol\u00f3gico).</li> <li><code>res: Response</code>: O objeto de resposta do Express utilizado para enviar de volta o resultado da opera\u00e7\u00e3o.</li> </ul>"},{"location":"envio-declaracoes/#fluxo-de-execucao","title":"Fluxo de execu\u00e7\u00e3o","text":"<ol> <li>Valida\u00e7\u00e3o inicial: Confirma se todos os dados necess\u00e1rios est\u00e3o presentes e se o museu est\u00e1 associado ao usu\u00e1rio.</li> <li>Busca de declara\u00e7\u00e3o existente: Verifica se h\u00e1 uma declara\u00e7\u00e3o anterior que corresponde aos crit\u00e9rios fornecidos.</li> <li>Gera\u00e7\u00e3o de nova vers\u00e3o: Calcula a vers\u00e3o da nova declara\u00e7\u00e3o com base na \u00faltima vers\u00e3o dispon\u00edvel.</li> <li>Cria\u00e7\u00e3o de dados da declara\u00e7\u00e3o: Utiliza <code>declaracaoService.criarDadosDeclaracao</code> para compilar dados da nova declara\u00e7\u00e3o.</li> <li>Atualiza\u00e7\u00e3o de arquivos: Atualiza ou adiciona arquivos associados \u00e0 declara\u00e7\u00e3o.</li> <li>Finaliza\u00e7\u00e3o da declara\u00e7\u00e3o: Marca a nova declara\u00e7\u00e3o como a \u00faltima e atualiza as declara\u00e7\u00f5es anteriores para refletir isso.</li> </ol>"},{"location":"envio-declaracoes/#respostas","title":"Respostas","text":"<ul> <li>200 OK: Retorna a declara\u00e7\u00e3o criada ou atualizada.</li> <li>400 Bad request: Retorna um erro se dados obrigat\u00f3rios estiverem ausentes ou o museu for inv\u00e1lido.</li> <li>404 Not found: Retorna um erro se n\u00e3o for encontrada uma declara\u00e7\u00e3o anterior para retificar.</li> <li>500 Internal server error: Retorna um erro se ocorrer um problema ao processar a requisi\u00e7\u00e3o.</li> </ul>"},{"location":"envio-declaracoes/#consideracoes-de-seguranca","title":"Considera\u00e7\u00f5es de seguran\u00e7a","text":"<ul> <li>Assegura que apenas o usu\u00e1rio com direitos sobre o museu possa criar ou alterar declara\u00e7\u00f5es.</li> <li>Todos os uploads de arquivos devem ser sanitizados e validados para evitar a execu\u00e7\u00e3o de arquivos maliciosos.</li> </ul>"},{"location":"envio-declaracoes/#exemplos-de-uso","title":"Exemplos de uso","text":"<p>Um exemplo de uso desse m\u00e9todo pode ser ilustrado em uma situa\u00e7\u00e3o onde um usu\u00e1rio precisa atualizar os registros de seu museu para o ano corrente, enviando novos documentos arquiv\u00edsticos, bibliogr\u00e1ficos e museol\u00f3gicos.</p>"},{"location":"envio-declaracoes/#registro-de-erros","title":"Registro de erros","text":"<p>Todos os erros s\u00e3o logados com detalhes suficientes para diagn\u00f3stico, incluindo o tipo de erro e o estado da execu\u00e7\u00e3o no momento do erro.</p>"},{"location":"envio-declaracoes/#diagrama-de-sequencia-envio-de-declaracao","title":"Diagrama de sequ\u00eancia: envio de declara\u00e7\u00e3o","text":"<pre><code>sequenceDiagram\n    participant Usuario as Usu\u00e1rio\n    participant Frontend as Frontend\n    participant Backend as Backend (NodeJs)\n    participant DB as Banco de Dados (MongoDB)\n    participant MuseuService as Servi\u00e7o de Museu\n    participant DeclaracaoService as Servi\u00e7o de Declara\u00e7\u00e3o\n\n    Usuario-&gt;&gt;+Frontend: Envia requisi\u00e7\u00e3o (anoDeclaracao, museu_id, arquivos)\n    Frontend-&gt;&gt;+Backend: Requisi\u00e7\u00e3o de cria\u00e7\u00e3o/retifica\u00e7\u00e3o de declara\u00e7\u00e3o\n    Backend-&gt;&gt;+DB: Verifica exist\u00eancia do museu\n    DB--&gt;&gt;-Backend: Resposta do museu\n    Backend-&gt;&gt;+MuseuService: Busca museu (museu_id, user_id)\n    MuseuService--&gt;&gt;-Backend: Confirma\u00e7\u00e3o de museu v\u00e1lido\n\n    alt idDeclaracao fornecido\n        Backend-&gt;&gt;+DeclaracaoService: Busca declara\u00e7\u00e3o existente (idDeclaracao)\n        DeclaracaoService--&gt;&gt;-Backend: Retorna declara\u00e7\u00e3o existente\n    else N\u00e3o fornecido\n        Backend-&gt;&gt;+DeclaracaoService: Verifica declara\u00e7\u00e3o existente (museu_id, anoDeclaracao)\n        DeclaracaoService--&gt;&gt;-Backend: Retorna nova ou existente declara\u00e7\u00e3o\n    end\n\n    Backend-&gt;&gt;+DeclaracaoService: Criar dados de nova declara\u00e7\u00e3o (novaVersao, salt)\n    DeclaracaoService--&gt;&gt;-Backend: Dados da nova declara\u00e7\u00e3o\n\n    Backend-&gt;&gt;+DB: Salva nova declara\u00e7\u00e3o\n    DB--&gt;&gt;-Backend: Confirma\u00e7\u00e3o de salvamento\n\n    Backend-&gt;&gt;+DeclaracaoService: Atualizar arquivos associados\n    DeclaracaoService--&gt;&gt;-Backend: Arquivos atualizados\n\n    Backend-&gt;&gt;+DB: Atualiza declara\u00e7\u00f5es anteriores\n    DB--&gt;&gt;-Backend: Declara\u00e7\u00f5es atualizadas\n    Backend--&gt;&gt;-Frontend: Resposta com declara\u00e7\u00e3o criada/retificada\n    Frontend--&gt;&gt;-Usuario: Mostra resultado da opera\u00e7\u00e3o\n\n    note over Backend, DB: Erros s\u00e3o logados para diagn\u00f3stico</code></pre>"},{"location":"envio-declaracoes/#download-de-recibos","title":"Download de recibos","text":"<p>O m\u00e9todo <code>gerarRecibo</code> \u00e9 respons\u00e1vel por gerar um recibo em formato PDF para uma declara\u00e7\u00e3o espec\u00edfica, identificada pelo ID da declara\u00e7\u00e3o fornecido na requisi\u00e7\u00e3o. Este m\u00e9todo \u00e9 crucial para fornecer um comprovante documental das declara\u00e7\u00f5es enviadas, auxiliando na gest\u00e3o de documenta\u00e7\u00e3o e na transpar\u00eancia das opera\u00e7\u00f5es relacionadas \u00e0s declara\u00e7\u00f5es museol\u00f3gicas.</p> <pre><code>/**\n   * Gera o recibo em formato PDF com base no ID da declara\u00e7\u00e3o fornecido na requisi\u00e7\u00e3o.\n   *   @param req.params - Par\u00e2metros da rota:\n   *     @param idDeclaracao - ID da declara\u00e7\u00e3o para a qual o recibo ser\u00e1 gerado.\n\n   */\n  async gerarRecibo(req: Request, res: Response) {\n    try {\n      const { idDeclaracao } = req.params\n      if (!mongoose.Types.ObjectId.isValid(idDeclaracao)) {\n        res.status(400).json({ error: \"ID inv\u00e1lido.\" })\n        return\n      }\n\n      const declaracaoId = new mongoose.Types.ObjectId(idDeclaracao)\n      const pdfBuffer = await gerarPDFRecibo(declaracaoId)\n\n      res.setHeader(\"Content-Disposition\", \"attachment; filename=recibo.pdf\")\n      res.setHeader(\"Content-Type\", \"application/pdf\")\n      res.send(pdfBuffer)\n    } catch (error) {\n      console.error(\"Erro ao gerar o recibo:\", error)\n      res.status(500).json({ error: \"Erro ao gerar o recibo.\" })\n    }\n  }\n</code></pre>"},{"location":"envio-declaracoes/#parametros-de-entrada","title":"Par\u00e2metros de entrada","text":"<ul> <li><code>req.params.idDeclaracao</code>: ID da declara\u00e7\u00e3o para qual o recibo ser\u00e1 gerado. Este ID deve ser um identificador v\u00e1lido no formato do MongoDB, garantindo que a refer\u00eancia \u00e0 declara\u00e7\u00e3o seja leg\u00edtima e possa ser localizada no banco de dados.</li> </ul>"},{"location":"envio-declaracoes/#processo","title":"Processo","text":"<ul> <li>Valida\u00e7\u00e3o do ID: Inicialmente, o m\u00e9todo verifica se o idDeclaracao fornecido \u00e9 um ID v\u00e1lido de MongoDB. Se n\u00e3o for v\u00e1lido, uma resposta com status 400 \u00e9 retornada, indicando \"ID inv\u00e1lido.\"</li> <li>Gera\u00e7\u00e3o do PDF: Utiliza a fun\u00e7\u00e3o gerarPDFRecibo, passando o ID da declara\u00e7\u00e3o como argumento, para gerar o recibo em formato PDF.</li> <li>Envio do recibo: Configura os headers de resposta para indicar que o conte\u00fado \u00e9 um arquivo PDF e fornece o PDF gerado como download ao usu\u00e1rio.</li> </ul>"},{"location":"envio-declaracoes/#respostas_1","title":"Respostas","text":"<ul> <li>200 OK: O recibo em PDF \u00e9 retornado como um arquivo para download.</li> <li>400 Bad Request: Retornado se o ID fornecido n\u00e3o for v\u00e1lido.</li> <li>500 Internal Server Error: Retornado se ocorrer um erro durante o processo de gera\u00e7\u00e3o do recibo.</li> </ul>"},{"location":"envio-declaracoes/#consideracoes-de-seguranca_1","title":"Considera\u00e7\u00f5es de seguran\u00e7a","text":"<p>A valida\u00e7\u00e3o rigorosa do ID da declara\u00e7\u00e3o ajuda a prevenir ataques de inje\u00e7\u00e3o e garante que apenas recibos para declara\u00e7\u00f5es leg\u00edtimas sejam gerados.</p>"},{"location":"envio-declaracoes/#diagrama-de-sequencia-download-de-recibo","title":"Diagrama de sequ\u00eancia: download de recibo","text":"<pre><code>sequenceDiagram\n    participant Usuario as Usu\u00e1rio\n    participant Frontend as Frontend\n    participant Backend as Backend (NodeJs)\n    participant DB as Banco de Dados (MongoDB)\n    participant PDFService as Servi\u00e7o de PDF\n\n    Usuario-&gt;&gt;+Frontend: Solicita download de recibo (idDeclaracao)\n    Frontend-&gt;&gt;+Backend: Requisi\u00e7\u00e3o para gerar recibo (idDeclaracao)\n    Backend-&gt;&gt;+DB: Verifica validade do idDeclaracao\n    DB--&gt;&gt;-Backend: Confirma validade\n    Backend-&gt;&gt;+PDFService: Solicita gera\u00e7\u00e3o de recibo (idDeclaracao)\n    PDFService--&gt;&gt;-Backend: PDF gerado\n    Backend--&gt;&gt;-Frontend: Envia PDF como download\n    Frontend--&gt;&gt;-Usuario: Recebe e abre/download o PDF\n\n    note over Backend, PDFService: Erros durante a gera\u00e7\u00e3o do recibo s\u00e3o logados</code></pre>"},{"location":"envio-declaracoes/#conclusao","title":"Conclus\u00e3o","text":"<p>Esta documenta\u00e7\u00e3o fornece uma vis\u00e3o detalhada das funcionalidades de envio de declara\u00e7\u00f5es, envio de retifica\u00e7\u00f5es e download de recibos, incluindo as descri\u00e7\u00f5es das classes e m\u00e9todos utilizados, bem como diagramas de sequ\u00eancia para melhor compreens\u00e3o dos processos. Essas funcionalidades s\u00e3o cruciais para garantir a integridade e a conformidade das declara\u00e7\u00f5es e a acessibilidade dos recibos para os usu\u00e1rios.</p>"},{"location":"guia-contribuicao/","title":"Guia de contribui\u00e7\u00e3o","text":"<p>Obrigado por considerar contribuir para o projeto INBCM! Este guia ir\u00e1 ajud\u00e1-lo a contribuir de forma eficiente e a seguir as melhores pr\u00e1ticas para garantir a qualidade do c\u00f3digo e a facilidade de colabora\u00e7\u00e3o.</p>"},{"location":"guia-contribuicao/#boas-praticas-de-codificacao","title":"Boas pr\u00e1ticas de codifica\u00e7\u00e3o","text":"<p>Para manter um c\u00f3digo limpo, organizado e f\u00e1cil de manter, siga estas boas pr\u00e1ticas de codifica\u00e7\u00e3o:</p>"},{"location":"guia-contribuicao/#estilo-de-codigo","title":"Estilo de c\u00f3digo","text":"<ul> <li>Indenta\u00e7\u00e3o: Use 2 espa\u00e7os para indenta\u00e7\u00e3o de c\u00f3digo.</li> <li>Nomes de vari\u00e1veis e fun\u00e7\u00f5es: Utilize o padr\u00e3o camelCase para nomes de vari\u00e1veis e fun\u00e7\u00f5es (ex.: <code>minhaVariavel</code>, <code>minhaFuncao</code>).</li> <li>Constantes: Use o padr\u00e3o UPPER_SNAKE_CASE para nomes de constantes (ex.: <code>MINHA_CONSTANTE</code>).</li> <li>Coment\u00e1rios: Comente o c\u00f3digo de forma clara e objetiva, explicando o que cada parte do c\u00f3digo faz. Use coment\u00e1rios <code>//</code> para linhas de c\u00f3digo e <code>/* */</code> para blocos de c\u00f3digo.</li> <li>Arquivos: Mantenha os arquivos organizados em pastas de acordo com suas funcionalidades (ex.: controllers, services, models).</li> <li>Linting: Use ESLint para verificar e aplicar automaticamente as regras de estilo. Certifique-se de que seu c\u00f3digo n\u00e3o apresente erros de linting antes de fazer commits.</li> </ul>"},{"location":"guia-contribuicao/#convencoes","title":"Conven\u00e7\u00f5es","text":"<ul> <li>Commits: Fa\u00e7a commits pequenos e significativos, com mensagens claras e descritivas no presente do indicativo (ex.: \"Adiciona funcionalidade X\", \"Corrige bug em Y\").</li> <li>Branches: Crie branches para novas funcionalidades ou corre\u00e7\u00f5es de bugs com nomes descritivos (ex.: <code>feature/adicionar-autenticacao</code>, <code>fix/corrigir-erro-login</code>).</li> </ul>"},{"location":"guia-contribuicao/#como-reportar-issues","title":"Como reportar issues","text":"<p>Se voc\u00ea encontrou um bug ou tem uma sugest\u00e3o para melhoria, siga as etapas abaixo para reportar uma issue:</p> <ol> <li>Verifique se j\u00e1 existe uma issue aberta: Antes de abrir uma nova issue, verifique se algu\u00e9m j\u00e1 reportou o problema ou sugeriu a melhoria.</li> <li>Descreva o problema claramente: Se for uma issue nova, forne\u00e7a uma descri\u00e7\u00e3o detalhada do problema. Inclua passos para reproduzir o problema, qual comportamento voc\u00ea esperava, e o que ocorreu em vez disso.</li> <li>Forne\u00e7a o ambiente de execu\u00e7\u00e3o: Informe o sistema operacional, navegador, e outras especificidades que possam ajudar na resolu\u00e7\u00e3o do problema.</li> <li>Adicione labels: Ao abrir uma issue, use labels para categorizar (ex.: bug, enhancement, question).</li> <li>Assigne a issue: Se voc\u00ea estiver disposto a resolver a issue, atribua-se a ela. Caso contr\u00e1rio, deixe-a sem atribui\u00e7\u00e3o.</li> </ol>"},{"location":"guia-contribuicao/#fluxo-de-trabalho-para-contribuicao","title":"Fluxo de trabalho para contribui\u00e7\u00e3o","text":"<p>Siga as etapas abaixo para contribuir com o projeto atrav\u00e9s de pull requests (PRs):</p> <ol> <li>Fork o reposit\u00f3rio: Comece forkeando o reposit\u00f3rio inbcm-backend para sua conta GitHub.</li> <li>Clone o reposit\u00f3rio: Clone seu fork localmente para come\u00e7ar a trabalhar.</li> </ol> <pre><code>git clone https://github.com/seu-usuario/inbcm-backend.git\ncd inbcm-backend\n</code></pre> <ol> <li>Crie uma Branch: Crie uma nova branch para sua funcionalidade ou corre\u00e7\u00e3o.</li> </ol> <pre><code>git checkout -b feature/nome-da-sua-feature\n</code></pre> <ol> <li> <p>Implemente sua Mudan\u00e7a: Fa\u00e7a as altera\u00e7\u00f5es necess\u00e1rias no c\u00f3digo. Certifique-se de seguir as boas pr\u00e1ticas de codifica\u00e7\u00e3o mencionadas acima.</p> </li> <li> <p>Adicione Testes: Se poss\u00edvel, adicione testes para cobrir as mudan\u00e7as feitas. Isso ajuda a garantir que a nova funcionalidade n\u00e3o quebre o c\u00f3digo existente.</p> </li> <li> <p>Fa\u00e7a Commit e Push: Ap\u00f3s fazer suas altera\u00e7\u00f5es, fa\u00e7a commit das mesmas e envie para o seu fork no GitHub.</p> </li> </ol> <pre><code>git add .\ngit commit -m \"Descri\u00e7\u00e3o clara da mudan\u00e7a\"\ngit push origin feature/nome-da-sua-feature\n</code></pre> <ol> <li> <p>Abra um Pull Request (PR): No reposit\u00f3rio original (upstream), abra um PR da sua branch para a branch <code>main</code> ou <code>develop</code>. Certifique-se de que o PR tenha uma descri\u00e7\u00e3o clara do que foi feito e, se poss\u00edvel, fa\u00e7a refer\u00eancia \u00e0s issues relacionadas.</p> </li> <li> <p>Aguarde Revis\u00e3o: Um dos mantenedores do projeto revisar\u00e1 seu PR. Esteja preparado para fazer altera\u00e7\u00f5es, se necess\u00e1rio.</p> </li> <li> <p>Integra\u00e7\u00e3o: Assim que seu PR for aprovado, ele ser\u00e1 integrado ao reposit\u00f3rio principal. Parab\u00e9ns, voc\u00ea contribuiu para o projeto INBCM!</p> </li> </ol>"},{"location":"guia-contribuicao/#duvidas","title":"D\u00favidas?","text":"<p>Se tiver alguma d\u00favida durante o processo de contribui\u00e7\u00e3o, sinta-se \u00e0 vontade para abrir uma issue ou entrar em contato com os mantenedores do projeto.</p>"},{"location":"guia-dev-backend/","title":"Guia de desenvolvimento do backend do projeto INBCM","text":"<p>Este guia detalhado fornece informa\u00e7\u00f5es essenciais sobre a configura\u00e7\u00e3o e o desenvolvimento do backend para o projeto INBCM. \u00c9 destinado a auxiliar tanto desenvolvedores atuais quanto novos colaboradores no entendimento da arquitetura do sistema, bem como na realiza\u00e7\u00e3o de tarefas de desenvolvimento e manuten\u00e7\u00e3o.</p>"},{"location":"guia-dev-backend/#configuracao-do-ambiente-de-desenvolvimento","title":"Configura\u00e7\u00e3o do ambiente de desenvolvimento","text":"<p>Para configurar o ambiente de desenvolvimento e iniciar o servidor de desenvolvimento, siga estes passos:</p>"},{"location":"guia-dev-backend/#clonar-o-repositorio","title":"Clonar o reposit\u00f3rio","text":"<pre><code>git clone https://github.com/Nocs-lab/inbcm-backend.git\npnpm install\n</code></pre>"},{"location":"guia-dev-backend/#criar-o-arquivo-env","title":"Criar o arquivo .env","text":"<p>Na pasta do projeto, caso ainda n\u00e3o exista, crie um arquivo .env e adicione as vari\u00e1veis de ambiente.</p>"},{"location":"guia-dev-backend/#iniciar-os-containers-docker-para-desenvolvimento","title":"Iniciar os containers docker para desenvolvimento","text":"<pre><code>npm run start:docker:dev\n</code></pre>"},{"location":"guia-dev-backend/#iniciar-o-servidor-em-ambiente-de-desenvolvimento","title":"Iniciar o servidor em ambiente de desenvolvimento:","text":"<pre><code>npm run dev\n</code></pre>"},{"location":"guia-dev-backend/#criar-pasta-de-uploads","title":"Criar pasta de uploads","text":"<p>Caso ainda n\u00e3o exista, crie manualmente uma pasta uploads na raiz do projeto para armazenar arquivos recebidos pelo servidor.</p> <p>Observa\u00e7\u00e3o: A solu\u00e7\u00e3o mais comum para o problema de escalabilidade de uploads de arquivos \u00e9 utilizar um servi\u00e7o de armazenamento em nuvem, ou seja, a abordagem de salvar arquivos diretamente no sistema de arquivos local do servidor n\u00e3o \u00e9 escal\u00e1vel, especialmente quando voc\u00ea come\u00e7a a lidar com um volume maior de uploads. Nesse sentido, foi utilizado a biblioteca MINIO que disponibiliza uma API para ger\u00eancia de arquivos, semelhante a utilizada pelo S3. </p>"},{"location":"guia-dev-backend/#estrutura-de-pastas-e-arquivos-principais","title":"Estrutura de pastas e arquivos principais","text":""},{"location":"guia-dev-backend/#a-organizacao-de-pastas-do-projeto","title":"A organiza\u00e7\u00e3o de pastas do projeto","text":"<pre><code>/backend-inbcm\n    /src\n        /controllers  \n        /db\n        /enums      \n        /middlewares\n        /models\n        /routes\n        /scripts        \n        /service\n        /templates\n        /tests\n        /types\n        /utils\n    app.ts\n    config.ts\n    msgpack.ts\n    openapi.yaml\n    server.ts\n    swagger.ts\n    .env\n    .gitignore    \n    package.json\n    README.md\n</code></pre>"},{"location":"guia-dev-backend/#composeyaml","title":"compose.yaml","text":"<p>Este arquivo Docker Compose define a configura\u00e7\u00e3o para os servi\u00e7os de desenvolvimento, incluindo MongoDB e Mongo Express:</p> <pre><code>version: '3.8'\n\nservices:\n  mongo:\n    image: mongo\n    ports:\n      - \"27018:27017\"  # Alterado para uma porta diferente\n    volumes:\n      - mongo-data:/data/db\n    environment:\n      MONGO_INITDB_ROOT_USERNAME: ${DB_USER}\n      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASS}\n      MONGO_INITDB_DATABASE: INBCM\n    env_file:\n      - .env\n    networks:\n      - mynetwork\n\n  mongo-express:\n    image: mongo-express\n    ports:\n      - \"8081:8081\"\n    environment:\n      ME_CONFIG_BASICAUTH_USERNAME: admin\n      ME_CONFIG_BASICAUTH_PASSWORD: admin\n      ME_CONFIG_MONGODB_PORT: 27018\n      ME_CONFIG_MONGODB_ADMINUSERNAME: ${DB_USER}\n      ME_CONFIG_MONGODB_ADMINPASSWORD: ${DB_PASS}\n      ME_CONFIG_MONGODB_SERVER: mongo\n    depends_on:\n      - mongo\n    networks:\n      - mynetwork\n\n  minio:\n    image: minio/minio\n    volumes:\n      - \"minio:/data\"\n    environment:\n      MINIO_ROOT_USER: ${MINIO_USER}\n      MINIO_ROOT_PASSWORD: ${MINIO_PASSWORD}\n    networks:\n      - mynetwork\n    command: server /data --console-address :9001\n    ports:\n      - \"9000:9000\"\n      - \"9001:9001\"\n\n  setup-minio:\n    image: minio/mc\n    depends_on:\n      - minio\n    networks:\n      - mynetwork\n    entrypoint:\n      - sh\n      - -c\n      - |\n        until mc alias set minio http://minio:9000 ${MINIO_USER} ${MINIO_PASSWORD}; do\n          sleep 0.5\n        done\n        mc admin user svcacct add minio ${MINIO_USER} --access-key ${MINIO_ACCESS_KEY} --secret-key ${MINIO_SECRET_KEY}\n        mc mb minio/inbcm\n\nnetworks:\n  mynetwork:\n\nvolumes:\n  mongo-data:\n  minio:\n</code></pre>"},{"location":"guia-dev-backend/#packagejson","title":"package.json","text":"<p>Define as depend\u00eancias, scripts e configura\u00e7\u00f5es do projeto Node.js. <pre><code>{\n  \"name\": \"inbcm-backend\",\n  \"version\": \"1.0.0\",\n  \"description\": \"\",\n  \"main\": \"server.ts\",\n  \"scripts\": {\n    \"dev\": \"concurrently \\\"docker compose up\\\" \\\"nodemon src/server.ts\\\"\",\n    \"build\": \"sucrase --transforms typescript,imports -d dist ./src\",\n    \"start\": \"node dist/server.js\",\n    \"create:admin-user\": \"sucrase-node scripts/createAdminUser.ts\",\n    \"create:data\": \"sucrase-node src/scripts/generateMockData.ts\",\n    \"list:users\": \"sucrase-node src/scripts/listUsers.ts\",\n    \"prepare\": \"[[ $NODE_ENV == 'development' ]] &amp;&amp; husky install || true\"},\n  \"keywords\": [],\n  \"author\": \"\",\n  \"license\": \"ISC\",\n  \"dependencies\": {\n    \"@kaciras/deasync\": \"^1.0.4\",\n    \"@node-rs/argon2\": \"^1.8.3\",\n    \"body-parser\": \"^1.20.2\",\n    \"compression\": \"^1.7.4\",\n    \"cookie-parser\": \"^1.4.6\",\n    \"crypto\": \"^1.0.1\",\n    \"date-fns\": \"^3.6.0\",\n    \"dotenv\": \"^16.4.5\",\n    \"dotenv-expand\": \"^11.0.6\",\n    \"express\": \"^4.19.2\",\n    \"express-async-errors\": \"^3.1.1\",\n    \"express-openapi-validator\": \"^5.2.0\",\n    \"express-rate-limit\": \"^7.3.1\",\n    \"helmet\": \"^7.1.0\",\n    \"inbcm-xlsx-validator\": \"github:vadolasi/inbcm-xlsx-validator\",\n    \"inquirer\": \"^9.3.5\",\n    \"jest-mock\": \"^29.7.0\",\n    \"jsonwebtoken\": \"^9.0.2\",\n    \"mongoose\": \"^8.5.1\",\n    \"mongoose-sequence\": \"^6.0.1\",\n    \"morgan\": \"^1.10.0\",\n    \"msgpackr\": \"^1.11.0\",\n    \"multer\": \"1.4.5-lts.1\",\n    \"pdfmake\": \"^0.2.10\",\n    \"raw-body\": \"^2.5.2\",\n    \"sanitize-html\": \"^2.13.0\",\n    \"swagger-jsdoc\": \"^6.2.8\",\n    \"swagger-ui-express\": \"^5.0.1\",\n    \"uuidv4\": \"^6.2.13\",\n    \"xlsx\": \"^0.18.5\",\n    \"yaml\": \"^2.4.5\",\n    \"zod\": \"^3.23.8\"\n  },\n  \"devDependencies\": {\n    \"@commitlint/cli\": \"^19.3.0\",\n    \"@commitlint/config-conventional\": \"^19.2.2\",\n    \"@eslint/eslintrc\": \"^3.1.0\",\n    \"@eslint/js\": \"^9.7.0\",\n    \"@faker-js/faker\": \"^8.4.1\",\n    \"@jest/globals\": \"^29.7.0\",\n    \"@types/amqplib\": \"^0.10.5\",\n    \"@types/compression\": \"^1.7.5\",\n    \"@types/cookie-parser\": \"^1.4.7\",\n    \"@types/cors\": \"^2.8.17\",\n    \"@types/express\": \"^4.17.21\",\n    \"@types/html-pdf\": \"^3.0.3\",\n    \"@types/jest\": \"^29.5.12\",\n    \"@types/jsonwebtoken\": \"^9.0.6\",\n    \"@types/mongoose\": \"^5.11.97\",\n    \"@types/morgan\": \"^1.9.9\",\n    \"@types/multer\": \"^1.4.11\",\n    \"@types/node\": \"^20.14.11\",\n    \"@types/pdfmake\": \"^0.2.9\",\n    \"@types/sanitize-html\": \"^2.11.0\",\n    \"@types/supertest\": \"^6.0.2\",\n    \"@types/swagger-jsdoc\": \"^6.0.4\",\n    \"@types/swagger-ui-express\": \"^4.1.6\",\n    \"@typescript-eslint/eslint-plugin\": \"^6.21.0\",\n    \"commitizen\": \"^4.3.0\",\n    \"concurrently\": \"^8.2.2\",\n    \"cz-conventional-changelog\": \"^3.3.0\",\n    \"eslint\": \"^8.57.0\",\n    \"eslint-config-prettier\": \"^9.1.0\",\n    \"eslint-config-standard-with-typescript\": \"^43.0.1\",\n    \"eslint-plugin-import\": \"^2.29.1\",\n    \"eslint-plugin-n\": \"^16.6.2\",\n    \"eslint-plugin-prettier\": \"^5.2.1\",\n    \"eslint-plugin-promise\": \"^6.4.0\",\n    \"globals\": \"^15.8.0\",\n    \"husky\": \"^9.1.0\",\n    \"jest\": \"^29.7.0\",\n    \"lint-staged\": \"^15.2.7\",\n    \"nodemon\": \"^3.1.4\",\n    \"prettier\": \"3.2.5\",\n    \"sucrase\": \"^3.35.0\",\n    \"supertest\": \"^7.0.0\",\n    \"ts-jest\": \"^29.2.3\",\n    \"ts-node\": \"^10.9.2\",\n    \"typescript\": \"^5.5.3\",\n    \"typescript-eslint\": \"^7.16.1\"\n  },\n  \"lint-staged\": {\n    \"*.{ts,js}\": \"eslint --cache --fix\"\n  },\n  \"config\": {\n    \"commitizen\": {\n      \"path\": \"./node_modules/cz-conventional-changelog\"\n    }\n  }\n}\n</code></pre></p> <p>Os scripts definidos no <code>package.json</code> facilitam a execu\u00e7\u00e3o de tarefas comuns de desenvolvimento e opera\u00e7\u00e3o diretamente atrav\u00e9s do npm. Aqui est\u00e3o alguns dos scripts mais importantes:</p> <ul> <li><code>dev</code>: Inicia o servidor usando Nodemon para rein\u00edcio autom\u00e1tico.</li> <li><code>start:docker:dev</code>: Levanta os containers Docker necess\u00e1rios para o ambiente de desenvolvimento.</li> <li><code>build</code>: Transpila o c\u00f3digo TypeScript para JavaScript usando Sucrase, uma ferramenta alternativa ao Babel que \u00e9 mais r\u00e1pida para projetos TypeScript. O c\u00f3digo resultante \u00e9 colocado no diret\u00f3rio <code>dist</code>.</li> <li><code>create:admin-user</code>: Script para criar um usu\u00e1rio administrador no sistema.</li> <li><code>start</code>: Executa o servidor diretamente do c\u00f3digo TypeScript, permitindo a execu\u00e7\u00e3o em produ\u00e7\u00e3o sem necessidade de uma etapa expl\u00edcita de transpila\u00e7\u00e3o.</li> <li><code>create:data</code>: Script para gerar dados de mock para desenvolvimento.</li> </ul>"},{"location":"guia-dev-backend/#dependencias","title":"Depend\u00eancias","text":"<p>As depend\u00eancias s\u00e3o bibliotecas e frameworks dos quais o projeto depende para funcionar corretamente. Algumas das principais depend\u00eancias incluem:</p> <ul> <li><code>express</code>: Framework web robusto para Node.js.</li> <li><code>mongoose</code>: Biblioteca de modelagem de objetos MongoDB para Node.js.</li> <li><code>dotenv</code>: M\u00f3dulo que carrega vari\u00e1veis de ambiente de um arquivo .env para process.env.</li> <li><code>jsonwebtoken</code>: Implementa\u00e7\u00e3o de JSON Web Tokens para seguran\u00e7a e autentica\u00e7\u00e3o.</li> <li><code>helmet</code>: Ajuda a proteger aplicativos Express definindo v\u00e1rios cabe\u00e7alhos HTTP.</li> </ul>"},{"location":"guia-dev-backend/#devdependencies","title":"DevDependencies","text":"<p>As devDependencies s\u00e3o utilizadas apenas durante o desenvolvimento e n\u00e3o s\u00e3o necess\u00e1rias em produ\u00e7\u00e3o. Incluem ferramentas como:</p> <ul> <li><code>nodemon</code>: Monitora mudan\u00e7as nos arquivos do projeto e reinicia o servidor automaticamente.</li> <li><code>eslint</code>: Ferramenta de linting para identificar padr\u00f5es problem\u00e1ticos encontrados no c\u00f3digo TypeScript/JavaScript.</li> <li><code>typescript</code>: Adiciona tipagem est\u00e1tica ao JavaScript para melhorar a confiabilidade e a manutenibilidade do c\u00f3digo.</li> </ul>"},{"location":"guia-dev-backend/#env","title":".env","text":"<p>Este arquivo armazena vari\u00e1veis de ambiente cruciais para a configura\u00e7\u00e3o do sistema, incluindo credenciais e URLs para diversos servi\u00e7os:</p> <pre><code>DB_USER=\"root\"\nDB_PASS=\"#######\"\nKEYCLOAK_DB_PASSWORD=\"########\"\nDB_URL=\"mongodb://${DB_USER}:${DB_PASS}@localhost:64000/INBCM?authSource=admin\"\nQUEUE_URL=\"amqp://guest:guest@localhost\"\nJWT_SECRET=\"#####\"\nPUBLIC_SITE_URL=\"https://localhost:5174/\"\nADMIN_SITE_URL=\"https://localhost:5173/\"\n</code></pre>"},{"location":"guia-dev-backend/#estrutura-de-arquivos-e-codigos-importantes","title":"Estrutura de arquivos e c\u00f3digos importantes","text":""},{"location":"guia-dev-backend/#serverts","title":"./server.ts","text":"<p>Este arquivo configura e inicia o servidor Express. \u00c9 o ponto de entrada do backend.</p> <pre><code>import \"./config\"\nimport app from \"./app\";\nimport conn from \"./db/conn\";\n\nconn();\n\nconst PORT = parseInt(process.env.PORT || \"3000\");\napp.listen(PORT, () =&gt; console.log(`Servidor funcionando na porta ${PORT}`));\n</code></pre>"},{"location":"guia-dev-backend/#explicacao","title":"Explica\u00e7\u00e3o:","text":"<ul> <li><code>import \"./config\"</code>: Importa as configura\u00e7\u00f5es de ambiente.</li> <li><code>import app from \"./app\"</code>: Importa a configura\u00e7\u00e3o do aplicativo Express.</li> <li><code>import conn from \"./db/conn\"</code>: Importa a fun\u00e7\u00e3o de conex\u00e3o ao banco de dados.</li> <li><code>conn()</code>: Invoca a conex\u00e3o com o banco de dados.</li> <li><code>app.listen(...)</code>: Inicia o servidor na porta especificada, com feedback no console.</li> </ul>"},{"location":"guia-dev-backend/#appts","title":"./app.ts","text":"<p>Configura o middleware e as rotas do aplicativo Express.</p> <pre><code>import \"express-async-errors\"\nimport express from \"express\"\nimport routes from \"./routes\"\nimport helmet from \"helmet\"\nimport morgan from \"morgan\"\nimport cookieParser from \"cookie-parser\"\nimport msgpack from \"./msgpack\"\nimport compression from \"compression\"\nimport config from \"./config\"\nimport swaggerUi from \"swagger-ui-express\"\nimport swaggerSpec from \"./swagger\"\nimport * as OpenApiValidator from \"express-openapi-validator\"\nimport sanitizeMongo from \"./middlewares/sanitizers/mongo\"\nimport sanitizeHtml from \"./middlewares/sanitizers/html\"\n\nconst app = express()\n\napp.use(helmet())\napp.use(morgan(\"dev\"))\napp.use(express.json())\napp.use(cookieParser(config.JWT_SECRET))\napp.use(msgpack())\napp.use(compression())\napp.use(\"/api\", routes)\napp.use(sanitizeMongo())\napp.use(sanitizeHtml())\n\n//Swagger\napp.use(\"/api-docs\", swaggerUi.serve)\napp.get(\"/api-docs\", swaggerUi.setup(swaggerSpec))\n\napp.use(\n  OpenApiValidator.middleware({\n    apiSpec: \"./openapi.yaml\",\n    validateRequests: true,\n    validateApiSpec: false,\n    ignorePaths: () =&gt; [\n      \"/api/uploads/{museu}/{anoDeclaracao}\",\n      \"/retificar/:museu/:anoDeclaracao/:idDeclaracao\"\n    ]\n  })\n)\n\nexport default app\n</code></pre>"},{"location":"guia-dev-backend/#explicacao_1","title":"Explica\u00e7\u00e3o:","text":"<ul> <li>Middleware como <code>helmet</code> e <code>compression</code> s\u00e3o usados para seguran\u00e7a e otimiza\u00e7\u00e3o.</li> <li><code>morgan</code> \u00e9 utilizado para logging.</li> <li><code>cookieParser</code> \u00e9 utilizado para analisar cookies com um segredo especificado.</li> <li><code>/api</code> \u00e9 o ponto de entrada base para as rotas.</li> <li><code>errorHandling</code> captura e trata erros n\u00e3o capturados nas rotas.</li> </ul>"},{"location":"guia-dev-backend/#dbconnts","title":"./db/conn.ts","text":"<p>Estabelece conex\u00e3o com o MongoDB usando Mongoose.</p> <pre><code>import mongoose from \"mongoose\";\nimport config from \"../config\"\n\nasync function main() {\n  try {\n    mongoose.set(\"strictQuery\", true);\n    await mongoose.connect(config.DB_URL!);\n    console.log(\"Conectado ao MongoDB!\");\n  } catch (error) {\n    console.log(`Erro: ${error}`);\n  }\n}\n\nexport default main;\n</code></pre>"},{"location":"guia-dev-backend/#explicacao_2","title":"Explica\u00e7\u00e3o:","text":"<ul> <li>Configura o Mongoose para uso de consultas estritas.</li> <li>Conecta-se ao banco de dados usando a URL definida no arquivo de configura\u00e7\u00e3o.</li> </ul>"},{"location":"guia-dev-backend/#controllersdeclaracaocontrollerts","title":"./controllers/DeclaracaoController.ts","text":"<p>Gerencia opera\u00e7\u00f5es relacionadas \u00e0s declara\u00e7\u00f5es, incluindo CRUD e l\u00f3gicas espec\u00edficas para manipula\u00e7\u00e3o de dados das declara\u00e7\u00f5es.</p> <pre><code>class DeclaracaoController {\n  async getDeclaracoesPorStatus(req: Request, res: Response) {\n    const declaracoes = await this.declaracaoService.declaracoesPorStatus();\n    return res.status(200).json(declaracoes);\n  }\n  ...\n}\n</code></pre>"},{"location":"guia-dev-backend/#explicacao_3","title":"Explica\u00e7\u00e3o:","text":"<ul> <li><code>getDeclaracoesPorStatus</code>: Busca declara\u00e7\u00f5es por status usando um servi\u00e7o dedicado e retorna as informa\u00e7\u00f5es em formato JSON.</li> </ul>"},{"location":"guia-dev-backend/#como-adicionar-novos-modelos-e-controladores","title":"Como adicionar novos modelos e controladores?","text":""},{"location":"guia-dev-backend/#criando-um-novo-modelo","title":"Criando um novo modelo","text":"<p>Modelos no Express.js com Mongoose s\u00e3o usados para definir a estrutura dos dados que ser\u00e3o armazenados no MongoDB. Aqui est\u00e3o os passos para criar um novo modelo:</p> <p>Passo 1: Primeiramente, crie um novo arquivo na pasta models, por exemplo, NovoItem.ts. Dentro deste arquivo, voc\u00ea definir\u00e1 o esquema do modelo utilizando o Mongoose.</p> <pre><code>import mongoose from 'mongoose';\n\nconst novoItemSchema = new mongoose.Schema({\n    nome: { type: String, required: true },\n    descricao: String,\n    preco: Number,\n    disponibilidade: { type: Boolean, default: true }\n});\n\nconst NovoItem = mongoose.model('NovoItem', novoItemSchema);\n\nexport default NovoItem;\n</code></pre> <p>Este esquema define um novo item com propriedades como nome, descri\u00e7\u00e3o, pre\u00e7o e disponibilidade.</p> <p>Passo 2: Ap\u00f3s criar o modelo, voc\u00ea pode us\u00e1-lo em qualquer parte do seu backend para interagir com a cole\u00e7\u00e3o NovoItem no banco de dados.</p>"},{"location":"guia-dev-backend/#criando-um-novo-controlador","title":"Criando um novo controlador","text":"<p>Controladores s\u00e3o usados para definir a l\u00f3gica de neg\u00f3cios do aplicativo. Eles interagem com os modelos para buscar, criar, atualizar ou deletar dados.</p> <p>Passo 1: Criar o Arquivo do Controlador Crie um arquivo na pasta controllers, por exemplo, NovoItemController.ts. Este arquivo conter\u00e1 toda a l\u00f3gica para manipular os dados dos novos itens.</p> <pre><code>import { Request, Response } from 'express';\nimport NovoItem from '../models/NovoItem';\n\nclass NovoItemController {\n    async criarNovoItem(req: Request, res: Response) {\n        try {\n            const novoItem = new NovoItem(req.body);\n            await novoItem.save();\n            res.status(201).send(novoItem);\n        } catch (error) {\n            res.status(400).json({ error: error.message });\n        }\n    }\n\n    // Adicione mais m\u00e9todos conforme necess\u00e1rio\n}\n\nexport default new NovoItemController();\n</code></pre> <p>Este controlador inclui um m\u00e9todo para criar novos itens. M\u00e9todos adicionais para buscar, atualizar e deletar itens podem ser adicionados seguindo uma estrutura similar.</p> <p>Passo 2: Conectar o Controlador \u00e0s Rotas Para que as a\u00e7\u00f5es do controlador sejam acess\u00edveis via HTTP, voc\u00ea precisa definir rotas que estar\u00e3o associadas a esses m\u00e9todos. Edite ou crie um arquivo de rotas, por exemplo, em <code>routes/novoItemRoutes.ts</code>.</p> <pre><code>import express from 'express';\nimport novoItemController from '../controllers/NovoItemController';\n\nconst router = express.Router();\n\nrouter.post('/novoItem', novoItemController.criarNovoItem);\n// Adicionar mais rotas conforme necess\u00e1rio\n\nexport default router;\n</code></pre> <p>Passo 3: Registrar as Rotas Finalmente, certifique-se de que as novas rotas s\u00e3o importadas e utilizadas no arquivo principal de rotas ou diretamente no arquivo app.ts.</p> <p><pre><code>import novoItemRoutes from './routes/novoItemRoutes';\napp.use('/api', novoItemRoutes);\n</code></pre> Lembre-se de testar cada novo modelo e controlador para garantir que eles funcionem como esperado. Adicionar testes unit\u00e1rios e de integra\u00e7\u00e3o pode ajudar a manter a qualidade e a estabilidade do aplicativo.</p>"},{"location":"guia-dev-backend/#consideracoes-finais","title":"Considera\u00e7\u00f5es finais","text":"<p>Este guia fornece uma vis\u00e3o abrangente da estrutura e dos procedimentos para o desenvolvimento do backend do projeto INBCM. A documenta\u00e7\u00e3o deve ser atualizada regularmente para refletir quaisquer mudan\u00e7as no projeto, garantindo que todos os desenvolvedores tenham acesso \u00e0s informa\u00e7\u00f5es mais atuais para sua atua\u00e7\u00e3o efetiva.</p>"},{"location":"guia-dev-frontend/","title":"Guia de desenvolvimento do frontend do projeto INBCM","text":"<p>O projeto frontend para o INBCM visa criar uma interface de usu\u00e1rio amig\u00e1vel e acess\u00edvel para o envio de declara\u00e7\u00f5es. O principal objetivo \u00e9 simplificar o processo de envio de declara\u00e7\u00f5es para os usu\u00e1rios, garantindo ao mesmo tempo a seguran\u00e7a e a integridade dos dados enviados.</p>"},{"location":"guia-dev-frontend/#impacto-esperado","title":"Impacto esperado","text":"<p>A expectativa \u00e9 que a aplica\u00e7\u00e3o reduza erros de entrada de dados, agilize o processo de envio e melhore a experi\u00eancia geral do usu\u00e1rio. Isso ajudar\u00e1 o INBCM a processar declara\u00e7\u00f5es de forma mais eficiente e com menor necessidade de interven\u00e7\u00e3o manual.</p>"},{"location":"guia-dev-frontend/#visao-geral-da-estrutura-do-projeto","title":"Vis\u00e3o geral da estrutura do projeto","text":"<p>A aplica\u00e7\u00e3o \u00e9 dividida em v\u00e1rias pastas principais, cada uma com um prop\u00f3sito espec\u00edfico no projeto:</p> <ul> <li>/components: Cont\u00e9m todos os componentes reutiliz\u00e1veis, facilitando a manuten\u00e7\u00e3o e o desenvolvimento \u00e1gil.</li> <li>/pages: Armazena os arquivos de cada p\u00e1gina da aplica\u00e7\u00e3o, cada um representando uma tela espec\u00edfica dentro do sistema.</li> <li>/utils: Inclui utilit\u00e1rios e helpers que fornecem funcionalidades comuns utilizadas em v\u00e1rias partes do projeto.</li> </ul>"},{"location":"login/","title":"P\u00e1gina de login","text":""},{"location":"login/#descricao-geral","title":"Descri\u00e7\u00e3o geral","text":"<p>A p\u00e1gina de login \u00e9 a porta de entrada para o sistema INBCM, permitindo que usu\u00e1rios autenticados acessem suas funcionalidades restritas. Este documento detalha os componentes, a l\u00f3gica e o fluxo de intera\u00e7\u00e3o envolvidos na autentica\u00e7\u00e3o dos usu\u00e1rios.</p>"},{"location":"login/#tecnologias-e-bibliotecas-utilizadas","title":"Tecnologias e bibliotecas utilizadas","text":"<ul> <li>React: Framework JavaScript para constru\u00e7\u00e3o de interfaces de usu\u00e1rio.</li> <li>Zod: Biblioteca para valida\u00e7\u00e3o de esquemas, utilizada para validar os dados de entrada do usu\u00e1rio.</li> <li>React Hook Form: Biblioteca que facilita o gerenciamento de formul\u00e1rios em aplica\u00e7\u00f5es React, utilizando aqui o resolver do Zod para integra\u00e7\u00e3o da valida\u00e7\u00e3o.</li> <li>@tanstack/react-query: Biblioteca utilizada para gerenciar as opera\u00e7\u00f5es ass\u00edncronas e o estado do servidor, incluindo a muta\u00e7\u00e3o de login.</li> <li>React Router: Utilizado para navega\u00e7\u00e3o ap\u00f3s o sucesso do login.</li> <li>CSS Tailwind: Framework CSS para estiliza\u00e7\u00e3o dos componentes da p\u00e1gina de forma responsiva.</li> </ul>"},{"location":"login/#estrutura-da-pagina","title":"Estrutura da p\u00e1gina","text":"<p>A p\u00e1gina de login consiste em um formul\u00e1rio centrado que coleta o email e senha do usu\u00e1rio. O layout \u00e9 responsivo, com uma \u00eanfase visual no formul\u00e1rio em dispositivos menores e um painel decorativo adicional em dispositivos maiores.</p>"},{"location":"login/#componentes","title":"Componentes","text":""},{"location":"login/#formulario-de-login","title":"Formul\u00e1rio de Login:","text":"<p><pre><code>&lt;form onSubmit={handleSubmit(onSubmit)}&gt;\n  &lt;Input\n    type=\"email\"\n    label=\"Email\"\n    placeholder=\"Digite seu email\"\n    error={errors.email}\n    {...register(\"email\")}\n  /&gt;\n  &lt;Input\n    type=\"password\"\n    label=\"Senha\"\n    placeholder=\"Digite sua senha\"\n    error={errors.password}\n    {...register(\"password\")}\n  /&gt;\n  &lt;button type=\"submit\" disabled={isSubmitting}&gt;\n    Entrar\n  &lt;/button&gt;\n&lt;/form&gt;\n</code></pre> - Campo de email e senha. - Bot\u00e3o para submiss\u00e3o do formul\u00e1rio. - Mensagens de erro din\u00e2micas que informam o usu\u00e1rio sobre problemas durante o processo de login.</p>"},{"location":"login/#validacao","title":"Valida\u00e7\u00e3o:","text":"<pre><code>const schema = z.object({\n  email: z.string().min(1, \"Este campo \u00e9 obrigat\u00f3rio\"),\n  password: z.string().min(1, \"Este campo \u00e9 obrigat\u00f3rio\")\n});\n</code></pre> <p>Utiliza a biblioteca Zod para garantir que os campos de email e senha sejam preenchidos antes da submiss\u00e3o.</p>"},{"location":"login/#processamento-de-login","title":"Processamento de login:","text":"<pre><code>const { mutate } = useMutation(loginUser);\nconst onSubmit = (data) =&gt; mutate(data);\n</code></pre> <ul> <li>A submiss\u00e3o do formul\u00e1rio dispara uma muta\u00e7\u00e3o que faz uma requisi\u00e7\u00e3o POST ao endpoint /api/auth/login.</li> <li>Em caso de sucesso, o usu\u00e1rio \u00e9 redirecionado para a p\u00e1gina inicial.</li> <li>Em caso de erro, uma mensagem de erro \u00e9 exibida. Fluxo do Usu\u00e1rio</li> <li>O usu\u00e1rio entra na p\u00e1gina e preenche os campos de email e senha.</li> <li>Ao submeter, o formul\u00e1rio verifica a validade dos dados.</li> <li>Se os dados s\u00e3o v\u00e1lidos, uma requisi\u00e7\u00e3o \u00e9 enviada ao servidor.</li> <li>Dependendo da resposta do servidor, o usu\u00e1rio pode ser redirecionado para a p\u00e1gina inicial ou informado de um erro.</li> </ul>"},{"location":"login/#diagrama-de-sequencia","title":"Diagrama de sequ\u00eancia","text":"<pre><code>sequenceDiagram\n    participant U as Usu\u00e1rio\n    participant F as Formul\u00e1rio\n    participant S as Servidor\n    participant R as Router\n\n    U-&gt;&gt;F: Preenche email e senha\n    F-&gt;&gt;F: Valida os dados\n    alt Dados v\u00e1lidos\n        F-&gt;&gt;S: Envia requisi\u00e7\u00e3o POST /api/auth/login\n        S-&gt;&gt;S: Processa autentica\u00e7\u00e3o\n        alt Autentica\u00e7\u00e3o bem-sucedida\n            S-&gt;&gt;U: Retorna sucesso com dados do usu\u00e1rio\n            U-&gt;&gt;R: Redireciona para a p\u00e1gina inicial\n        else Autentica\u00e7\u00e3o falha\n            S-&gt;&gt;U: Retorna erro\n            U-&gt;&gt;F: Mostra mensagem de erro\n        end\n    else Dados inv\u00e1lidos\n        F-&gt;&gt;U: Mostra mensagem de erro (dados inv\u00e1lidos)\n    end</code></pre>"},{"location":"login/#imagem-da-pagina","title":"Imagem da p\u00e1gina","text":""},{"location":"login/#codigo-fonte","title":"C\u00f3digo fonte","text":"<p>O c\u00f3digo fonte da p\u00e1gina de login est\u00e1 bem organizado e modularizado, facilitando futuras manuten\u00e7\u00f5es e atualiza\u00e7\u00f5es. Coment\u00e1rios explicativos s\u00e3o utilizados para clarificar a funcionalidade de blocos de c\u00f3digo espec\u00edficos.</p>"},{"location":"manual/","title":"Manual do usu\u00e1rio","text":""},{"location":"manual/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>Bem-vindo ao manual de usu\u00e1rio do m\u00f3dulo Envio de Declara\u00e7\u00f5es. O documento foi elaborado para fornecer uma orienta\u00e7\u00e3o de como voc\u00ea pode utilizar as funcionalidades da ferramenta.</p> <p>Esse m\u00f3dulo foi desenvolvido para permitir que museus informem ao Instituto Brasileiro de Museus (IBRAM) os bens que comp\u00f5em os seus acervos. Por meio de uma interface intuitiva, o m\u00f3dulo visa simplificar o processo para envio de declara\u00e7\u00e3o dos bens musealizados.</p> <p>Para facilitar o seu entendimento, o manual foi dividido em se\u00e7\u00f5es. Na se\u00e7\u00e3o \"Ambiente\", voc\u00ea encontrar\u00e1 informa\u00e7\u00f5es sobre os requisitos t\u00e9cnicos e as configura\u00e7\u00f5es para o funcionamento do m\u00f3dulo. A se\u00e7\u00e3o \"Como iniciar?\" explica como voc\u00ea pode realizar o login e ter o seu primeiro acesso. Por fim, em \"Funcionalidades\", s\u00e3o detalhados  os principais recursos dispon\u00edveis, incluindo instru\u00e7\u00f5es para as opera\u00e7\u00f5es mais comuns.</p>"},{"location":"manual/#ambiente","title":"Ambiente","text":"<p>O m\u00f3dulo de Envio de Declara\u00e7\u00f5es foi desenvolvido para ser executado em um ambiente web, garantindo que ele esteja acess\u00edvel em todas as regi\u00f5es do pa\u00eds. A seguir, est\u00e3o descritos os requisitos necess\u00e1rios para o funcionamento adequado do sistema:</p> <ol> <li>Conex\u00e3o com a internet: para acessar o m\u00f3dulo, \u00e9 imprescind\u00edvel que voc\u00ea possua uma conex\u00e3o est\u00e1vel com a Internet;</li> <li>Dispositivo: a declara\u00e7\u00e3o pode ser enviada atrav\u00e9s de v\u00e1rios dispositivos tais como computadores desktop, laptops, tablets ou smartphones. Certifique-se de que seu dispositivo esteja em boas condi\u00e7\u00f5es de funcionamento e com o antiv\u00edrus atualizado;</li> <li>Configura\u00e7\u00f5es m\u00ednimas: 4 GB de mem\u00f3ria RAM (ou superior) e, pelo menos, 500 MB dispon\u00edveis;</li> <li>Navegadores compat\u00edveis: o m\u00f3dulo \u00e9 compat\u00edvel com os navegadores web mais populares. Portanto, recomenda-se a vers\u00e3o mais recente do Google Chrome ou do Mozilla Firefox ou do Safari.</li> </ol>"},{"location":"manual/#objetivos","title":"Objetivos","text":"<p>Este material tem como objetivo fornecer instru\u00e7\u00f5es detalhadas sobre a operacionaliza\u00e7\u00e3o do m\u00f3dulo Envio de Declara\u00e7\u00f5es, desenvolvido pelo NOCS Lab, uma laborat\u00f3rio maker localizado no IFRN/Parnamirim. Os objetivos espec\u00edficos deste documento incluem:</p> <ol> <li>Oferecer instru\u00e7\u00f5es claras para que os usu\u00e1rios possam operar o m\u00f3dulo da melhor forma;</li> <li>Garantir que os usu\u00e1rios utilizem as funcionalidades de forma intuitiva a fim de minimizar a curva de aprendizado; e</li> <li>Explicar as funcionalidades atuais do m\u00f3dulo, por meio de capturas de tela, para assegurar uma compreens\u00e3o ideal.</li> </ol>"},{"location":"manual/#como-iniciar","title":"Como iniciar?","text":"<p>Para acessar o m\u00f3dulo, siga os passos abaixo:</p> <ol> <li>Acessar o endere\u00e7o eletr\u00f4nico: abra seu navegador web favorito e visite o endere\u00e7o eletr\u00f4nico https://homologacao.inbcm.ifrn.tainacan.org;</li> <li>P\u00e1gina de login: na primeira p\u00e1gina do portal, voc\u00ea ver\u00e1 a tela de login, conforme ilustrado na Figura 1.</li> </ol> <p> Figura 1 - Acesso ao m\u00f3dulo de Envio de Declara\u00e7\u00f5es.</p> <p>Ap\u00f3s preencher os campos E-mail e Senha, pressione o bot\u00e3o Entrar. Se suas credenciais tiverem sido informadas corretamente, sua sess\u00e3o ser\u00e1 redirecionada para a p\u00e1gina inicial da aplica\u00e7\u00e3o, como apresentado na Figura 2.</p>"},{"location":"manual/#como-enviar-uma-declaracao","title":"Como enviar uma declara\u00e7\u00e3o?","text":"<p>Antes de apresentarmos quais s\u00e3o os passos para o envio de uma declara\u00e7\u00e3o, \u00e9 importante ressaltar que, de acordo com a Resolu\u00e7\u00e3o Normativa IBRAM n\u00ba 6, de 31 de agosto de 2021, os bens podem ser categorizados em 03 (tr\u00eas) tipos:</p> <ul> <li>Museol\u00f3gico: objetos preservados pelos museus devido ao seu valor hist\u00f3rico, art\u00edstico, cient\u00edfico ou cultural. Eles podem incluir artefatos, obras de arte, documentos hist\u00f3ricos, etc.</li> <li>Bibliogr\u00e1fico: pertence \u00e0s cole\u00e7\u00f5es de bibliotecas incluindo livros, peri\u00f3dicos, manuscritos e outros materiais impressos ou digitais que s\u00e3o conservados por seu conte\u00fado informativo e cultural.</li> <li>Arquiv\u00edstico: documentos ou informa\u00e7\u00f5es acumulados, resultantes de atividades governamentais, institucionais, corporativas ou pessoais, que s\u00e3o preservados devido ao seu valor permanente.</li> </ul> <p>Depois de comentados os tipos de bens de um museu, \u00e9 poss\u00edvel apresentar os passos necess\u00e1rios para enviar uma declara\u00e7\u00e3o. Para isso, basta clicar no bot\u00e3o Nova declara\u00e7\u00e3o representado pela letra \"A\" da Figura 2.</p> <p> Figura 2 - Listagem de declara\u00e7\u00f5es enviadas.</p> <p>Na sequ\u00eancia, o sistema \u00e9 redirecionado para a p\u00e1gina de envio de uma nova declara\u00e7\u00e3o, apresentado na Figura 3. Para cada um dos tipos de bem, h\u00e1 um modelo de planilha na qual devem ser preenchidos os dados referentes. Caso voc\u00ea n\u00e3o possua os modelos das planilhas para preenchimento de sua declara\u00e7\u00e3o, \u00e9 poss\u00edvel fazer o download dos arquivos clicando em um dos hiperlinks, representados pela letra \"A\" da Figura 3. As planilhas tamb\u00e9m podem ser baixadas aqui: Museol\u00f3gico, Bibliogr\u00e1fico e Arquiv\u00edstico.</p> <p> Figura 3 - Envio de novas declara\u00e7\u00f5es.</p> <p>\u00c9 importante destacar que o acervo deve ser preenchido, rigorosamente, de acordo com os modelos fornecidos pelo IBRAM. Caso contr\u00e1rio, o arquivo do museu que cont\u00e9m o acervo n\u00e3o ser\u00e1 enviado.</p> <p>Na lista suspensa que \u00e9 representada pela letra \"C\", deve-se informar de qual museu \u00e9 a declara\u00e7\u00e3o a ser enviada. J\u00e1 na lista suspensa (representada pela letra \"D\"), deve-se escolher qual tipo de acervo ser\u00e1 enviado. \u00c9 poss\u00edvel selecionar um ou mais tipos de acervo.</p> <p>Percebe-se que, de acordo com o tipo selecionado, ser\u00e1 exibido um campo no qual deve-se selecionar a planilha correspondente. Na tela apresentada, foi escolhido apenas o tipo de bem museol\u00f3gico, conforme letra \"E\". N\u00e3o \u00e9 necess\u00e1rio que seja enviada uma planilha para cada um dos 03 (tr\u00eas) tipos de acervo. No entanto, pelo menos uma planilha \u00e9 obrigat\u00f3ria.</p> <p>Ainda na Figura 3, foi exibida a seguinte mensagem de alerta: </p> <p></p> <p>No exemplo apresentado, a mensagem ocorre porque h\u00e1 linha(s) no arquivo em que, pelo menos, um campo obrigat\u00f3rio n\u00e3o foi informado. O sistema oferece uma op\u00e7\u00e3o para que voc\u00ea possa visualizar qual(is) campo(s) n\u00e3o foi(ram) preenchido(s). Ao clicar no hiperlink, representado pela letra \"B\", ser\u00e1 exibida uma tela com as pend\u00eancias. Veja a Figura 4.</p> <p> Figura 4 - Listagem de pend\u00eancias encontradas no arquivo selecionado.</p> <p>Ap\u00f3s pressionar o bot\u00e3o Enviar, o sistema ser\u00e1 redirecionada para a p\u00e1gina \"Minhas declara\u00e7\u00f5es\" na qual ser\u00e3o exibidas todas as declara\u00e7\u00f5es enviadas. </p>"},{"location":"manual/#como-visualizar-minhas-declaracoes","title":"Como visualizar Minhas declara\u00e7\u00f5es?","text":"<p>A Figura 5 apresenta as declara\u00e7\u00f5es que foram enviadas pelo museu. Para cada declara\u00e7\u00e3o enviada, s\u00e3o exibidas as seguintes informa\u00e7\u00f5es: </p> <ol> <li>tipo da declara\u00e7\u00e3o (Original ou Retificada)</li> <li>data e hora do envio; </li> <li>ano da declara\u00e7\u00e3o;</li> <li>nome do museu; e</li> <li>situa\u00e7\u00e3o em que se encontra a declara\u00e7\u00e3o.</li> </ol> <p> Figura 5 - Listagem de declara\u00e7\u00f5es enviadas.</p> <p>As declara\u00e7\u00f5es podem ser exibidas de maneiras diferentes, a depender das op\u00e7\u00f5es que voc\u00ea escolher. S\u00e3o elas: </p> <ol> <li>filtragem por ano e/ou por museu;</li> <li>ordena\u00e7\u00e3o por data/hora de envio;</li> <li>ordena\u00e7\u00e3o por ano;</li> <li>ordena\u00e7\u00e3o por nome do museu; e</li> <li>ordena\u00e7\u00e3o por status.</li> </ol> <p>Clicando no \u00edcone Detalhar, representado pela letra \"A\" da Figura 5, \u00e9 poss\u00edvel visualizar o detalhamento de uma declara\u00e7\u00e3o.</p>"},{"location":"manual/#como-detalhar-minhas-declaracoes","title":"Como detalhar Minhas declara\u00e7\u00f5es?","text":"<p>Na tela de detalhamento da declara\u00e7\u00e3o, como visto na Figura 6, \u00e9 poss\u00edvel obter v\u00e1rias informa\u00e7\u00f5es relacionadas a uma declara\u00e7\u00e3o, bem como realizar algumas opera\u00e7\u00f5es:</p> <ol> <li>informa\u00e7\u00e3o sobre o status da declara\u00e7\u00e3o, indicado pela letra \"A\";</li> <li>realizar download do recibo de entrega, indicado pela letra \"B\";</li> <li>efetuar a retifica\u00e7\u00e3o da declara\u00e7\u00e3o anterior, indicado pela letra \"C\";</li> <li>listar as pend\u00eancias que foram identificadas na declara\u00e7\u00e3o enviada, indicado pela letra \"D\";</li> <li>informa\u00e7\u00f5es gerais da declara\u00e7\u00e3o tais como tipo, envio, ano e nome do museu (indicado pela letra \"E\");</li> <li>informa\u00e7\u00e3o do status da planilha enviada, indicado pela letra \"F\";</li> <li>informa\u00e7\u00f5es b\u00e1sicas do acervo enviado, indicado pela letra \"G\"; e</li> <li>realizar download da planilha enviada, indicado pela letra \"H\".</li> </ol> <p> Figura 6 - Detalhamento da declara\u00e7\u00e3o.</p>"},{"location":"manual/#como-retificar-uma-declaracao","title":"Como retificar uma declara\u00e7\u00e3o?","text":"<p>A declara\u00e7\u00e3o retificadora consiste em uma nova vers\u00e3o que substitui uma declara\u00e7\u00e3o j\u00e1 enviada de um determinado ano. Quando uma retificadora \u00e9 enviada, ela substitui a \u00faltima declara\u00e7\u00e3o submetida. Por exemplo, a primeira retificadora enviada substitui a declara\u00e7\u00e3o original e, se necess\u00e1ria outra corre\u00e7\u00e3o, a nova retificadora substituir\u00e1 a enviada anteriormente.</p> <p>Para facilitar o entendimento, imagine que uma declara\u00e7\u00e3o foi inicialmente enviada com o tipo de acervo museol\u00f3gico. Posteriormente, se essa declara\u00e7\u00e3o for retificada para incluir um acervo bibliogr\u00e1fico, ser\u00e1 necess\u00e1rio informar apenas o novo tipo de acervo, ou seja, o bibliogr\u00e1fico. Veja a Figura 7.</p> <p> Figura 7 - Envio de declara\u00e7\u00f5es retificadoras.</p> <p>Ao submeter a nova declara\u00e7\u00e3o, ela passa a ser do tipo retificadora, conforme Figura 8. Observe que a quantidade de itens do acervo museol\u00f3gico permanece o mesmo (500 itens, veja a letra \"A\") e o tipo bibliogr\u00e1fico foi inclu\u00eddo \u00e0 declara\u00e7\u00e3o, contendo 7 (sete) itens de acordo com a letra \"B\" da figura.</p> <p> Figura 8 - Declara\u00e7\u00e3o ap\u00f3s retifica\u00e7\u00e3o.</p>"},{"location":"manual/#recibo-de-envio-da-declaracao","title":"Recibo de envio da declara\u00e7\u00e3o","text":""},{"location":"minhas-declaracoes/","title":"P\u00e1gina principal - Minhas declara\u00e7\u00f5es","text":""},{"location":"minhas-declaracoes/#descricao-geral","title":"Descri\u00e7\u00e3o geral","text":"<p>Ap\u00f3s o login, os usu\u00e1rios s\u00e3o direcionados para a p\u00e1gina principal, que exibe uma lista de declara\u00e7\u00f5es associadas ao usu\u00e1rio. Esta p\u00e1gina permite aos usu\u00e1rios visualizar, filtrar e acessar detalhes espec\u00edficos das declara\u00e7\u00f5es, bem como adicionar novas declara\u00e7\u00f5es.</p>"},{"location":"minhas-declaracoes/#tecnologias-e-bibliotecas-utilizadas","title":"Tecnologias e bibliotecas utilizadas","text":"<ul> <li>React: Usado para construir a interface do usu\u00e1rio.</li> <li>React Query: Gerencia e sincroniza o estado do servidor, usando <code>useSuspenseQuery</code> para carregar dados de maneira ass\u00edncrona.</li> <li>React Table: Utilizado para criar e manipular tabelas dinamicamente com suporte a filtros.</li> <li>Date-Fns: Usado para formatar datas.</li> <li>React Router Dom: Facilita a navega\u00e7\u00e3o entre as p\u00e1ginas.</li> </ul>"},{"location":"minhas-declaracoes/#estrutura-da-pagina","title":"Estrutura da p\u00e1gina","text":"<p>A p\u00e1gina inclui um layout padr\u00e3o <code>DefaultLayout</code>, que provavelmente cont\u00e9m elementos comuns como cabe\u00e7alho, rodap\u00e9, e navega\u00e7\u00e3o lateral.</p>"},{"location":"minhas-declaracoes/#componentes","title":"Componentes","text":""},{"location":"minhas-declaracoes/#cabecalho-e-botao-de-acao","title":"Cabe\u00e7alho e bot\u00e3o de a\u00e7\u00e3o","text":"<ul> <li>T\u00edtulo da p\u00e1gina (\"Minhas declara\u00e7\u00f5es\").</li> <li>Bot\u00e3o para adicionar uma nova declara\u00e7\u00e3o.</li> </ul>"},{"location":"minhas-declaracoes/#tabela-de-declaracoes","title":"Tabela de declara\u00e7\u00f5es","text":"<ul> <li>Mostra v\u00e1rias colunas como \"Data de envio\", \"Ano\", \"Museu\", e \"Status\".</li> <li>Cada declara\u00e7\u00e3o possui a\u00e7\u00f5es como \"Detalhar\", permitindo ao usu\u00e1rio ver mais detalhes.</li> </ul>"},{"location":"minhas-declaracoes/#fluxo-de-dados","title":"Fluxo de dados","text":"<pre><code>sequenceDiagram\n    participant U as Usu\u00e1rio\n    participant S as Servidor\n    participant T as Tabela\n\n    U-&gt;&gt;+S: Solicita declara\u00e7\u00f5es\n    S--&gt;&gt;-U: Retorna dados das declara\u00e7\u00f5es\n    U-&gt;&gt;T: Exibe declara\u00e7\u00f5es na tabela</code></pre>"},{"location":"minhas-declaracoes/#exemplos-de-codigo","title":"Exemplos de c\u00f3digo","text":""},{"location":"minhas-declaracoes/#carregamento-de-dados","title":"Carregamento de dados","text":"<pre><code>const { data } = useSuspenseQuery({\n  queryKey: [\"declaracoes\"],\n  queryFn: async () =&gt; {\n    const response = await request(\"/api/declaracoes\");\n    return response.json();\n  }\n});\n</code></pre>"},{"location":"minhas-declaracoes/#estrutura-da-tabela","title":"Estrutura da tabela","text":"<pre><code>const columns = [\n  columnHelper.accessor(\"dataCriacao\", {\n    header: \"Data de envio\",\n    cell: info =&gt; format(info.getValue(), \"dd/MM/yyyy HH:mm\")\n  }),\n  columnHelper.accessor(\"anoDeclaracao\", {\n    header: \"Ano\"\n  }),\n  columnHelper.accessor(\"museu_id.nome\", {\n    header: \"Museu\"\n  }),\n  columnHelper.accessor(\"status\", {\n    header: \"Status\"\n  }),\n  // Exemplo de coluna de a\u00e7\u00f5es\n  columnHelper.accessor(\"_id\", {\n    header: \"A\u00e7\u00f5es\",\n    cell: info =&gt; (\n      &lt;Link to={`/declaracoes/${info.getValue()}`}&gt;Detalhar&lt;/Link&gt;\n    )\n  })\n];\n</code></pre>"},{"location":"minhas-declaracoes/#imagem-da-pagina","title":"Imagem da p\u00e1gina","text":""},{"location":"minhas-declaracoes/#consideracoes-finais","title":"Considera\u00e7\u00f5es finais","text":"<p>Esta documenta\u00e7\u00e3o fornece uma vis\u00e3o geral da p\u00e1gina principal ap\u00f3s o login, destacando os componentes chave e o fluxo de dados.</p>"},{"location":"modelo-dados/","title":"Documenta\u00e7\u00e3o dos modelos de dados","text":""},{"location":"modelo-dados/#diagrama-de-classes","title":"Diagrama de classes","text":"<p>O diagrama de classes descrito abaixo tem como objetivo fornecer uma vis\u00e3o clara e estruturada da arquitetura das entidades do sistema. Ele detalha as principais entidades envolvidas e suas inter-rela\u00e7\u00f5es, facilitando a compreens\u00e3o dos mecanismos de dados e funcionalidades do sistema. Este diagrama \u00e9 essencial tanto para novos desenvolvedores quanto para stakeholders, ajudando-os a visualizar a organiza\u00e7\u00e3o dos componentes e como eles interagem para suportar as opera\u00e7\u00f5es do sistema.</p> <pre><code>classDiagram\n    class BemCultural {\n        +String titulo\n        +String condicoesReproducao\n        +String[] midiasRelacionadas\n        +ObjectId declaracao_ref\n        +Number versao\n    }\n\n    BemCultural &lt;|-- Arquivistico\n    BemCultural &lt;|-- Bibliografico\n    BemCultural &lt;|-- Museologico\n\n    class Arquivistico {\n        +String field1\n        +String field2\n        ...\n    }\n\n    class Bibliografico {\n        +String field1\n        +String field2\n        ...\n    }\n\n    class Museologico {\n        +String field1\n        +String field2\n        ...\n    }\n\n    class Usuario {\n        +String nome\n        +String email\n        +String[] museus\n        +String senha\n        +Boolean admin\n        +String papel_usuario\n    }\n\n    class Declaracao {\n        +String nome\n        +Date data\n        +Boolean confirmacaoRecebimento\n        ...\n    }\n\n    Usuario --&gt; Museu : manages\n    BemCultural --&gt; Declaracao : refers</code></pre>"},{"location":"modelo-dados/#estrutura-dos-modelos-schemas","title":"Estrutura dos modelos (Schemas)","text":""},{"location":"modelo-dados/#arquivistico","title":"Arquiv\u00edstico","text":"<pre><code>import mongoose from \"mongoose\";\nimport Bem from \"./BemCultural\";\nimport { arquivistico } from \"inbcm-xlsx-validator/schema\";\n\nconst fields: Record&lt;string, unknown&gt; = {}\n\nfor (const field of Object.keys(arquivistico.fields)) {\n  fields[field] = { type: String }\n}\n\n// Modelo espec\u00edfico para documentos arquiv\u00edsticos\nconst ArquivisticoSchema = new mongoose.Schema(fields);\n\n// Use discriminadores para distinguir os modelos\nexport const Arquivistico = Bem.discriminator(\n  \"Arquivistico\",\n  ArquivisticoSchema\n);\n</code></pre> <p>O modelo Arquiv\u00edstico \u00e9 um sub-tipo de <code>BemCultural</code>, utilizando um discriminador para diferenciar documentos arquiv\u00edsticos.</p>"},{"location":"modelo-dados/#bem-cultural","title":"Bem cultural","text":"<pre><code>import mongoose, { Schema } from \"mongoose\";\n\nconst BemCulturalSchema = new mongoose.Schema(\n  {\n    titulo: { type: String },\n    condicoesReproducao: { type: String, alias: \"condicoesreproducao\" },\n    midiasRelacionadas: { type: [String], alias: \"midiasrelacionadas\" },\n    declaracao_ref: {\n      type: Schema.Types.ObjectId,\n      required: true,\n      ref: \"Declaracoes\"\n    },\n    versao: { type: Number, default: 0 }\n  },\n  { versionKey: false }\n);\n\nconst BemCultural = mongoose.model(\"bens\", BemCulturalSchema);\n\nexport default BemCultural;\n</code></pre> <p>O Bem cultural inclui refer\u00eancias a declara\u00e7\u00f5es e pode ter v\u00e1rias m\u00eddias relacionadas. Este modelo \u00e9 a base para outros modelos como Arquiv\u00edstico, Bibliogr\u00e1fico e Museol\u00f3gico.</p>"},{"location":"modelo-dados/#bibliografico","title":"Bibliogr\u00e1fico","text":"<pre><code>import mongoose from \"mongoose\";\nimport Bem from \"./BemCultural\";\nimport { bibliografico } from \"inbcm-xlsx-validator/schema\";\n\nconst fields: Record&lt;string, unknown&gt; = {}\n\nfor (const field of Object.keys(bibliografico.fields)) {\n  fields[field] = { type: String }\n}\n\n// Modelo espec\u00edfico para documentos bibliogr\u00e1ficos\nconst BibliograficoSchema = new mongoose.Schema(fields);\n\n// Use discriminadores para distinguir os modelos\nexport const Bibliografico = Bem.discriminator(\n  \"Bibliografico\",\n  BibliograficoSchema\n);\n</code></pre> <p>O modelo Bibliogr\u00e1fico segue a mesma estrutura de discrimina\u00e7\u00e3o como o Arquiv\u00edstico, sendo um sub-tipo de <code>BemCultural</code>.</p>"},{"location":"modelo-dados/#relacionamentos","title":"Relacionamentos","text":"<p>Os relacionamentos entre os modelos s\u00e3o definidos principalmente atrav\u00e9s de refer\u00eancias (<code>ref</code>) no Mongoose. Aqui est\u00e3o os principais relacionamentos:</p> <ul> <li>Bem Cultural: Referencia a <code>Declaracoes</code> atrav\u00e9s do campo <code>declaracao_ref</code>.</li> <li>Usu\u00e1rio: Pode estar associado a v\u00e1rios museus atrav\u00e9s do array <code>museus</code>.</li> </ul>"},{"location":"modelo-dados/#validacoes","title":"Valida\u00e7\u00f5es","text":"<p>As valida\u00e7\u00f5es nos modelos incluem:</p> <ul> <li>Obrigatoriedade: Campos como <code>titulo</code> em <code>BemCultural</code>, <code>nome</code> em <code>Usuario</code>, e <code>museu</code> em <code>Arquivistico</code> s\u00e3o obrigat\u00f3rios.</li> <li>\u00danico: O campo <code>email</code> em <code>Usuario</code> \u00e9 \u00fanico para garantir que n\u00e3o existam duplicatas.</li> <li>Enumera\u00e7\u00f5es: O campo <code>papel_usuario</code> em <code>Usuario</code> \u00e9 limitado aos valores <code>\"administrador\"</code> e <code>\"analista\"</code>.</li> </ul>"},{"location":"tecnologias/","title":"Tecnologias uilizadas no backend do projeto INBCM","text":"<p>O backend do projeto INBCM, denominado inbcm-backend, utiliza uma ampla gama de tecnologias modernas para criar uma plataforma robusta e segura. Abaixo est\u00e1 um resumo das principais tecnologias e bibliotecas utilizadas, divididas em categorias de acordo com sua fun\u00e7\u00e3o no projeto.</p>"},{"location":"tecnologias/#frameworks-e-bibliotecas-principais","title":"Frameworks e bibliotecas principais","text":"<ul> <li>Express: Framework web para Node.js que facilita a cria\u00e7\u00e3o de servidores web e APIs.</li> <li>Mongoose: Biblioteca para modelagem de dados MongoDB que proporciona uma solu\u00e7\u00e3o baseada em esquemas para modelar os dados da aplica\u00e7\u00e3o.</li> <li>Body-parser, Cookie-parser, Multer: Utilit\u00e1rios para parsing de corpo de requisi\u00e7\u00e3o, cookies e handling de uploads de arquivos, respectivamente.</li> </ul>"},{"location":"tecnologias/#seguranca","title":"Seguran\u00e7a","text":"<ul> <li>Helmet: Conjunto de middlewares para Express que configura cabe\u00e7alhos HTTP para proteger contra algumas vulnerabilidades conhecidas.</li> <li>Dotenv e Dotenv-expand: Gerenciam a configura\u00e7\u00e3o de vari\u00e1veis de ambiente do projeto.</li> <li>Express-rate-limit: Middleware para limitar requisi\u00e7\u00f5es repetidas a APIs p\u00fablicas e/ou endpoints.</li> <li>Jsonwebtoken: Implementa\u00e7\u00e3o de JSON Web Tokens para autentica\u00e7\u00e3o e transmiss\u00e3o segura de informa\u00e7\u00f5es.</li> </ul>"},{"location":"tecnologias/#validacao-e-documentacao","title":"Valida\u00e7\u00e3o e documenta\u00e7\u00e3o","text":"<ul> <li>Zod: Biblioteca de parsing e valida\u00e7\u00e3o para TypeScript que oferece seguran\u00e7a de tipo em runtime.</li> <li>Swagger-jsdoc e Swagger-ui-express: Ferramentas para documentar a API utilizando Swagger, facilitando a gera\u00e7\u00e3o e visualiza\u00e7\u00e3o da documenta\u00e7\u00e3o da API.</li> </ul>"},{"location":"tecnologias/#desenvolvimento-e-testes","title":"Desenvolvimento e testes","text":"<ul> <li>Jest, @jest/globals, jest-mock, ts-jest: Ferramentas de teste para JavaScript/TypeScript que permitem a escrita de testes unit\u00e1rios e de integra\u00e7\u00e3o.</li> <li>Supertest: Biblioteca para testar APIs HTTP ao simular requisi\u00e7\u00f5es.</li> <li>Nodemon e sucrase: Ferramentas que auxiliam no desenvolvimento, reiniciando automaticamente o servidor durante o desenvolvimento e compilando TypeScript para JavaScript.</li> </ul>"},{"location":"tecnologias/#performance-e-otimizacao","title":"Performance e otimiza\u00e7\u00e3o","text":"<ul> <li>Compression: Middleware que compacta as respostas do servidor, reduzindo o tempo de transmiss\u00e3o.</li> <li>Msgpackr: Biblioteca que oferece serializa\u00e7\u00e3o e deserializa\u00e7\u00e3o eficiente de dados.</li> </ul>"},{"location":"tecnologias/#utilitarios-e-helpers","title":"Utilit\u00e1rios e helpers","text":"<ul> <li>Date-fns: Biblioteca para manipula\u00e7\u00e3o de datas de forma simples e consistente.</li> <li>Inquirer: Ferramenta para cria\u00e7\u00e3o de interfaces de linha de comando interativas.</li> <li>Pdfmake: Biblioteca para gera\u00e7\u00e3o de documentos PDF a partir do servidor.</li> </ul>"},{"location":"tecnologias/#devops-e-manutencao-de-codigo","title":"DevOps e Manuten\u00e7\u00e3o de C\u00f3digo","text":"<ul> <li>Eslint, Prettier, Husky, Lint-staged, Commitizen: Conjunto de ferramentas para garantir a qualidade do c\u00f3digo, formatando e validando o c\u00f3digo conforme as melhores pr\u00e1ticas antes de commits e durante o desenvolvimento.</li> </ul>"},{"location":"tecnologias/#integracao-e-deployment","title":"Integra\u00e7\u00e3o e Deployment","text":"<ul> <li>Docker, Concurrently: Ferramentas para facilitar o deployment e a execu\u00e7\u00e3o de m\u00faltiplas tarefas em paralelo, como subir containers Docker e executar o servidor simultaneamente.</li> </ul> <p>Este conjunto de tecnologias demonstra uma infraestrutura bem pensada e projetada para escalabilidade, seguran\u00e7a e manutenibilidade, apoiando o projeto INBCM no manejo eficiente de informa\u00e7\u00f5es culturais e museol\u00f3gicas.</p>"},{"location":"testes/","title":"Testes","text":""},{"location":"testes/#ambiente-de-testes","title":"Ambiente de Testes","text":"<p>Para configurar o ambiente de testes, este projeto utiliza o Jest, um framework de testes em JavaScript. O Jest \u00e9 configurado para trabalhar com TypeScript e Express, permitindo testar controladores, modelos e outros componentes do sistema.</p>"},{"location":"testes/#passos-para-configurar-o-ambiente-de-testes","title":"Passos para configurar o ambiente de testes:","text":""},{"location":"testes/#instalacao-das-dependencias","title":"Instala\u00e7\u00e3o das Depend\u00eancias:","text":"<p>Certifique-se de que as depend\u00eancias do Jest e os tipos para TypeScript est\u00e3o instalados no seu projeto. Voc\u00ea pode instalar as depend\u00eancias necess\u00e1rias usando o npm ou yarn:</p> <pre><code>npm install --save-dev jest @types/jest ts-jest\n</code></pre>"},{"location":"testes/#configuracao-do-jest","title":"Configura\u00e7\u00e3o do Jest:","text":"<p>Adicione uma configura\u00e7\u00e3o b\u00e1sica do Jest no seu <code>package.json</code> ou crie um arquivo <code>jest.config.js</code> para definir as op\u00e7\u00f5es do Jest, incluindo o uso do <code>ts-jest</code> para compilar arquivos TypeScript:</p> <pre><code>{\n  \"jest\": {\n    \"transform\": {\n      \"^.+\\.tsx?$\": \"ts-jest\"\n    },\n    \"testEnvironment\": \"node\",\n    \"moduleFileExtensions\": [\"ts\", \"tsx\", \"js\", \"jsx\", \"json\", \"node\"]\n  }\n}\n</code></pre>"},{"location":"testes/#scripts-de-teste","title":"Scripts de Teste:","text":"<p>Adicione um script de teste no seu <code>package.json</code> para rodar os testes usando Jest:</p> <pre><code>{\n  \"scripts\": {\n    \"test\": \"jest\"\n  }\n}\n</code></pre>"},{"location":"testes/#tipos-de-testes","title":"Tipos de Testes","text":"<p>Neste projeto, os testes s\u00e3o classificados como testes unit\u00e1rios. Os testes unit\u00e1rios s\u00e3o escritos para verificar o comportamento de fun\u00e7\u00f5es e m\u00e9todos individuais. No arquivo fornecido, o teste cobre o controlador <code>MuseuController</code> para garantir que ele responde corretamente a uma solicita\u00e7\u00e3o de listagem de museus.</p>"},{"location":"testes/#exemplo-de-teste-unitario","title":"Exemplo de teste unit\u00e1rio:","text":"<pre><code>describe('MuseuController', () =&gt; {\n  describe('listarMuseus', () =&gt; {\n    it('deve retornar status 200', async () =&gt; {\n      const req = {} as Request;\n      const res = {\n        status: jest.fn().mockReturnThis(),\n        json: jest.fn()\n      } as unknown as Response;\n\n      await MuseuController.listarMuseus(req, res);\n\n      expect(res.status).toHaveBeenCalledWith(200);\n    });\n  });\n});\n</code></pre> <p>Neste exemplo, o teste verifica se o m\u00e9todo <code>listarMuseus</code> do <code>MuseuController</code> retorna um status 200 quando chamado.</p>"},{"location":"testes/#execucao-de-testes","title":"Execu\u00e7\u00e3o de Testes","text":"<p>Para rodar os testes, utilize o seguinte comando no terminal:</p> <pre><code>npm test\n</code></pre> <p>Isso executar\u00e1 o Jest, que ir\u00e1 procurar por arquivos de teste e executar os testes definidos.</p>"},{"location":"testes/#cobertura-de-testes","title":"Cobertura de Testes","text":"<p>A cobertura de testes mede quanto do c\u00f3digo est\u00e1 sendo testado pelos testes escritos. Para gerar um relat\u00f3rio de cobertura de testes usando Jest, adicione a flag <code>--coverage</code> ao comando de teste:</p> <pre><code>npm test -- --coverage\n</code></pre> <p>Ap\u00f3s a execu\u00e7\u00e3o, um relat\u00f3rio de cobertura ser\u00e1 gerado na pasta <code>coverage/</code>. Este relat\u00f3rio mostra a porcentagem de linhas, fun\u00e7\u00f5es, e branches que foram cobertas pelos testes, permitindo identificar \u00e1reas do c\u00f3digo que podem n\u00e3o estar sendo testadas adequadamente.</p>"}]}