{"config":{"lang":["pt"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Documenta\u00e7\u00e3o do projeto","text":""},{"location":"#visao-geral","title":"Vis\u00e3o geral","text":"<p>O Instituto Brasileiro de Museus (IBRAM), criado pela Lei 11.906/2009, lidera a Pol\u00edtica Nacional de Museus (PNM) e busca n\u00e3o apenas gerenciar, mas tamb\u00e9m melhorar os servi\u00e7os museol\u00f3gicos no Brasil. Isso envolve pol\u00edticas para adquirir e preservar acervos e promover a integra\u00e7\u00e3o entre museus. Uma fun\u00e7\u00e3o chave do IBRAM \u00e9 administrar o Invent\u00e1rio Nacional de Bens Culturais Musealizados (INBCM), essencial para catalogar e preservar bens museol\u00f3gicos, bibliogr\u00e1ficos e arquiv\u00edsticos, conforme o Decreto no 8.124 de 2013. Com a necessidade de registros detalhados de todos os museus, surge a demanda por um sistema eficaz que apoie a manuten\u00e7\u00e3o atualizada dos dados musealizados. Para isso, est\u00e1 sendo desenvolvido um sistema de automa\u00e7\u00e3o informacional pelo Laborat\u00f3rio de Redes e Sistemas Computacionais (NOCS Lab), vinculado ao N\u00facleo de Inova\u00e7\u00e3o em Tecnologias Computacionais (NITEC) do IFRN Campus Parnamirim. Esta colabora\u00e7\u00e3o entre o IBRAM e o IFRN, por meio do NOCS Lab, visa aprimorar a gest\u00e3o cultural atrav\u00e9s da tecnologia avan\u00e7ada e processos otimizados, contribuindo significativamente para a preserva\u00e7\u00e3o do patrim\u00f4nio cultural brasileiro.</p>"},{"location":"#conceitos-envolvidos","title":"Conceitos envolvidos","text":""},{"location":"#itens-museologicos","title":"Itens museol\u00f3gicos","text":"<p>Referem-se aos objetos que s\u00e3o coletados e preservados pelos museus devido ao seu valor hist\u00f3rico, art\u00edstico, cient\u00edfico ou cultural. Estes podem incluir artefatos, obras de arte, documentos hist\u00f3ricos, e mais.</p>"},{"location":"#bens-bibliograficos","title":"Bens bibliogr\u00e1ficos","text":"<p>S\u00e3o itens que pertencem \u00e0s cole\u00e7\u00f5es de bibliotecas, incluindo livros, peri\u00f3dicos, manuscritos, e outros materiais impressos ou digitais que s\u00e3o conservados por seu conte\u00fado informativo e cultural.</p>"},{"location":"#bens-arquivisticos","title":"Bens arquiv\u00edsticos","text":"<p>Refere-se a documentos ou informa\u00e7\u00f5es acumulados, resultantes de atividades governamentais, institucionais, corporativas ou pessoais, que s\u00e3o preservados devido ao seu valor permanente, como evid\u00eancia ou informa\u00e7\u00e3o.</p>"},{"location":"#lei-119062009","title":"Lei 11.906/2009","text":"<p>\u00c9 a lei que estabeleceu o Instituto Brasileiro de Museus (IBRAM) e delineou suas responsabilidades na gest\u00e3o e implementa\u00e7\u00e3o da Pol\u00edtica Nacional de Museus (PNM). Esta legisla\u00e7\u00e3o serve como base legal para a organiza\u00e7\u00e3o e opera\u00e7\u00e3o dos museus no Brasil.</p>"},{"location":"#decreto-no-8124-de-2013","title":"Decreto no 8.124 de 2013","text":"<p>Este decreto regulamenta a Lei 11.906/2009, estabelecendo diretrizes espec\u00edficas para a preserva\u00e7\u00e3o, a cataloga\u00e7\u00e3o e a gest\u00e3o dos bens culturais musealizados. Define tamb\u00e9m os procedimentos e responsabilidades para a manuten\u00e7\u00e3o do Invent\u00e1rio Nacional de Bens Culturais Musealizados (INBCM).</p>"},{"location":"#inventario-nacional-de-bens-culturais-musealizados-inbcm","title":"Invent\u00e1rio Nacional de Bens Culturais Musealizados (INBCM)","text":"<p>\u00c9 um registro centralizado que visa documentar, catalogar e garantir a preserva\u00e7\u00e3o dos bens culturais que fazem parte dos museus brasileiros. Este instrumento \u00e9 essencial para a gest\u00e3o efetiva dos acervos museol\u00f3gicos, bibliogr\u00e1ficos e arquiv\u00edsticos em todo o pa\u00eds.</p>"},{"location":"#registro-de-museus","title":"Registro de museus","text":"<p>\u00c9 o processo pelo qual os museus se qualificam e s\u00e3o reconhecidos oficialmente pelo governo. Isso implica em uma s\u00e9rie de responsabilidades, incluindo a obriga\u00e7\u00e3o de fornecer informa\u00e7\u00f5es detalhadas sobre seus acervos ao IBRAM.</p>"},{"location":"#preservacao-digital-e-fisica","title":"Preserva\u00e7\u00e3o digital e f\u00edsica","text":"<p>Envolve estrat\u00e9gias e tecnologias aplicadas para garantir a integridade e acessibilidade de longo prazo dos bens culturais, tanto em formatos f\u00edsicos quanto digitais.</p>"},{"location":"#automacao-informacional","title":"Automa\u00e7\u00e3o informacional","text":"<p>Refere-se ao uso de tecnologias da informa\u00e7\u00e3o e comunica\u00e7\u00e3o para automatizar a gest\u00e3o de dados e informa\u00e7\u00f5es, especialmente \u00fatil em contextos onde grandes volumes de dados, como em museus, precisam ser gerenciados de forma eficiente e precisa.</p>"},{"location":"#interoperabilidade-de-dados","title":"Interoperabilidade de dados","text":"<p>A capacidade de diferentes sistemas e organiza\u00e7\u00f5es trabalharem juntos, compartilhando dados e informa\u00e7\u00f5es de maneira eficaz, o que \u00e9 crucial para a integra\u00e7\u00e3o dos dados dos museus em uma plataforma comum.</p>"},{"location":"#diagrama-de-caso-de-uso","title":"Diagrama de Caso de Uso","text":"<pre><code>flowchart LR\n    Usu\u00e1rio --&gt;|Download de arquivo| DownloadArquivos[(\"Realizar download de arquivos enviados\")]\n    Usu\u00e1rio --&gt;|Download de recibo| DownloadRecibo[(\"Realizar download de recibo\")]\n    Usu\u00e1rio --&gt;|Visualizar detalhes| VisualizarDetalhes[(\"Visualizar detalhes de uma declara\u00e7\u00e3o\")]\n    Usu\u00e1rio --&gt;|Visualizar declara\u00e7\u00f5es| VisualizarDeclaracoes[(\"Visualizar declara\u00e7\u00f5es enviadas\")]  \n    Usu\u00e1rio --&gt;|Realizar download| RealizarDownloadTemplate[(\"Realizar download de template\")]\n    Usu\u00e1rio --&gt;|Preencher declara\u00e7\u00e3o| PreencherD[(\"Preencher declara\u00e7\u00e3o\")]\n    Usu\u00e1rio --&gt;|Enviar declara\u00e7\u00e3o| EnviarD[(\"Enviar declara\u00e7\u00e3o\")]\n\n    PreencherD --&gt;|Include| SubmeterArquivo[(\"Submeter arquivos\")]\n    VisualizarPendencias[(Visualizar pend\u00eancias)] --&gt;|Extend| EnviarD\n\n    Funcion\u00e1rioIBRAM --&gt; |Visualizar dashboard| VisualizarDashboard[(\"Visualizar dashboard com indicadores do INBCM\")] \n    Funcion\u00e1rioIBRAM --&gt; |Visualizar declara\u00e7\u00f5es| VisualizarDeclaracoesRecebidas[(\"Visualizar declara\u00e7\u00f5es recebidas\")] \n    Funcion\u00e1rioIBRAM --&gt; |Modificar status| ModificarStatus[(\"Modificar status de declara\u00e7\u00e3o\")]</code></pre> <p>O diagrama de caso de uso apresentado detalha as fun\u00e7\u00f5es acess\u00edveis para dois atores principais, \"Usu\u00e1rio\" e \"Funcion\u00e1rio IBRAM\". Para o \"Usu\u00e1rio\", as funcionalidades incluem gerenciamento completo de declara\u00e7\u00f5es, desde o preenchimento e envio at\u00e9 a visualiza\u00e7\u00e3o de detalhes e o download de recibos. Para o \"Funcion\u00e1rio IBRAM\", as funcionalidades focam na administra\u00e7\u00e3o das declara\u00e7\u00f5es recebidas, visualiza\u00e7\u00e3o de indicadores de desempenho no dashboard e a habilidade de alterar o status das declara\u00e7\u00f5es. Este diagrama serve como uma ferramenta essencial para entender as intera\u00e7\u00f5es entre usu\u00e1rios e sistema, facilitando o desenvolvimento e a operacionaliza\u00e7\u00e3o da plataforma.</p>"},{"location":"#explicacao-do-diagrama-de-classes","title":"Explica\u00e7\u00e3o do diagrama de classes","text":"<p>O diagrama de classes descrito abaixo tem como objetivo fornecer uma vis\u00e3o clara e estruturada da arquitetura das entidades do sistema. Ele detalha as principais entidades envolvidas e suas inter-rela\u00e7\u00f5es, facilitando a compreens\u00e3o dos mecanismos de dados e funcionalidades do sistema. Este diagrama \u00e9 essencial tanto para novos desenvolvedores quanto para stakeholders, ajudando-os a visualizar a organiza\u00e7\u00e3o dos componentes e como eles interagem para suportar as opera\u00e7\u00f5es do sistema.</p>"},{"location":"#classes-principais","title":"Classes principais","text":"<pre><code>classDiagram\n    class Permission {\n        +string id\n        +string name\n    }\n\n    class Profile {\n        +string id\n        +string name\n        +Permission[] permissions\n    }\n\n    class User {\n        +string name\n        +string email\n        +Profile profile\n        +string password\n        +Museum[] museuns\n    }\n\n    Profile \"1\" -- \"*\" Permission : contains\n    User \"1\" -- \"1\" Profile : has\n\n    class Museum {\n        +String codIbram\n        +String name\n        +String administrativeSphere\n        +Address address\n        +ObjectId user\n    }\n\n    class Address {\n        +String street\n        +String number\n        +String complement\n        +String neighborhood\n        +String zipCode\n        +String municipality\n        +String state\n    }\n\n    Museum \"1\" -- \"1\" Address : has\n    User \"1\" -- \"*\" Museum : contains\n    User \"1\" -- \"1\" Address : has\n\n    class Issue {\n        +int index\n        +string field\n    }\n\n    class File {\n        +string name\n        +string path\n        +string status\n        +Issue[] issues\n        +int quantityItems\n        +string? hashFile\n    }\n\n    class Declaration {\n        +Museum museum\n        +string declarationYear\n        +User user\n        +string declarationHash\n        +Date creationDate\n        +int? totalItemsDeclared\n        +string status\n        +File archival\n        +File bibliographic\n        +File museological\n        +boolean rectification\n        +ObjectId rectificationRef\n        +boolean pending\n    }\n\n    File \"1\" -- \"*\" Issue : contains\n    Declaration \"*\" -- \"1\" User : has\n    Declaration \"1\" -- \"1\" Museum : has\n    Declaration \"1\" -- \"1\" File : archival\n    Declaration \"1\" -- \"1\" File : bibliographic\n    Declaration \"1\" -- \"1\" File : museological\n\n    class CulturalItem {\n        +String title\n        +String reproductionConditions\n        +String[] relatedMedia\n    }\n\n    class Bibliographic {\n        +Declaration declaration\n        +String recordNumber\n        +String otherNumbers\n        +String situation\n        +String type\n        +String identificationResponsibility\n        +String productionLocation\n        +String publisher\n        +String date\n        +String physicalDimension\n        +String materialTechnique\n        +String binding\n        +String descriptiveSummary\n        +String conservationState\n        +String mainSubject\n        +String chronologicalSubject\n        +String geographicalSubject\n    }\n\n    Declaration \"1\" -- \"*\" CulturalItem : contains\n    CulturalItem &lt;|-- Bibliographic : extends\n\n    class Archival {\n        +String referenceCode\n        +String date\n        +Number descriptionLevel\n        +String dimensionsSupport\n        +String producerName\n        +String administrativeHistoryBiography\n        +String archivalHistory\n        +String provenance\n        +String scopeContent\n        +String arrangementSystem\n        +String locationOriginals\n        +String conservationNotes\n        +String accessPointsIndexingSubjects\n    }\n\n    CulturalItem &lt;|-- Archival : extends\n\n    class Museological {\n        +String registrationNumber\n        +String otherNumbers\n        +String situation\n        +String denomination\n        +String author\n        +String classification\n        +String descriptiveSummary\n        +String dimensions\n        +String materialTechnique\n        +String conservationState\n        +String productionLocation\n        +String productionDate\n    }\n\n    CulturalItem &lt;|-- Museological : extends\n</code></pre>"},{"location":"#entidades-e-relacionamentos","title":"Entidades e relacionamentos","text":""},{"location":"#user","title":"User","text":"<ul> <li>Descri\u00e7\u00e3o: Representa os usu\u00e1rios do sistema.</li> <li>Atributos:</li> <li><code>name</code>: Nome do usu\u00e1rio.</li> <li><code>email</code>: E-mail do usu\u00e1rio.</li> <li><code>profile</code>: Perfil associado ao usu\u00e1rio.</li> <li><code>password</code>: Senha para autentica\u00e7\u00e3o do usu\u00e1rio.</li> <li><code>museums</code>: Lista de museus geridos pelo usu\u00e1rio.</li> <li>Relacionamentos:</li> <li>Cada <code>User</code> possui um <code>Profile</code> e pode gerenciar m\u00faltiplos <code>Museum</code>.</li> <li>Cada <code>User</code> pode declarar v\u00e1rias <code>Declaration</code>, incluindo retificadoras.</li> <li>Cada <code>User</code> tamb\u00e9m est\u00e1 associado a um <code>Address</code>.</li> </ul>"},{"location":"#profile","title":"Profile","text":"<ul> <li>Descri\u00e7\u00e3o: Armazena informa\u00e7\u00f5es sobre perfis que definem as permiss\u00f5es dos usu\u00e1rios.</li> <li>Atributos:</li> <li><code>name</code>: Nome do perfil.</li> <li><code>permissions</code>: Permiss\u00f5es atribu\u00eddas ao perfil.</li> <li>Relacionamentos:</li> <li>Cada <code>Profile</code> cont\u00e9m v\u00e1rias <code>Permission</code>.</li> </ul>"},{"location":"#permission","title":"Permission","text":"<ul> <li>Descri\u00e7\u00e3o: Define controles de acesso dentro do sistema.</li> <li>Atributos:</li> <li><code>name</code>: Nome descritivo da permiss\u00e3o.</li> </ul>"},{"location":"#museum","title":"Museum","text":"<ul> <li>Descri\u00e7\u00e3o: Representa um museu dentro do sistema.</li> <li>Atributos:</li> <li><code>codIbram</code>: C\u00f3digo de identifica\u00e7\u00e3o no IBRAM.</li> <li><code>name</code>: Nome do museu.</li> <li><code>administrativeSphere</code>: Esfera administrativa do museu.</li> <li><code>address</code>: Endere\u00e7o f\u00edsico do museu.</li> <li>Relacionamentos:</li> <li>Cada <code>Museum</code> possui um <code>Address</code>.</li> <li>Cada <code>User</code> pode gerenciar m\u00faltiplos <code>Museum</code>.</li> </ul>"},{"location":"#address","title":"Address","text":"<ul> <li>Descri\u00e7\u00e3o: Detalhes do endere\u00e7o f\u00edsico.</li> <li>Atributos:</li> <li><code>street</code>: Rua.</li> <li><code>number</code>: N\u00famero.</li> <li><code>complement</code>: Complemento.</li> <li><code>neighborhood</code>: Bairro.</li> <li><code>zipCode</code>: CEP.</li> <li><code>municipality</code>: Munic\u00edpio.</li> <li><code>state</code>: Estado.</li> <li>Relacionamentos:</li> <li>Usado por <code>Museum</code> e <code>User</code> para detalhar localiza\u00e7\u00f5es.</li> </ul>"},{"location":"#declaration","title":"Declaration","text":"<ul> <li>Descri\u00e7\u00e3o: Representa uma declara\u00e7\u00e3o formal relacionada a um museu.</li> <li>Atributos:</li> <li><code>museum</code>: Museu relacionado \u00e0 declara\u00e7\u00e3o.</li> <li><code>declarationYear</code>: Ano da declara\u00e7\u00e3o.</li> <li><code>user</code>: Usu\u00e1rio que fez a declara\u00e7\u00e3o.</li> <li><code>declarationHash</code>: Hash da declara\u00e7\u00e3o.</li> <li><code>creationDate</code>: Data de cria\u00e7\u00e3o da declara\u00e7\u00e3o.</li> <li><code>totalItemsDeclared</code>: Total de itens declarados.</li> <li><code>status</code>: Status da declara\u00e7\u00e3o.</li> <li><code>archival</code>: Arquivo arquiv\u00edstico associado.</li> <li><code>bibliographic</code>: Arquivo bibliogr\u00e1fico associado.</li> <li><code>museological</code>: Arquivo museol\u00f3gico associado.</li> <li><code>rectification</code>: Indica se \u00e9 uma retifica\u00e7\u00e3o.</li> <li><code>rectificationRef</code>: Refer\u00eancia \u00e0 declara\u00e7\u00e3o original, se for uma retifica\u00e7\u00e3o.</li> <li><code>pending</code>: Indica se est\u00e1 pendente.</li> <li>Relacionamentos:</li> <li>Cada <code>Declaration</code> est\u00e1 vinculada a um <code>User</code> e um <code>Museum</code> e cont\u00e9m arquivos espec\u00edficos.</li> </ul>"},{"location":"#file","title":"File","text":"<ul> <li>Descri\u00e7\u00e3o: Gerencia informa\u00e7\u00f5es sobre arquivos espec\u00edficos associados a declara\u00e7\u00f5es.</li> <li>Atributos:</li> <li><code>name</code>: Nome do arquivo.</li> <li><code>path</code>: Caminho de armazenamento do arquivo.</li> <li><code>status</code>: Status atual do arquivo.</li> <li><code>issues</code>: Problemas ou tarefas associadas ao arquivo.</li> <li><code>quantityItems</code>: Quantidade de itens no arquivo.</li> <li><code>hashFile</code>: Hash criptogr\u00e1fico opcional do arquivo para verifica\u00e7\u00e3o.</li> <li>Relacionamentos:</li> <li>Cada <code>File</code> pode conter v\u00e1rias <code>Issue</code>.</li> </ul>"},{"location":"#issue","title":"Issue","text":"<ul> <li>Descri\u00e7\u00e3o: Representa quest\u00f5es espec\u00edficas ou tarefas relacionadas a um arquivo.</li> <li>Atributos:</li> <li><code>index</code>: \u00cdndice da quest\u00e3o.</li> <li><code>field</code>: Campo relacionado \u00e0 quest\u00e3o no arquivo.</li> </ul>"},{"location":"#culturalitem","title":"CulturalItem","text":"<ul> <li>Descri\u00e7\u00e3o: Classe base para diferentes tipos de itens culturais, que podem incluir detalhes bibliogr\u00e1ficos, arquiv\u00edsticos e museol\u00f3gicos.</li> <li>Atributos:</li> <li><code>title</code>: T\u00edtulo do item cultural.</li> <li><code>reproductionConditions</code>: Condi\u00e7\u00f5es de reprodu\u00e7\u00e3o do item.</li> <li><code>relatedMedia</code>: M\u00eddia relacionada ao item.</li> <li>Relacionamentos:</li> <li><code>CulturalItem</code> \u00e9 estendido pelas classes <code>Bibliographic</code>, <code>Archival</code> e <code>Museological</code>.</li> </ul>"},{"location":"#bibliographic-archival-museological","title":"Bibliographic, Archival, Museological","text":"<ul> <li>Descri\u00e7\u00e3o: Extens\u00f5es especializadas de <code>CulturalItem</code> adaptadas \u00e0s necessidades espec\u00edficas de documentos bibliogr\u00e1ficos, arquiv\u00edsticos ou museol\u00f3gicos.</li> <li>Atributos e Relacionamentos:</li> <li>Cada classe inclui atributos detalhados espec\u00edficos para cada tipo e estende a classe base <code>CulturalItem</code>.</li> </ul>"},{"location":"#consideracoes-finais","title":"Considera\u00e7\u00f5es Finais","text":"<p>Este documento serve como um guia essencial para o entendimento e a implementa\u00e7\u00e3o do projeto INBCM, que envolve uma colabora\u00e7\u00e3o significativa entre o IBRAM e o NOCS Lab do IFRN. O objetivo principal \u00e9 melhorar a gest\u00e3o dos bens culturais musealizados atrav\u00e9s de uma plataforma de automa\u00e7\u00e3o informacional, promovendo uma gest\u00e3o mais eficaz e a preserva\u00e7\u00e3o do patrim\u00f4nio cultural brasileiro.</p> <p>Atrav\u00e9s deste projeto, busca-se n\u00e3o apenas preservar, mas tamb\u00e9m facilitar o acesso e a interoperabilidade dos dados culturais, beneficiando museus e institui\u00e7\u00f5es culturais com uma integra\u00e7\u00e3o mais eficiente. A moderniza\u00e7\u00e3o do Invent\u00e1rio Nacional de Bens Culturais Musealizados atrav\u00e9s deste sistema digital \u00e9 um passo crucial para a sustentabilidade e a acessibilidade do patrim\u00f4nio cultural nacional.</p> <p>\u00c9 recomend\u00e1vel que o documento seja revisado e atualizado periodicamente para refletir o progresso e as adapta\u00e7\u00f5es do projeto, garantindo que ele continue alinhado com as necessidades culturais e tecnol\u00f3gicas atuais. Este esfor\u00e7o cont\u00ednuo assegurar\u00e1 a prote\u00e7\u00e3o e valoriza\u00e7\u00e3o do patrim\u00f4nio cultural brasileiro para as futuras gera\u00e7\u00f5es.</p>"},{"location":"arquitetura/","title":"Arquitetura do projeto INBCM","text":""},{"location":"arquitetura/#objetivos-da-arquitetura","title":"Objetivos da arquitetura","text":"<p>A arquitetura do projeto INBCM foi concebida para ser modular, robusta e escal\u00e1vel, visando atender a uma ampla gama de requisitos e cen\u00e1rios de uso. Buscamos criar uma plataforma que possa evoluir e se adaptar \u00e0s necessidades futuras, mantendo a integridade, seguran\u00e7a e acessibilidade dos dados.</p> <pre><code>graph LR\n    A(Frontend User - ReactJS) &lt;--&gt; L{Balanceador de carga}\n    C(Frontend Admin - ReactJS) &lt;--&gt; L{Balanceador de carga}\n    D(Tainacan - Wordpress) &lt;--&gt; L{Balanceador de carga}\n    L{Balanceador de carga} &lt;--&gt; E{Backend - NodeJs}\n    E{Backend - NodeJs} &lt;--&gt; F[(Mongo)]\n    E{Backend - NodeJs} &lt;--&gt; G(KeyCloak)\n    %%G(KeyCloak) &lt;--&gt; H(API do MuseusBR)\n    %%E{Backend - NodeJs} &lt;--&gt; I(RabbitMQ)\n    %%I(RabbitMQ) --&gt; J(Processador arquivos)</code></pre>"},{"location":"arquitetura/#componentes-da-arquitetura-frontend","title":"Componentes da arquitetura (Frontend)","text":""},{"location":"arquitetura/#um-plugin-de-extensao-do-tainacan","title":"Um plugin de extens\u00e3o do Tainacan","text":"<p>O plugin para extens\u00e3o do Tainacan permitir\u00e1 aos museus e institui\u00e7\u00f5es culturais integrarem suas cole\u00e7\u00f5es ao INBCM diretamente do painel de administra\u00e7\u00e3o do Tainacan. Este plugin oferece uma interface intuitiva para o envio de invent\u00e1rios e consulta de dados, garantindo uma experi\u00eancia de usu\u00e1rio uniforme e integrada.</p>"},{"location":"arquitetura/#aplicacao-web-inbcm","title":"Aplica\u00e7\u00e3o Web INBCM","text":"<p>A aplica\u00e7\u00e3o web do INBCM serve como o ponto central para usu\u00e1rios que n\u00e3o utilizam o Tainacan. Aqui, os usu\u00e1rios podem baixar templates de invent\u00e1rio, preencher e submeter seus arquivos para an\u00e1lise e inclus\u00e3o no sistema. Al\u00e9m disso, esta plataforma permite a consulta de itens museol\u00f3gicos j\u00e1 catalogados, oferecendo filtros e ferramentas de pesquisa avan\u00e7adas.</p>"},{"location":"arquitetura/#aplicacao-web-de-administracao-para-funcionarios-do-ibram","title":"Aplica\u00e7\u00e3o Web de administra\u00e7\u00e3o para funcion\u00e1rios do IBRAM","text":"<p>A aplica\u00e7\u00e3o web de administra\u00e7\u00e3o serve como uma plataforma para que funcion\u00e1rios do IBRAM possam gerenciar e monitorar os processos e dados do sistema, incluindo a revis\u00e3o e valida\u00e7\u00e3o de informa\u00e7\u00f5es enviadas pelos museus.</p>"},{"location":"arquitetura/#componentes-da-arquitetura-backend","title":"Componentes da arquitetura (Backend)","text":""},{"location":"arquitetura/#nodejs","title":"Node.js","text":"<p>A escolha do Node.js foi devido \u00e0 sua efici\u00eancia com opera\u00e7\u00f5es I/O ass\u00edncronas, sendo ideal para o backend que lidar\u00e1 com um volume significativo de requisi\u00e7\u00f5es e processamento de dados em tempo real. O Node.js atua como a espinha dorsal da plataforma, gerenciando a l\u00f3gica de aplica\u00e7\u00e3o, autentica\u00e7\u00e3o de usu\u00e1rios e intera\u00e7\u00e3o com o banco de dados.</p>"},{"location":"arquitetura/#autenticacao","title":"Autentica\u00e7\u00e3o","text":"<p>A autentica\u00e7\u00e3o dos usu\u00e1rios ser\u00e1 gerenciada pelo Keycloak, que se integra ao servi\u00e7o MuseusBR para verificar credenciais. Este processo garante que apenas usu\u00e1rios autorizados possam enviar invent\u00e1rios e acessar dados sens\u00edveis.</p>"},{"location":"boas-praticas-api-rest/","title":"Boas pr\u00e1ticas para API REST no Projeto INBCM","text":""},{"location":"boas-praticas-api-rest/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>Este documento destina-se a orientar desenvolvedores e arquitetos de software envolvidos no projeto INBCM na cria\u00e7\u00e3o e manuten\u00e7\u00e3o de APIs REST. As APIs REST s\u00e3o fundamentais para a integra\u00e7\u00e3o de diferentes sistemas e servi\u00e7os, oferecendo uma interface clara e eficiente para o acesso a recursos via HTTP. A ades\u00e3o \u00e0s boas pr\u00e1ticas descritas aqui visa garantir que as APIs sejam seguras, escal\u00e1veis, e f\u00e1ceis de usar.</p>"},{"location":"boas-praticas-api-rest/#conceitos-basicos","title":"Conceitos b\u00e1sicos","text":""},{"location":"boas-praticas-api-rest/#path","title":"Path","text":"<p>O \"path\" \u00e9 a parte da URL que identifica o recurso na API. Ele \u00e9 fundamental para o roteamento das requisi\u00e7\u00f5es at\u00e9 os controladores apropriados. Por exemplo, na URL <code>https://api.inbcm.com.br/users</code>, o path \u00e9 <code>/users</code>.</p>"},{"location":"boas-praticas-api-rest/#resources","title":"Resources","text":"<p>\"Resources\" ou recursos representam entidades ou objetos dentro do dom\u00ednio da aplica\u00e7\u00e3o. Uma API REST deve ser projetada em torno de recursos, que s\u00e3o manipulados atrav\u00e9s de m\u00e9todos HTTP. Por exemplo, um recurso pode ser um usu\u00e1rio, acessado via <code>GET /users/{id}</code> para obter informa\u00e7\u00f5es desse usu\u00e1rio.</p>"},{"location":"boas-praticas-api-rest/#query-string","title":"Query string","text":"<p>A \"query string\" \u00e9 utilizada para passar par\u00e2metros adicionais para a API, como filtros, ordena\u00e7\u00e3o ou pagina\u00e7\u00e3o. Esses par\u00e2metros s\u00e3o adicionados \u00e0 URL ap\u00f3s um <code>?</code>. Por exemplo, <code>GET /users?active=true&amp;sort=asc</code> filtra por usu\u00e1rios ativos e os ordena em ordem ascendente.</p>"},{"location":"boas-praticas-api-rest/#boas-praticas-em-apis-rest","title":"Boas pr\u00e1ticas em APIs REST","text":""},{"location":"boas-praticas-api-rest/#urls-claras-e-intuitivas","title":"URLs claras e intuitivas","text":"<p>Utilize URLs que sejam intuitivas e f\u00e1ceis de entender, o que facilita a compreens\u00e3o e o uso da API. Prefira o uso de substantivos e mantenha um padr\u00e3o consistente em toda a API.</p>"},{"location":"boas-praticas-api-rest/#padronizacao-de-metodos-http","title":"Padroniza\u00e7\u00e3o de m\u00e9todos HTTP","text":"<p>Use os m\u00e9todos HTTP de maneira padronizada: - <code>GET</code> para buscar dados. - <code>POST</code> para criar novos recursos. - <code>PUT</code> para atualizar recursos inteiramente. - <code>PATCH</code> para atualiza\u00e7\u00f5es parciais. - <code>DELETE</code> para excluir recursos.</p>"},{"location":"boas-praticas-api-rest/#codigos-de-status-http-apropriados","title":"C\u00f3digos de status HTTP apropriados","text":"<p>Empregue c\u00f3digos de status HTTP para comunicar o resultado das opera\u00e7\u00f5es claramente:</p>"},{"location":"boas-praticas-api-rest/#codigos-de-sucesso-2xx","title":"C\u00f3digos de sucesso (2xx)","text":"<p><code>200 OK</code>: Indica que a requisi\u00e7\u00e3o foi bem-sucedida. \u00c9 o c\u00f3digo mais comum para uma resposta HTTP bem-sucedida, especialmente ap\u00f3s um GET.</p> <p><code>201 Created</code>: Usado quando um novo recurso \u00e9 criado com sucesso, t\u00edpico ap\u00f3s um POST.</p> <p><code>202 Accepted</code>: Indica que a requisi\u00e7\u00e3o foi aceita para processamento, mas o processamento ainda n\u00e3o foi conclu\u00eddo. Comum em opera\u00e7\u00f5es que s\u00e3o processadas de forma ass\u00edncrona.</p> <p><code>204 No Content</code>: Resposta para uma opera\u00e7\u00e3o bem-sucedida que n\u00e3o retorna dados, como ap\u00f3s um DELETE.</p>"},{"location":"boas-praticas-api-rest/#codigos-de-redirecionamento-3xx","title":"C\u00f3digos de redirecionamento (3xx)","text":"<p><code>301 Moved Permanently</code>: Este e outros c\u00f3digos de redirecionamento s\u00e3o menos comuns em APIs mas \u00fateis para indicar que um recurso foi movido permanentemente para uma nova URL.</p> <p><code>303 See Other</code>: Indica que o recurso pode ser encontrado em outra URI usando o m\u00e9todo GET.</p>"},{"location":"boas-praticas-api-rest/#codigos-de-erro-do-cliente-4xx","title":"C\u00f3digos de erro do cliente (4xx)","text":"<p><code>400 Bad Request</code>: Indica que o servidor n\u00e3o pode ou n\u00e3o vai processar a requisi\u00e7\u00e3o devido a algo que foi percebido como um erro do cliente (e.g., formato de requisi\u00e7\u00e3o inv\u00e1lido).</p> <p><code>401 Unauthorized</code>: Usado quando a autentica\u00e7\u00e3o \u00e9 necess\u00e1ria e falhou ou ainda n\u00e3o foi fornecida.</p> <p><code>403 Forbidden</code>: O servidor entendeu a requisi\u00e7\u00e3o, mas se recusa a autoriz\u00e1-la. Diferente do 401, nesse caso a autentica\u00e7\u00e3o n\u00e3o faria diferen\u00e7a.</p> <p><code>404 Not Found</code>: O servidor n\u00e3o encontrou nada que corresponda ao URI da requisi\u00e7\u00e3o.</p> <p><code>405 Method Not Allowed</code>: Um m\u00e9todo solicitado \u00e9 conhecido pelo servidor, mas foi desativado e n\u00e3o pode ser usado.</p> <p><code>409 Conflict</code>: Indica que a requisi\u00e7\u00e3o n\u00e3o p\u00f4de ser completada devido a um conflito com o estado atual do recurso.</p>"},{"location":"boas-praticas-api-rest/#codigos-de-erro-do-servidor-5xx","title":"C\u00f3digos de erro do servidor (5xx)","text":"<p><code>500 Internal Server Error</code>: Um erro gen\u00e9rico que indica que o servidor encontrou uma condi\u00e7\u00e3o inesperada.</p> <p><code>501 Not Implemented</code>: O servidor n\u00e3o suporta a funcionalidade necess\u00e1ria para atender a requisi\u00e7\u00e3o.</p> <p><code>503 Service Unavailable</code>: O servidor est\u00e1 incapaz de lidar com a requisi\u00e7\u00e3o devido a uma manuten\u00e7\u00e3o tempor\u00e1ria ou sobrecarga.</p>"},{"location":"boas-praticas-api-rest/#suporte-para-filtragem-paginacao-e-ordenacao","title":"Suporte para filtragem, pagina\u00e7\u00e3o e ordena\u00e7\u00e3o","text":"<p>Forne\u00e7a mecanismos para filtragem, pagina\u00e7\u00e3o e ordena\u00e7\u00e3o dos dados, o que melhora a usabilidade e efici\u00eancia da API especialmente em conjuntos de dados grandes.</p>"},{"location":"boas-praticas-api-rest/#seguranca-e-autenticacao","title":"Seguran\u00e7a e autentica\u00e7\u00e3o","text":"<p>Garanta a seguran\u00e7a da API implementando autentica\u00e7\u00e3o e autoriza\u00e7\u00e3o adequadas. Utilize protocolos como OAuth, tokens JWT, e sempre use HTTPS.</p>"},{"location":"boas-praticas-api-rest/#documentacao-clara-e-abrangente","title":"Documenta\u00e7\u00e3o clara e abrangente","text":"<p>Forne\u00e7a uma documenta\u00e7\u00e3o detalhada e acess\u00edvel para a API, incluindo informa\u00e7\u00f5es sobre endpoints, par\u00e2metros, formatos de resposta e exemplos de uso.</p>"},{"location":"boas-praticas-api-rest/#versionamento-da-api","title":"Versionamento da API","text":"<p>Implemente o versionamento da API para permitir a evolu\u00e7\u00e3o da interface sem impactar negativamente os clientes existentes. Utilize URLs versionadas, como <code>/api/v1</code>.</p>"},{"location":"boas-praticas-api-rest/#negociacao-de-conteudo","title":"Negocia\u00e7\u00e3o de conte\u00fado","text":"<p>Suporte diferentes formatos de resposta, como JSON e XML, utilizando cabe\u00e7alhos HTTP para negocia\u00e7\u00e3o de conte\u00fado (<code>Accept</code> e <code>Content-Type</code>).</p>"},{"location":"boas-praticas-api-rest/#conclusao","title":"Conclus\u00e3o","text":"<p>Seguindo estas pr\u00e1ticas recomendadas, a API REST do projeto INBCM ser\u00e1 robusta, segura e f\u00e1cil de integrar, promovendo uma arquitetura escal\u00e1vel e flex\u00edvel. A ades\u00e3o a esses princ\u00edpios assegura que nossa API atenda \u00e0s necessidades dos desenvolvedores e contribua positivamente para o sucesso do projeto.</p>"},{"location":"guia-dev-backend/","title":"Guia de desenvolvimento do backend do projeto INBCM","text":"<p>Este guia detalhado fornece informa\u00e7\u00f5es essenciais sobre a configura\u00e7\u00e3o e o desenvolvimento do backend para o projeto INBCM. \u00c9 destinado a auxiliar tanto desenvolvedores atuais quanto novos colaboradores no entendimento da arquitetura do sistema, bem como na realiza\u00e7\u00e3o de tarefas de desenvolvimento e manuten\u00e7\u00e3o.</p>"},{"location":"guia-dev-backend/#configuracao-do-ambiente-de-desenvolvimento","title":"Configura\u00e7\u00e3o do ambiente de desenvolvimento","text":"<p>Para configurar o ambiente de desenvolvimento e iniciar o servidor de desenvolvimento, siga estes passos:</p>"},{"location":"guia-dev-backend/#clonar-o-repositorio","title":"Clonar o reposit\u00f3rio","text":"<pre><code>git clone https://github.com/Nocs-lab/inbcm-backend.git\n</code></pre>"},{"location":"guia-dev-backend/#criar-o-arquivo-env","title":"Criar o arquivo .env","text":"<p>Na pasta do projeto, crie um arquivo .env e adicione as vari\u00e1veis de ambiente conforme listado no final deste documento.</p>"},{"location":"guia-dev-backend/#iniciar-os-containers-docker-para-desenvolvimento","title":"Iniciar os containers docker para desenvolvimento","text":"<pre><code>npm run start:docker:dev\n</code></pre>"},{"location":"guia-dev-backend/#iniciar-o-servidor-em-ambiente-de-desenvolvimento","title":"Iniciar o servidor em ambiente de desenvolvimento:","text":"<pre><code>npm run dev\n</code></pre>"},{"location":"guia-dev-backend/#acessar-o-mongodb-via-mongo-express","title":"Acessar o MongoDB via Mongo Express","text":"<ul> <li>URL: localhost:8081</li> <li>Usu\u00e1rio: #####</li> <li>Senha: #####</li> </ul>"},{"location":"guia-dev-backend/#criar-pasta-de-uploads","title":"Criar pasta de uploads","text":"<p>Caso ainda n\u00e3o exista, crie manualmente uma pasta uploads na raiz do projeto para armazenar arquivos recebidos pelo servidor.</p>"},{"location":"guia-dev-backend/#estrutura-de-arquivos-principais","title":"Estrutura de arquivos principais","text":""},{"location":"guia-dev-backend/#composedevyaml","title":"compose.dev.yaml","text":"<p>Este arquivo Docker Compose define a configura\u00e7\u00e3o para os servi\u00e7os de desenvolvimento, incluindo MongoDB e Mongo Express:</p> <pre><code>services:\n  mongo:\n    ports:\n      - \"64000:27017\"\n\n  mongo-express:\n    image: mongo-express\n    ports:\n      - 8081:8081\n    environment:\n      ME_CONFIG_BASICAUTH_USERNAME: admin\n      ME_CONFIG_BASICAUTH_PASSWORD: admin\n      ME_CONFIG_MONGODB_PORT: 27017\n      ME_CONFIG_MONGODB_ADMINUSERNAME: ${DB_USER}\n      ME_CONFIG_MONGODB_ADMINPASSWORD: ${DB_PASS}\n      ME_CONFIG_MONGODB_SERVER: mongo\n    depends_on:\n      - mongo\n</code></pre>"},{"location":"guia-dev-backend/#packagejson","title":"package.json","text":"<p>Define as depend\u00eancias, scripts e configura\u00e7\u00f5es do projeto Node.js. <pre><code>{\n  \"name\": \"inbcm-uploud-planilha-mongo\",\n  \"version\": \"1.0.0\",\n  \"description\": \"\",\n  \"main\": \"server.ts\",\n  \"scripts\": {\n    \"dev\": \"nodemon server.ts\",\n    \"start:docker:dev\": \"docker compose -f compose.yaml -f compose.dev.yaml up\",\n    \"build\": \"sucrase --transforms typescript,imports -d dist .\",\n    \"start\": \"sucrase-node server.ts\",\n    \"create:admin-user\": \"sucrase-node scripts/createAdminUser.ts\",\n    \"create:data\": \"sucrase-node scripts/generateMockData.ts\",\n    \"list:users\": \"sucrase-node scripts/listUsers.ts\"\n  },\n  \"keywords\": [],\n  \"author\": \"\",\n  \"license\": \"ISC\",\n  \"dependencies\": {\n    \"@faker-js/faker\": \"^8.4.1\",\n    \"@node-rs/argon2\": \"^1.8.3\",\n    \"amqplib\": \"^0.10.4\",\n    \"compression\": \"^1.7.4\",\n    \"cookie-parser\": \"^1.4.6\",\n    \"crypto\": \"^1.0.1\",\n    \"date-fns\": \"^3.6.0\",\n    \"dotenv\": \"^16.4.5\",\n    \"dotenv-expand\": \"^11.0.6\",\n    \"ejs\": \"^3.1.10\",\n    \"express\": \"^4.19.2\",\n    \"express-async-errors\": \"^3.1.1\",\n    \"fastest-validator\": \"^1.18.0\",\n    \"helmet\": \"^7.1.0\",\n    \"html-pdf\": \"^3.0.1\",\n    \"inquirer\": \"^9.2.22\",\n    \"jsonwebtoken\": \"^9.0.2\",\n    \"mongoose\": \"^8.4.0\",\n    \"mongoose-sequence\": \"^6.0.1\",\n    \"morgan\": \"^1.10.0\",\n    \"msgpackr\": \"^1.10.2\",\n    \"multer\": \"1.4.5-lts.1\",\n    \"pdfkit\": \"^0.15.0\",\n    \"puppeteer\": \"^22.10.0\",\n    \"sucrase\": \"^3.35.0\",\n    \"uuidv4\": \"^6.2.13\",\n    \"xlsx\": \"^0.18.5\",\n    \"zod\": \"^3.23.8\"\n  },\n  \"devDependencies\": {\n    \"@eslint/eslintrc\": \"^3.1.0\",\n    \"@eslint/js\": \"^9.3.0\",\n    \"@types/amqplib\": \"^0.10.5\",\n    \"@types/compression\": \"^1.7.5\",\n    \"@types/cookie-parser\": \"^1.4.7\",\n    \"@types/cors\": \"^2.8.17\",\n    \"@types/ejs\": \"^3.1.5\",\n    \"@types/express\": \"^4.17.21\",\n    \"@types/html-pdf\": \"^3.0.3\",\n    \"@types/jsonwebtoken\": \"^9.0.6\",\n    \"@types/morgan\": \"^1.9.9\",\n    \"@types/multer\": \"^1.4.11\",\n    \"@types/node\": \"^20.12.12\",\n    \"@types/pdfkit\": \"^0.13.4\",\n    \"@typescript-eslint/eslint-plugin\": \"^6.21.0\",\n    \"commitizen\": \"^4.3.0\",\n    \"concurrently\": \"^8.2.2\",\n    \"cz-conventional-changelog\": \"^3.3.0\",\n    \"eslint\": \"^8.57.0\",\n    \"eslint-config-prettier\": \"^9.1.0\",\n    \"eslint-config-standard-with-typescript\": \"^43.0.1\",\n    \"eslint-plugin-import\": \"^2.29.1\",\n    \"eslint-plugin-n\": \"^16.6.2\",\n    \"eslint-plugin-prettier\": \"^5.1.3\",\n    \"eslint-plugin-promise\": \"^6.2.0\",\n    \"globals\": \"^15.3.0\",\n    \"husky\": \"^9.0.11\",\n    \"lint-staged\": \"^15.2.5\",\n    \"nodemon\": \"^3.1.1\",\n    \"prettier\": \"3.2.5\",\n    \"ts-node\": \"^10.9.2\",\n    \"typescript\": \"^5.4.5\"\n  },\n  \"lint-staged\": {\n    \"*.{ts,js}\": \"eslint --cache --fix\"\n  },\n  \"config\": {\n    \"commitizen\": {\n      \"path\": \"./node_modules/cz-conventional-changelog\"\n    }\n  }\n}\n</code></pre></p> <p>Os scripts definidos no <code>package.json</code> facilitam a execu\u00e7\u00e3o de tarefas comuns de desenvolvimento e opera\u00e7\u00e3o diretamente atrav\u00e9s do npm. Aqui est\u00e3o alguns dos scripts mais importantes:</p> <ul> <li><code>dev</code>: Inicia o servidor usando Nodemon para rein\u00edcio autom\u00e1tico.</li> <li><code>start:docker:dev</code>: Levanta os containers Docker necess\u00e1rios para o ambiente de desenvolvimento.</li> <li><code>build</code>: Transpila o c\u00f3digo TypeScript para JavaScript usando Sucrase, uma ferramenta alternativa ao Babel que \u00e9 mais r\u00e1pida para projetos TypeScript. O c\u00f3digo resultante \u00e9 colocado no diret\u00f3rio <code>dist</code>.</li> <li><code>create:admin-user</code>: Script para criar um usu\u00e1rio administrador no sistema.</li> <li><code>start</code>: Executa o servidor diretamente do c\u00f3digo TypeScript, permitindo a execu\u00e7\u00e3o em produ\u00e7\u00e3o sem necessidade de uma etapa expl\u00edcita de transpila\u00e7\u00e3o.</li> <li><code>create:data</code>: Script para gerar dados de mock para desenvolvimento.</li> </ul>"},{"location":"guia-dev-backend/#dependencias","title":"Depend\u00eancias","text":"<p>As depend\u00eancias s\u00e3o bibliotecas e frameworks dos quais o projeto depende para funcionar corretamente. Algumas das principais depend\u00eancias incluem:</p> <ul> <li><code>express</code>: Framework web robusto para Node.js.</li> <li><code>mongoose</code>: Biblioteca de modelagem de objetos MongoDB para Node.js.</li> <li><code>dotenv</code>: M\u00f3dulo que carrega vari\u00e1veis de ambiente de um arquivo .env para process.env.</li> <li><code>jsonwebtoken</code>: Implementa\u00e7\u00e3o de JSON Web Tokens para seguran\u00e7a e autentica\u00e7\u00e3o.</li> <li><code>helmet</code>: Ajuda a proteger aplicativos Express definindo v\u00e1rios cabe\u00e7alhos HTTP.</li> </ul>"},{"location":"guia-dev-backend/#devdependencies","title":"DevDependencies","text":"<p>As devDependencies s\u00e3o utilizadas apenas durante o desenvolvimento e n\u00e3o s\u00e3o necess\u00e1rias em produ\u00e7\u00e3o. Incluem ferramentas como:</p> <ul> <li><code>nodemon</code>: Monitora mudan\u00e7as nos arquivos do projeto e reinicia o servidor automaticamente.</li> <li><code>eslint</code>: Ferramenta de linting para identificar padr\u00f5es problem\u00e1ticos encontrados no c\u00f3digo TypeScript/JavaScript.</li> <li><code>typescript</code>: Adiciona tipagem est\u00e1tica ao JavaScript para melhorar a confiabilidade e a manutenibilidade do c\u00f3digo.</li> </ul>"},{"location":"guia-dev-backend/#env","title":".env","text":"<p>Este arquivo armazena vari\u00e1veis de ambiente cruciais para a configura\u00e7\u00e3o do sistema, incluindo credenciais e URLs para diversos servi\u00e7os:</p> <pre><code>DB_USER=\"root\"\nDB_PASS=\"#######\"\nKEYCLOAK_DB_PASSWORD=\"########\"\nDB_URL=\"mongodb://${DB_USER}:${DB_PASS}@localhost:64000/INBCM?authSource=admin\"\nQUEUE_URL=\"amqp://guest:guest@localhost\"\nJWT_SECRET=\"#####\"\nPUBLIC_SITE_URL=\"https://localhost:5174/\"\nADMIN_SITE_URL=\"https://localhost:5173/\"\n</code></pre>"},{"location":"guia-dev-backend/#estrutura-de-arquivos-e-codigos-importantes","title":"Estrutura de arquivos e c\u00f3digos importantes","text":""},{"location":"guia-dev-backend/#serverts","title":"./server.ts","text":"<p>Este arquivo configura e inicia o servidor Express. \u00c9 o ponto de entrada do backend.</p> <pre><code>import \"./config\"\nimport app from \"./app\";\nimport conn from \"./db/conn\";\n\nconn();\n\nconst PORT = parseInt(process.env.PORT || \"3000\");\napp.listen(PORT, () =&gt; console.log(`Servidor funcionando na porta ${PORT}`));\n</code></pre>"},{"location":"guia-dev-backend/#explicacao","title":"Explica\u00e7\u00e3o:","text":"<ul> <li><code>import \"./config\"</code>: Importa as configura\u00e7\u00f5es de ambiente.</li> <li><code>import app from \"./app\"</code>: Importa a configura\u00e7\u00e3o do aplicativo Express.</li> <li><code>import conn from \"./db/conn\"</code>: Importa a fun\u00e7\u00e3o de conex\u00e3o ao banco de dados.</li> <li><code>conn()</code>: Invoca a conex\u00e3o com o banco de dados.</li> <li><code>app.listen(...)</code>: Inicia o servidor na porta especificada, com feedback no console.</li> </ul>"},{"location":"guia-dev-backend/#appts","title":"./app.ts","text":"<p>Configura o middleware e as rotas do aplicativo Express.</p> <pre><code>import express, { type ErrorRequestHandler } from \"express\";\nimport helmet from \"helmet\";\nimport morgan from \"morgan\";\nimport cookieParser from \"cookie-parser\";\nimport compression from \"compression\"\nimport routes from \"./routes/routes\";\nimport config from \"./config\"\n\nconst app = express();\napp.use(helmet());\napp.use(morgan(\"dev\"));\napp.use(express.json());\napp.use(cookieParser(config.JWT_SECRET));\napp.use(compression());\napp.use(\"/api\", routes);\n\nconst errorHandling: ErrorRequestHandler = (err, _req, res, _next) =&gt; {\n  res.status(500).json({ msg: err.message, success: false });\n};\napp.use(errorHandling);\n\nexport default app;\n</code></pre>"},{"location":"guia-dev-backend/#explicacao_1","title":"Explica\u00e7\u00e3o:","text":"<ul> <li>Middleware como <code>helmet</code> e <code>compression</code> s\u00e3o usados para seguran\u00e7a e otimiza\u00e7\u00e3o.</li> <li><code>morgan</code> \u00e9 utilizado para logging.</li> <li><code>cookieParser</code> \u00e9 utilizado para analisar cookies com um segredo especificado.</li> <li><code>/api</code> \u00e9 o ponto de entrada base para as rotas.</li> <li><code>errorHandling</code> captura e trata erros n\u00e3o capturados nas rotas.</li> </ul>"},{"location":"guia-dev-backend/#dbconnts","title":"./db/conn.ts","text":"<p>Estabelece conex\u00e3o com o MongoDB usando Mongoose.</p> <pre><code>import mongoose from \"mongoose\";\nimport config from \"../config\"\n\nasync function main() {\n  try {\n    mongoose.set(\"strictQuery\", true);\n    await mongoose.connect(config.DB_URL!);\n    console.log(\"Conectado ao MongoDB!\");\n  } catch (error) {\n    console.log(`Erro: ${error}`);\n  }\n}\n\nexport default main;\n</code></pre>"},{"location":"guia-dev-backend/#explicacao_2","title":"Explica\u00e7\u00e3o:","text":"<ul> <li>Configura o Mongoose para uso de consultas estritas.</li> <li>Conecta-se ao banco de dados usando a URL definida no arquivo de configura\u00e7\u00e3o.</li> </ul>"},{"location":"guia-dev-backend/#controllersdeclaracaocontrollerts","title":"./controllers/DeclaracaoController.ts","text":"<p>Gerencia opera\u00e7\u00f5es relacionadas \u00e0s declara\u00e7\u00f5es, incluindo CRUD e l\u00f3gicas espec\u00edficas para manipula\u00e7\u00e3o de dados das declara\u00e7\u00f5es.</p> <pre><code>class DeclaracaoController {\n  async getDeclaracoesPorStatus(req: Request, res: Response) {\n    const declaracoes = await this.declaracaoService.declaracoesPorStatus();\n    return res.status(200).json(declaracoes);\n  }\n  ...\n}\n</code></pre>"},{"location":"guia-dev-backend/#explicacao_3","title":"Explica\u00e7\u00e3o:","text":"<ul> <li><code>getDeclaracoesPorStatus</code>: Busca declara\u00e7\u00f5es por status usando um servi\u00e7o dedicado e retorna as informa\u00e7\u00f5es em formato JSON.</li> </ul>"},{"location":"guia-dev-backend/#como-adicionar-novos-modelos-e-controladores","title":"Como adicionar novos modelos e controladores?","text":""},{"location":"guia-dev-backend/#criando-um-novo-modelo","title":"Criando um novo modelo","text":"<p>Modelos no Express.js com Mongoose s\u00e3o usados para definir a estrutura dos dados que ser\u00e3o armazenados no MongoDB. Aqui est\u00e3o os passos para criar um novo modelo:</p> <p>Passo 1: Primeiramente, crie um novo arquivo na pasta models, por exemplo, NovoItem.ts. Dentro deste arquivo, voc\u00ea definir\u00e1 o esquema do modelo utilizando o Mongoose.</p> <pre><code>import mongoose from 'mongoose';\n\nconst novoItemSchema = new mongoose.Schema({\n    nome: { type: String, required: true },\n    descricao: String,\n    preco: Number,\n    disponibilidade: { type: Boolean, default: true }\n});\n\nconst NovoItem = mongoose.model('NovoItem', novoItemSchema);\n\nexport default NovoItem;\n</code></pre> <p>Este esquema define um novo item com propriedades como nome, descri\u00e7\u00e3o, pre\u00e7o e disponibilidade.</p> <p>Passo 2: Ap\u00f3s criar o modelo, voc\u00ea pode us\u00e1-lo em qualquer parte do seu backend para interagir com a cole\u00e7\u00e3o NovoItem no banco de dados.</p>"},{"location":"guia-dev-backend/#criando-um-novo-controlador","title":"Criando um novo controlador","text":"<p>Controladores s\u00e3o usados para definir a l\u00f3gica de neg\u00f3cios do aplicativo. Eles interagem com os modelos para buscar, criar, atualizar ou deletar dados.</p> <p>Passo 1: Criar o Arquivo do Controlador Crie um arquivo na pasta controllers, por exemplo, NovoItemController.ts. Este arquivo conter\u00e1 toda a l\u00f3gica para manipular os dados dos novos itens.</p> <pre><code>import { Request, Response } from 'express';\nimport NovoItem from '../models/NovoItem';\n\nclass NovoItemController {\n    async criarNovoItem(req: Request, res: Response) {\n        try {\n            const novoItem = new NovoItem(req.body);\n            await novoItem.save();\n            res.status(201).send(novoItem);\n        } catch (error) {\n            res.status(400).json({ error: error.message });\n        }\n    }\n\n    // Adicione mais m\u00e9todos conforme necess\u00e1rio\n}\n\nexport default new NovoItemController();\n</code></pre> <p>Este controlador inclui um m\u00e9todo para criar novos itens. M\u00e9todos adicionais para buscar, atualizar e deletar itens podem ser adicionados seguindo uma estrutura similar.</p> <p>Passo 2: Conectar o Controlador \u00e0s Rotas Para que as a\u00e7\u00f5es do controlador sejam acess\u00edveis via HTTP, voc\u00ea precisa definir rotas que estar\u00e3o associadas a esses m\u00e9todos. Edite ou crie um arquivo de rotas, por exemplo, em <code>routes/novoItemRoutes.ts</code>.</p> <pre><code>import express from 'express';\nimport novoItemController from '../controllers/NovoItemController';\n\nconst router = express.Router();\n\nrouter.post('/novoItem', novoItemController.criarNovoItem);\n// Adicionar mais rotas conforme necess\u00e1rio\n\nexport default router;\n</code></pre> <p>Passo 3: Registrar as Rotas Finalmente, certifique-se de que as novas rotas s\u00e3o importadas e utilizadas no arquivo principal de rotas ou diretamente no arquivo app.ts.</p> <p><pre><code>import novoItemRoutes from './routes/novoItemRoutes';\napp.use('/api', novoItemRoutes);\n</code></pre> Lembre-se de testar cada novo modelo e controlador para garantir que eles funcionem como esperado. Adicionar testes unit\u00e1rios e de integra\u00e7\u00e3o pode ajudar a manter a qualidade e a estabilidade do aplicativo.</p>"},{"location":"guia-dev-backend/#consideracoes-finais","title":"Considera\u00e7\u00f5es finais","text":"<p>Este guia fornece uma vis\u00e3o abrangente da estrutura e dos procedimentos para o desenvolvimento do backend do projeto INBCM. A documenta\u00e7\u00e3o deve ser atualizada regularmente para refletir quaisquer mudan\u00e7as no projeto, garantindo que todos os desenvolvedores tenham acesso \u00e0s informa\u00e7\u00f5es mais atuais para sua atua\u00e7\u00e3o efetiva.</p>"},{"location":"manual/","title":"Manual do usu\u00e1rio","text":""},{"location":"manual/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>Bem-vindo ao manual de usu\u00e1rio do m\u00f3dulo Envio de Declara\u00e7\u00f5es. O documento foi elaborado para fornecer uma orienta\u00e7\u00e3o de como voc\u00ea pode utilizar as funcionalidades desta ferramenta.</p> <p>Esse m\u00f3dulo foi desenvolvido para permitir que museus informem ao Instituto Brasileiro de Museus (IBRAM) os bens que comp\u00f5em os seus acervos. Por meio de uma interface intuitiva, o m\u00f3dulo visa simplificar o processo para declara\u00e7\u00e3o dos bens musealizados.</p> <p>Para facilitar o seu entendimento, o manual foi dividido em se\u00e7\u00f5es. Na se\u00e7\u00e3o \"Ambiente\", voc\u00ea encontrar\u00e1 informa\u00e7\u00f5es sobre os requisitos t\u00e9cnicos e as configura\u00e7\u00f5es para o funcionamento do m\u00f3dulo.</p> <p>A se\u00e7\u00e3o \"Como iniciar?\" explica como voc\u00ea pode realizar o login e ter o seu primeiro acesso. Por fim, em \"Funcionalidades\", s\u00e3o detalhados  os principais recursos dispon\u00edveis, incluindo instru\u00e7\u00f5es para as opera\u00e7\u00f5es mais comuns.</p>"},{"location":"manual/#ambiente","title":"Ambiente","text":"<p>O m\u00f3dulo de Envio de Declara\u00e7\u00f5es foi desenvolvido para ser executado em ambiente web, garantindo que ele esteja acess\u00edvel em todas as regi\u00f5es do pa\u00eds. A seguir, est\u00e3o descritos os requisitos necess\u00e1rios para o funcionamento adequado do sistema:</p> <ol> <li>Conex\u00e3o com a internet: para acessar o m\u00f3dulo, \u00e9 imprescind\u00edvel possuir uma conex\u00e3o est\u00e1vel com Internet. Uma conex\u00e3o de banda larga \u00e9 recomendada para assegurar confiabilidade no bom desempenho do sistema;</li> <li>Dispositivo: o sistema pode ser acessado a partir de computadores desktop, laptops, tablets ou smartphones. Certifique-se de que seu dispositivo esteja em boas condi\u00e7\u00f5es de funcionamento;</li> <li>Configura\u00e7\u00f5es m\u00ednimas: 4 GB de mem\u00f3ria RAM (ou superior) e, pelo menos, 500 MB dispon\u00edveis;</li> <li>Navegadores compat\u00edveis: o m\u00f3dulo \u00e9 compat\u00edvel com os navegadores web mais populares. Portanto, recomenda-se a vers\u00e3o mais recente do Google Chrome ou do Mozilla Firefox ou do Safari.</li> </ol>"},{"location":"manual/#objetivos","title":"Objetivos","text":"<p>Este material tem como objetivo fornecer instru\u00e7\u00f5es detalhadas sobre a operacionaliza\u00e7\u00e3o do m\u00f3dulo Envio de Declara\u00e7\u00f5es, desenvolvido pelo NOCS Lab, uma laborat\u00f3rio maker localizado no IFRN/Parnamirim. Os objetivos espec\u00edficos deste documento incluem:</p> <ol> <li>Oferecer instru\u00e7\u00f5es claras para que os usu\u00e1rios possam operar o m\u00f3dulo da melhor forma;</li> <li>Garantir que os usu\u00e1rios utilizem as funcionalidades de forma intuitiva a fim de minimizar a curva de aprendizado; e</li> <li>Explicar as funcionalidades atuais do m\u00f3dulo, por meio de capturas de tela, para assegurar uma compreens\u00e3o ideal.</li> </ol>"},{"location":"manual/#como-iniciar","title":"Como iniciar?","text":"<p>Para acessar o m\u00f3dulo, siga os passos abaixo:</p> <ol> <li>Acessar o endere\u00e7o eletr\u00f4nico: abra seu navegador web favorito e visite o endere\u00e7o eletr\u00f4nico https://homologacao.inbcm.ifrn.tainacan.org;</li> <li>P\u00e1gina de login: na primeira p\u00e1gina do portal, voc\u00ea ver\u00e1 a interface de login, conforme ilustrado na imagem abaixo:</li> </ol> <p></p> <p>Ap\u00f3s preencher os campos \"E-mail\" e \"Senha\", pressione o bot\u00e3o \"Entrar\". Se suas credenciais tiverem sido informadas corretamente, voc\u00ea ser\u00e1 redirecionado para a p\u00e1gina principal da aplica\u00e7\u00e3o, como representado na imagem a seguir. </p> <p></p> <p>Nesta p\u00e1gina, est\u00e3o dispon\u00edveis as seguintes funcionalidades:</p> <ol> <li>Minhas declara\u00e7\u00f5es (indicada pela letra \"A\"): permite que o usu\u00e1rio visualize as declara\u00e7\u00f5es enviadas; e </li> <li>Nova declara\u00e7\u00e3o (indicada pela letra \"B\"): permite o envio de uma nova declara\u00e7\u00e3o ou de uma declara\u00e7\u00e3o retificadora.</li> </ol>"},{"location":"manual/#funcionalidades","title":"Funcionalidades","text":"<p>Nesta se\u00e7\u00e3o, s\u00e3o apresentadas as principais funcionalidades do m\u00f3dulo Envio de Declara\u00e7\u00f5es. As funcionalidades est\u00e3o divididas em duas subse\u00e7\u00f5es: Minhas Declara\u00e7\u00f5es e Nova Declara\u00e7\u00e3o.</p>"},{"location":"manual/#minhas-declaracoes","title":"Minhas declara\u00e7\u00f5es","text":"<p>Nesta p\u00e1gina, o usu\u00e1rio pode visualizar as declara\u00e7\u00f5es que j\u00e1 foram enviadas. A funcionalidade permite ao usu\u00e1rio</p> <ol> <li>acessar o hist\u00f3rico de declara\u00e7\u00f5es;</li> <li>filtrar as declara\u00e7\u00f5es por diferentes crit\u00e9rios; e</li> <li>detalhar os itens de cada declara\u00e7\u00e3o enviada.</li> </ol> <p>Para cada declara\u00e7\u00e3o enviada, s\u00e3o exibidas informa\u00e7\u00f5es como </p> <ol> <li>data de envio; </li> <li>ano da declara\u00e7\u00e3o;</li> <li>nome do museu; </li> <li>situa\u00e7\u00e3o em que se encontra a declara\u00e7\u00e3o; e</li> <li>listagem das pend\u00eancias.</li> </ol> <p>Al\u00e9m disso, o usu\u00e1rio tamb\u00e9m pode fazer o download da(s) planilha(s) enviada(s) e do recibo de entrega da declara\u00e7\u00e3o. Nesta tela, como observado na imagem abaixo, tamb\u00e9m \u00e9 poss\u00edvel que o usu\u00e1rio escolha, caso necessite, enviar uma declara\u00e7\u00e3o retificadora.</p> <p></p>"},{"location":"manual/#nova-declaracao","title":"Nova declara\u00e7\u00e3o","text":"<p>Na p\u00e1gina de envio de declara\u00e7\u00f5es, o usu\u00e1rio deve utiliz\u00e1-la para enviar os bens que comp\u00f5em o acervo do museu. De acordo com a Resolu\u00e7\u00e3o Normativa n\u00ba 6, de 31 de agosto de 2021, os bens podem ser Museol\u00f3gico, Bibliogr\u00e1fico ou Arquiv\u00edstico. Para cada um desses tipos, h\u00e1 um modelo de planilha no qual ser\u00e3o preenchidos os dados referentes aos bens. </p> <p>A p\u00e1gina na qual o usu\u00e1rio pode enviar a sua declara\u00e7\u00e3o de bens \u00e9 representada na imagem abaixo:</p> <p></p> <p>Caso o usu\u00e1rio seja respons\u00e1vel pelo envio da declara\u00e7\u00e3o de apenas um museu, automaticamente, o sistema entender\u00e1 que a(s) planilha(s) a ser(em) enviada(s) corresponde(m) \u00e0quele museu. No entanto, caso o usu\u00e1rio seja respons\u00e1vel por enviar a declara\u00e7\u00e3o de mais de um museu, deve ser especificado de qual museu est\u00e1 se enviando a declara\u00e7\u00e3o (o que \u00e9 representado pela letra \"A\" da imagem).</p> <p>N\u00e3o \u00e9 necess\u00e1rio que sejam enviadas planilhas para cada um dos tipos de bens, no entanto, pelo menos uma delas \u00e9 obrigat\u00f3ria. Observa-se que, para cada tipo de bem, existe um campo correspondente (representado pelas letras \"B\", \"C\" e \"D\") em que o usu\u00e1rio pode informar a(s) planilha(s) a ser(em) enviada(s).</p>"},{"location":"recomendacoes/","title":"Orienta\u00e7\u00f5es para o envio de c\u00f3digo em um reposit\u00f3rio","text":""},{"location":"recomendacoes/#qualidade-do-codigo","title":"Qualidade do c\u00f3digo","text":"<ul> <li>Padroniza\u00e7\u00e3o de Estilo: Use um guia de estilo espec\u00edfico para a linguagem em que est\u00e1 trabalhando (por exemplo, PEP 8 para Python, StandardJS para JavaScript). Utilize ferramentas de formata\u00e7\u00e3o autom\u00e1tica como Prettier, ESLint, ou Black para garantir a consist\u00eancia.</li> <li>Coment\u00e1rios: Comente seu c\u00f3digo onde necess\u00e1rio, explicando o prop\u00f3sito e a l\u00f3gica complexa. Evite coment\u00e1rios \u00f3bvios e mantenha-os atualizados.</li> <li>Revis\u00e3o de C\u00f3digo: Sempre fa\u00e7a revis\u00e3o de c\u00f3digo antes do merge. Utilize pull requests para permitir que outros revisem seu c\u00f3digo e forne\u00e7am feedback.</li> <li>Testes Automatizados: Inclua testes unit\u00e1rios, de integra\u00e7\u00e3o e, se poss\u00edvel, de ponta a ponta. Use frameworks de teste apropriados como JUnit, pytest, ou Jest. Garanta que todos os testes passem antes de enviar o c\u00f3digo.</li> <li>Documenta\u00e7\u00e3o: Documente fun\u00e7\u00f5es, classes e m\u00f3dulos. Forne\u00e7a um README atualizado explicando como o c\u00f3digo funciona, como configur\u00e1-lo e como execut\u00e1-lo.</li> <li>Refatora\u00e7\u00e3o: Refatore c\u00f3digo regularmente para melhorar a estrutura e a efici\u00eancia. N\u00e3o adie a limpeza de c\u00f3digo t\u00e9cnico, pois isso pode levar a problemas maiores no futuro.</li> </ul>"},{"location":"recomendacoes/#clareza-do-codigo","title":"Clareza do c\u00f3digo","text":"<ul> <li>Nomes Descritivos: Use nomes de vari\u00e1veis, fun\u00e7\u00f5es e classes que sejam descritivos e que fa\u00e7am sentido no contexto. Evite abrevia\u00e7\u00f5es excessivas e nomes gen\u00e9ricos.</li> <li>Simplicidade: Mantenha o c\u00f3digo o mais simples poss\u00edvel. Evite complexidade desnecess\u00e1ria e divida tarefas grandes em fun\u00e7\u00f5es ou classes menores e mais manej\u00e1veis.</li> <li>Estrutura Clara: Organize o c\u00f3digo de forma l\u00f3gica e consistente. Siga uma estrutura de projeto que fa\u00e7a sentido para a equipe e para o tipo de projeto.</li> <li>Modularidade: Escreva c\u00f3digo modular. Fun\u00e7\u00f5es e classes devem ser projetadas para fazer uma coisa bem feita e ser reutiliz\u00e1veis em diferentes contextos.</li> </ul>"},{"location":"recomendacoes/#seguranca-do-codigo","title":"Seguran\u00e7a do c\u00f3digo","text":"<ul> <li>Valida\u00e7\u00e3o e Saneamento de Entrada: Sempre valide e sanitize entradas do usu\u00e1rio para evitar vulnerabilidades como SQL injection e Cross-Site Scripting (XSS).</li> <li>Gerenciamento de Depend\u00eancias: Use depend\u00eancias de fontes confi\u00e1veis e mantenha-as atualizadas. Verifique regularmente por vulnerabilidades conhecidas nas depend\u00eancias.</li> <li>Gerenciamento de Segredos: Nunca coloque segredos, como chaves de API ou credenciais, diretamente no c\u00f3digo. Utilize vari\u00e1veis de ambiente ou gerenciadores de segredos.</li> <li>Autentica\u00e7\u00e3o e Autoriza\u00e7\u00e3o: Implemente e verifique autentica\u00e7\u00e3o e autoriza\u00e7\u00e3o adequadas para proteger recursos e dados sens\u00edveis.</li> <li>Tratamento de Erros: Trate exce\u00e7\u00f5es de maneira adequada e nunca exponha mensagens de erro sens\u00edveis para o usu\u00e1rio final. Log de erros deve ser implementado de forma que seja \u00fatil para debugging e n\u00e3o comprometa a seguran\u00e7a.</li> <li>Auditoria e Log: Implemente auditoria e log para monitorar atividades suspeitas e ajudar na investiga\u00e7\u00e3o de incidentes.</li> </ul>"},{"location":"recomendacoes/#processo-de-envio-de-codigo","title":"Processo de Envio de C\u00f3digo","text":"<ul> <li>Commit Messages: Escreva mensagens de commit claras e significativas. Cada commit deve abordar uma mudan\u00e7a l\u00f3gica espec\u00edfica e a mensagem deve explicar o \"porqu\u00ea\" da mudan\u00e7a.</li> <li>Branching e Merging: Use uma estrat\u00e9gia de branching clara (por exemplo, Git Flow). Garanta que o c\u00f3digo na branch de desenvolvimento esteja sempre em um estado que pode ser integrado na branch principal.</li> <li>Revis\u00e3o de C\u00f3digo: Utilize pull requests para submeter mudan\u00e7as. Cada pull request deve ser revisado por um ou mais membros da equipe antes de ser mesclado.</li> <li>Automatiza\u00e7\u00e3o: Configure pipelines de CI/CD para automatizar a constru\u00e7\u00e3o, os testes e a implanta\u00e7\u00e3o do c\u00f3digo. Isso ajuda a detectar problemas mais cedo e facilita a entrega cont\u00ednua.</li> </ul>"}]}